{"version":3,"sources":["common/GoogleMapsApiLoader.js","pages/StatusPages.jsx","common/PersistentState/PersistentState.js","common/PersistentState/Settings.js","location_provider/XContest/XContestSocket.js","common/PersistentState/ChosenPilots.js","util/Interpolation.js","util/RunningDerivation.js","util/FindBisect.js","location_provider/XContest/FlightAnimationData.js","location_provider/XContest/FlightAnimation.js","util/HighPrecisionTimeSync.js","location_provider/XContest/XContestAnimation.js","util/EventfulState.js","location_provider/XContest/XContestInterface.js","util/rng.js","util/string2color.js","common/PilotIcon.js","services/MapViewportControllerService.js","pages/GoogleMapsPage/GoogleMapsTrack.js","pages/GoogleMapsPage/MapPilotInfoWindow.js","pages/GoogleMapsPage/MapAnimator.js","services/GPSProvider.js","pages/GoogleMapsPage/GoogleMapsController.js","pages/GoogleMapsPage/CustomButtons/ButtonIcons.js","pages/GoogleMapsPage/CustomButtons/SatelliteMapButton.js","pages/GoogleMapsPage/CustomButtons/FocusCameraMapButton.js","pages/GoogleMapsPage/LiveMap.jsx","ext/geolocation-marker.js","common/History.js","util/SubWindow.jsx","util/Rotation.js","util/LastFixState.jsx","pages/PilotSelector/PilotSelectorListRenderer.jsx","pages/PilotSelector/PilotSelectorList.jsx","util/CompareArrays.js","pages/PilotSelector/PilotSelector.jsx","util/ContextMenuHandler.js","pages/PilotList/ElevationHistogram.jsx","pages/PilotList/AnimatedPilotListEntry.jsx","common/PersistentState/PageState.js","pages/PilotList/AnimatedPilotList.jsx","util/MapLinks.js","pages/PilotList/Pilots.jsx","util/NumberInput.jsx","pages/SettingsPage/SettingsPageEntries.jsx","pages/SettingsPage/SettingsPageTitleBar.jsx","pages/SettingsPage/SettingsPage.jsx","pages/MainMenu.jsx","pages/TitleBar.jsx","MainPage.jsx","App.jsx","serviceWorker.jsx","index.js","common/PersistentState/BreakingChanges.js"],"names":["googleMapsApiPromise","useGoogleMapsApi","useState","ready","error","state","setState","useEffect","Loader","apiKey","process","load","promiseParameters","gotCanceled","then","console","log","catch","e","window","google","useStyles","makeStyles","theme","progress","margin","spacing","LoadingPage","message","hideIf","subRef","classes","Box","width","height","display","alignItems","justifyContent","ref","textAlign","CircularProgress","className","Typography","ErrorPage","fontSize","color","PersistentState","constructor","key","initialValue","getValue","jsonValue","localStorage","getItem","this","locallyCachedJson","locallyCachedValue","JSON","parse","value","_notifyAll","callbacks","cb","registerCallback","includes","push","unregisterCallback","index","indexOf","splice","setValue","removeItem","setItem","stringify","updateValue","use","newValue","registerPersistentState","name","Settings","createSetting","settingsObjects","PATH_LENGTH","LIMIT_PATHS","LOW_LATENCY","ANIMATION_DELAY","FPS_LIMIT","FPS_RATE","GPS_ENABLED","getSetting","XContestSocket","onStateChanged","onInfoMessage","onTracklogMessage","onFlightLanded","formatSubscribedFlights","subscribedFlights","map","flightId","startTimestamp","flightUuid","start","Date","toISOString","refreshSubscribedFlights","sock","readyState","WebSocket","OPEN","connected","formattedSubscribedFlights","send","tag","contents","setSubscribedFlights","flights","onOpen","handleReset","debug","setConnectionState","ConnectionState","ESTABLISHED","area","lat","lon","onMessage","evt","ACTIVE","msg","data","clearTimeout","watchdog","setTimeout","INACTIVE","processMessage","onClose","NO_CONNECTION","connect","bind","onError","dispatchInfoMessage","dispatchTracklogMessage","dispatchFlightLandedMessage","warn","CONNECTING","onopen","onmessage","onclose","onerror","ERROR","alert","persistentChosenPilots","getChosenPilotsObject","getChosenPilots","setChosenPilots","setChosenPilotsAndUpdateNames","chosenPilots","chosenPilotsUpdated","pilotList","getXContestInterface","getPilotInfos","pilotId","currentName","info","user","fullname","defaultPilotEntry","pilotName","highlighted","lastKnownPosition","addPilots","pilotIds","newPilotState","changed","removePilots","lerp","val1","val2","pct","spline","p0","t0","p1","t1","p2","t2","p3","t3","t","A1","A2","A3","B1","B2","splineDerivative","A1d","A2d","A3d","B1d","B2d","RunningDerivation","smoothingFactor","derivation_func","a","b","invalid_func","computeDiff","isInvalid","old_val","old_t","running_avg","update","new_val","new_t","dt","deriv","weight","Math","pow","reset","findBisect","targetValue","length","dataFn","minIndex","maxIndex","currentIndex","currentValue","parseTime","isoStr","round","FlightAnimationData","at","timestamp","pos","findForwardSwipe","startPos","getNewestTimestamp","counter_gpsVario","counter_baroVarion","counter_velocity","end","getDistance","clear","isAfterLastElement","append","elem","lng","baroAlt","gpsAlt","gpsVario","baroVario","velocity","newElem","elevation","replace","insert","newElements","oldElements","oldPos","newPos","oldEl","newEl","FlightAnimationDataCache","currentArrayPos","mapsPath","mapsPathNewestPos","DataGens","data1","data2","timeStamp","data0","data3","dT","d0","d1","d2","d3","fallbackData","flightInfos","lastFix","FlightAnimation","destroy","updateSettings","settings","timeOffsetSeconds","lowLatencyMode","trackLengthMinutes","limitTracks","liveDataCache","flightInfoDataCache","updateInfos","infos","landed","flightInfoData","track","updateData","data_start_time","liveData","updateLanded","getInterpolatedData","cache","blendedData","endOfTrack","startOfTrack","velocityVec","takeData","computeLinearVelocity","blendDataSpline","computeSplineVelocity","getFallbackData","computeTrack","oldestTimestamp","altitude","removeChunkSize","numRemove","slice","updateAnimation","animationTimeMillis","animationTimeSeconds","animationResult","newestDataTimestamp","lastPotentialAirtime","min","lastPotentialAirTime","HighPrecisionTimeSync","tolerance","get","currentHighPrecisionTime","currentTime","estimatedTime","offset","offBy","XContestAnimation","_nextUpdate","now","animationLoop","absTime","frameTimeDelta","_setting_fps","_setting_limitFps","newAnimationData","Object","keys","_subscribedPilots","forEach","pilot","_pilotInfos","_flightAnimations","flightAnim","_submitAnimationFrame","requestAnimationFrame","_currentAnimationData","_callbacks","setSubscribedPilots","subscribedPilots","_updateImportantFlights","pushNewInfo","pilotInfo","values","flightInfo","pushNewData","trackId","trackData","pushFlightLanded","getData","importantFlights","filter","val","username","importantFlightSet","Set","toRemove","entries","eqSet","as","bs","size","has","_subscribedFlights","flightsWithTimestamps","_setSubscribedFlightsCallback","_highPrecisionTimeSync","settings_limitFps","settings_fps","Array","from","EventfulState","set","_callbackData","NO_INFORMATION","XContestInterface","socket","pilots","onConnectionStateChanged","connectionState","onInfoMessageReceived","overriden","animation","pilotInfos","onTracklogMessageReceived","trackChunk","onFlightLandedMessageReceived","_instance","createRng","seedString","seed","xmur3","str","i","h","imul","charCodeAt","sfc32","c","d","string2color","lightness","rand","colorHue","max","convert","hsl","hex","getPilotIconColor","getPilotIcon","waitingForStart","hasLanded","path","fillColor","fillOpacity","anchor","x","y","strokeWeight","scale","rotation","getRhumbLineBearing","MapViewportControllerService","setFreeMode","oldValue","enabled","setSinglePilotMode","followSinglePilot","_emitZoomToSinglePilot","setFollowMode","mapControllers","zoomToSinglePilot","onAnimationFrame","oldState","newState","registerMapController","controller","unregisterMapController","includeSelf","getMapViewportControllerService","GoogleMapsTrack","initialData","pilotInfoWindow","setMap","marker","newestTrackSegment","_updateTrack","startTime","endTime","currentTrackVersion","oldTrack","getPath","oldLength","getLength","newPoint","maps","LatLng","setPath","_updateNewestSegment","trackEndPos","currentPos","newestTrackSegmentData","previousTrackEndPos","previousPos","point","setAt","setPosition","pilotIcon","getIcon","newPilotIcon","pilotColor","oldPilotIcon","p","pilotIconChanged","setIcon","trackColor","Marker","position","title","icon","addListener","open","Polyline","strokeColor","MapPilotInfoWindow","currentPilot","infoWindow","updateContent","close","heightGnd","newContent","vario","varioAbs","abs","floor","getContent","setContent","InfoWindow","content","pixelOffset","Size","disableAutoPan","MapAnimator","cleanupOldTracks","tracks","pilotData","GPSProvider","_updateGPSState","gpssettingEnabled","callbackRegistered","enableGps","_watchId","navigator","geolocation","watchPosition","_onNewGPSData","_onGPSError","enableHighAccuracy","clearWatch","_setGPSData","_gpsData","getGPSProvider","GoogleMapsController","getZoom","setZoom","shutdown","onGpsUpdate","gpsData","gpsState","onUserInput","insideMapsApiFunction","updateViewport","watchedCoords","previousSinglePersonMode","singlePersonMode","panTo","bounds","LatLngBounds","coord","extend","fitBounds","controllerState","viewportInitialized","coords","latitude","longitude","lastUpdate","userInputListeners","createButtonIcon","svgPath","viewBox","xmlns","svgEl","document","createElementNS","setAttribute","pathEl","appendChild","createSatelliteMapButton","controlDiv","createElement","controlUI","classList","add","onclick","getMapTypeId","MapTypeId","HYBRID","setMapTypeId","TERRAIN","createFocusCameraMapButton","pure","mapReady","mapError","mapsRef","useRef","useLayoutEffect","Map","current","center","mapTypeId","zoom","maxZoom","disableDefaultUI","zoomControl","scaleControl","fullscreenControl","styles","mapStyle","setOptions","controls","ControlPosition","TOP_LEFT","mapAnimatorUpdateCallback","geolocationMarker","createGeolocationMarker","GeolocationMarker","MVCObject","opt_map","opt_outerMarkerOpts","opt_markerOpts","opt_circleOpts","super","outerMarker_","marker_","circle_","watchId_","outerMarkerOpts","clickable","cursor","draggable","flat","SymbolPath","CIRCLE","zIndex","markerOpts","optimized","copyOptions_","circleOpts","radius","strokeOpacity","Circle","prototype","call","maximumAge","bindTo","invalidPropertiesExpr_","test","Error","getMap","getPositionOptions","setPositionOptions","positionOpts","getPosition","getBounds","getAccuracy","getMinimumAccuracy","setMinimumAccuracy","accuracy","watchPosition_","unbind","setOuterMarkerOptions","setMarkerOptions","setCircleOptions","updatePosition_","newPosition","mapNotSet","equals","geolocationError_","event","trigger","target","source","opt","DISALLOWED_OPTIONS","geolocationMarkerStateUpdater","mapController","Fragment","ourHistory","addEventListener","callback","pop","history","pushState","passive","SubWindow","props","_setOpen","historyOpen","_setHistoryOpen","histSize","back","Dialog","fullScreen","maxWidth","fullWidth","children","getRotationStyle","bearing","transform","toString","WebkitTransform","MozTransform","msTransform","OTransform","LastFixState","React","PureComponent","getMessage","relative","showLastFix","time_diff","getTime","timeStr","formatTimeDiff","millis","negative","secs","mins","hours","padStart","days","timestampToTimeString","toLocaleTimeString","shallowRerender","msgRef","msgSpan","assign","style","innerHTML","createRef","render","LastFixArrow","onNewGPSDataReceived","updateThroughRef","setFix","newFix","arrowRef","arrowStyle","getArrowRotationStyle","distanceRef","newDistance","componentDidMount","componentWillUnmount","myPosition","pilotFix","distance","TableHeader","TableCell","component","variant","boxSizing","flex","PilotSelectorListRow","iso","disabled","undefined","paddingLeft","paddingTop","paddingBottom","paddingRight","marginLeft","boxShadow","verticalAlign","toLowerCase","renderRow","nationality","selected","alreadyAdded","padding","backgroundColor","onClick","onPilotClicked","sortPilotList","gps","myPos","distances","sort","el1","el2","el","PilotSelectorList","startRendering","didMount","updatePilotListIfNecessary","newPilotList","arraysEqual","array1","array2","l","sortedPilotList","onNewGpsData","onNewPilotInfos","overflow","disableShrink","displayedPilots","search","matchesSearch","filteredPilots","filterPilotList","itemCount","itemSize","itemData","itemKey","fullHeightWindow","useTheme","useMediaQuery","breakpoints","down","setSelected","setSearch","numSelected","closeWindow","paper","Toolbar","palette","type","secondary","main","lighten","light","text","primary","dark","id","TextField","autoComplete","label","onChange","marginY","flexDirection","selectedIndex","newSelected","concat","DialogActions","Button","onAddPilots","longPressDuration","platform","ContextMenuHandler","onTouchStart","contextMenuPossible","touch","touches","longPressCountdown","onTouchMove","onTouchCancel","onTouchEnd","onContextMenu","preventDefault","ElevationHistogram","prepareCanvasAndComputeLimits","canvas","dpr","devicePixelRatio","rect","getBoundingClientRect","finalTimestamp","beginningTimestamp","renderCanvas","minValue","maxValue","timeFrame","currentElevation","getCoord","time","lastKnownElevationY","ctx","getContext","alpha","fillStyle","COLOR_GROUND","fillRect","COLOR_SKY","strokeStyle","COLOR_PILOT","beginPath","moveTo","lineTo","currentY","fill","lineWidth","lineJoin","lineCap","stroke","canvasRef","lastRenderedTimestamp","currentHeight","HEIGHT_MARGIN","HEIGHT_STEPS","ceil","maxValueRef","textContent","minValueRef","onNewAnimationData","componentDidUpdate","marginTop","marginBottom","canvasParentRef","FirstRowLeft","styled","FirstRowRight","marginRight","SecondRow","PilotExpansionPanelSummary","withStyles","root","whiteSpace","ExpansionPanelSummary","PilotExpansionPanelDetails","MozUserSelect","WebkitUserSelect","msUserSelect","ExpansionPanelDetails","DetailsStats","DetailsGraph","DetailsRow","DetailTimerIcon","TimerIcon","DetailDistanceIcon","DoubleArrowIcon","DetailLaunchIcon","FlagIcon","AnimatedPilotListEntry","extractImportantProps","velocityLat","velocityLng","propsChanged","newProps","oldProps","pilotProps","onNewDataReceived","newPilotProps","stateChanges","stateChangesFromPilotInfos","allInfos","processInfo","launch","launchPoint","contest","score","toFixed","heightRef","newHeight","renderHeight","lastFixRef","iconRef","childNodes","getAttribute","liveStateRef","flightDurationRef","newFlightDuration","renderFlightDuration","launchTime","launchSite","scoreDistance","scoreType","contextMenuHandler","onContextMenuHandler","left","pageX","top","pageY","duration","durationMinutes","scoreTypes","pilotIconRotation","ExpansionPanel","TransitionProps","unmountOnExit","expandIcon","renderScore","FlatTriangle","FaiTriangle","FreeFlight","TabID","switchToMap","AnimatedPilotList","getSortedPilotList","pilotsAndDistances","landedPilotList","pilotListChanged","onlinePilots","removePilot","showContextMenu","mousePos","contextMenu","hideContextMenu","contextMenu_delete","contextMenu_navigateTo","navigateTo","contextMenu_showOnMap","PageState","pilotIsOnline","offlinePilots","getPilotName","bgcolor","Popover","anchorReference","anchorPosition","transformOrigin","vertical","horizontal","List","dense","ListItem","button","ListItemIcon","ListItemText","Pilots","Component","openPilotSelector","pilotSelectorOpen","closePilotSelector","chosenPilotsChanged","newChosenPilots","bottom","right","Fab","NumberInput","internalUpdate","resultState","hiddenLabel","InputProps","endAdornment","InputAdornment","unit","inputProps","BooleanSetting","setting","settingValue","setSettingValue","flipSetting","primaryText","secondaryText","ListItemSecondaryAction","Switch","edge","checked","NumberSetting","SettingsPageTitleBar","resetAllSettingsDialogOpen","setResetAllSettingsDialogOpen","AppBar","IconButton","flexGrow","DialogTitle","DialogContent","DialogContentText","settingsObj","autoFocus","SettingsPage","settingLimitPaths","settingFpsLimit","Divider","MainMenu","settingsOpen","setSettingsOpen","SwipeableDrawer","disableSwipeToOpen","minWidth","clone","popover","align","LoadingBadge","Badge","anchorOrigin","badgeContent","thickness","popoverActions","connectionPopAnchor","setConnectionPopAnchor","mainMenuOpen","setMainMenuOpen","updatePosition","currentTarget","renderConnectionIcon","Boolean","anchorEl","action","MainPage","tabId","setTabId","windowHeight","setWindowHeight","isSmartphone","updateWindowHeight","innerHeight","removeEventListener","BottomNavigation","_event","showLabels","BottomNavigationAction","App","location","hostname","match","require","config","resolveBreakingChanges","fixChosenPilots","chosenPilotsObject","chosenPilot","ReactDOM","getElementById","unregister","serviceWorker","registration"],"mappings":";66BAIA,IAAIA,EAAuB,KA6CZC,MA5Cf,SAASA,mBAAmB,QAEAC,mBAAS,CACjCC,OAAO,EACPC,OAAO,IAJiB,mBAEnBC,EAFmB,KAEZC,EAFY,KAyC1B,OAlCAC,oBACE,KAC+B,OAAzBP,IACFA,EAAuB,IAAIQ,IAAO,CAChCC,OAAQC,4CACPC,QAGL,IAAIC,EAAoB,CAAEC,aAAa,GAmBvC,OAlBAb,EACGc,KAAK,KACAF,EAAkBC,cACtBE,QAAQC,IAAI,2BACZV,EAAS,CACPH,OAAO,EACPC,OAAO,OAGVa,MAAMC,IACDN,EAAkBC,cACtBE,QAAQC,IAAI,sCAAuCE,GACnDZ,EAAS,CACPH,OAAO,EACPC,OAAO,OAIN,KACLQ,EAAkBC,aAAc,IAGpC,IAGK,CAACR,EAAMF,MAAOE,EAAMD,MAAOC,EAAMF,MAAQgB,OAAOC,OAAS,O,4CCxClE,MAAMC,EAAYC,YAAWC,IAAK,CAChCC,SAAU,CACRC,OAAQF,EAAMG,QAAQ,OAIbC,YAAc,EAAGC,UAASC,SAAQC,aAC7C,MAAMC,EAAUV,IAChB,OACE,kBAACW,EAAA,EAAD,CACEC,MAAM,OACNC,OAAO,OACPC,QAASN,EAAS,OAAS,OAC3BO,WAAW,SACXC,eAAe,SACfC,IAAKR,GAEL,kBAACE,EAAA,EAAD,CAAKO,UAAU,UACb,kBAACC,EAAA,EAAD,CAAkBC,UAAWV,EAAQP,WACrC,kBAACkB,EAAA,EAAD,KAAad,MAMRe,UAAY,EAAGf,UAASC,aACnC,MAAME,EAAUV,IAChB,OACE,kBAACW,EAAA,EAAD,CACEC,MAAM,OACNC,OAAO,OACPC,QAASN,EAAS,OAAS,OAC3BO,WAAW,SACXC,eAAe,UAEf,kBAACL,EAAA,EAAD,CAAKO,UAAU,UACb,kBAAC,IAAD,CACEK,SAAS,QACTC,MAAM,QACNJ,UAAWV,EAAQP,WAErB,kBAACkB,EAAA,EAAD,CAAYG,MAAM,SAASjB,M,qBC7CnC,MAAMkB,gCACJC,YAAYC,EAAKC,GAAe,KAShCC,SAAW,KACT,MAAMC,EAAYC,aAAaC,QAAQC,KAAKN,KAIxCM,KAAKC,oBAAsBJ,IAC7BG,KAAKC,kBAAoBJ,EACzBG,KAAKE,mBAAqBC,KAAKC,MAAMP,IAGvC,MAAMQ,EAAQL,KAAKE,mBACnB,OAAc,OAAVG,EAAuBL,KAAKL,aACzBU,GArBsB,KAwB/BC,WAAa,KACX,MAAMD,EAAQL,KAAKJ,WADF,oBAEAI,KAAKO,WAFL,IAEjB,2BAAiC,EAC/BC,EAD+B,SAC5BH,IAHY,gCAxBY,KA+B/BI,iBAAmBD,IACZR,KAAKO,UAAUG,SAASF,IAAKR,KAAKO,UAAUI,KAAKH,IAhCzB,KAmC/BI,mBAAqBJ,IACnB,MAAMK,EAAQb,KAAKO,UAAUO,QAAQN,GACjCK,GAAS,GACXb,KAAKO,UAAUQ,OAAOF,EAAO,IAtCF,KA0C/BG,SAAWX,IACI,MAATA,EACFP,aAAamB,WAAWjB,KAAKN,KAE7BI,aAAaoB,QAAQlB,KAAKN,IAAKS,KAAKgB,UAAUd,IAGhDL,KAAKM,cAjDwB,KAoD/Bc,YAAcZ,IACZR,KAAKgB,SAASR,EAAGR,KAAKJ,cArDO,KAwD/ByB,IAAM,KAAO,MAAD,EACgBzE,mBAASoD,KAAKJ,UAD9B,mBACHS,EADG,KACIW,EADJ,KAaV,OAVA/D,oBAAU,KACR,MAAMuD,GAAKc,IAETN,EAASM,IAIX,OADAtB,KAAKS,iBAAiBD,IACf,IAAMR,KAAKY,mBAAmBJ,KACpC,IAEI,CAACH,EAAOL,KAAKgB,WApEpBhB,KAAKN,IAAMA,EACXM,KAAKL,aAAeA,EACpBK,KAAKO,UAAY,GAEjBP,KAAKC,kBAAoB,KACzBD,KAAKE,mBAAqB,MAmEvB,MAAMqB,wBAA0B,CAACC,EAAM7B,IACrC,IAAIH,gCAAgBgC,EAAM7B,GC1EtB8B,EACE,cADFA,EAEE,cAFFA,EAGE,cAHFA,EAIM,kBAJNA,EAKA,YALAA,EAMD,WANCA,EAOE,cAITC,cAAgB,CAAChC,EAAKW,IAC1BkB,wBAAwB,YAAc7B,EAAKW,GAGvCsB,EAAkB,CACtBC,YAAaF,cAAcD,EAAsB,IACjDI,YAAaH,cAAcD,GAAsB,GACjDK,YAAaJ,cAAcD,GAAsB,GACjDM,gBAAiBL,cAAcD,EAA0B,IACzDO,UAAWN,cAAcD,GAAoB,GAC7CQ,SAAUP,cAAcD,EAAmB,IAC3CS,YAAaR,cAAcD,GAAsB,IAGtCU,WAAazC,GAAOiC,EAAgBjC,GCzBlC,MAAM0C,8BACnB3C,YACE4C,EACAC,EACAC,EACAC,GACC,KAkCHC,wBAA0B,IACCzC,KAAK0C,kBAAkBC,IAC9C,EAAEC,EAAUC,MAKH,CAAEC,WAAYF,EAAUG,MAHV,OAAnBF,EACI,KACA,IAAIG,KAAK,IAAOH,GAAgBI,iBAxC1C,KAgDFC,yBAA2B,KACzB,GAAIlD,KAAKmD,KAAKC,aAAeC,UAAUC,MAAQtD,KAAKuD,UAAW,CAC7D,MAAMC,EAA6BxD,KAAKyC,0BAExCzC,KAAKmD,KAAKM,KACRtD,KAAKgB,UAAU,CACbuC,IAAK,YACLC,SAAUH,OAvDhB,KA6DFI,qBAAwBC,IACtB7D,KAAK0C,kBAAoBmB,EACzB7D,KAAKkD,4BA/DL,KAkEFY,OAAS,KACP9D,KAAK+D,cACLtG,QAAQuG,MAAM,oBACdhE,KAAKiE,mBAAmBC,EAAgBC,aACxCnE,KAAKuD,WAAY,EAGjBvD,KAAKmD,KAAKM,KACRtD,KAAKgB,UAAU,CACbuC,IAAK,gBACLU,KAAM,CACJ,CAAEC,KAAM,GAAIC,KAAM,KAClB,CAAED,IAAK,GAAIC,IAAK,SAOtBtE,KAAKmD,KAAKM,KACRtD,KAAKgB,UAAU,CAAEuC,IAAK,mBAAoBC,SAAU,eAItD,MAAMH,EAA6BxD,KAAKyC,0BACxCzC,KAAKmD,KAAKM,KACRtD,KAAKgB,UAAU,CACbuC,IAAK,YACLC,SAAUH,MA9Fd,KAmGFe,UAAaC,IACX/G,QAAQuG,MAAM,uBACdhE,KAAKiE,mBAAmBC,EAAgBO,QAExC,IAAIC,EAAMvE,KAAKC,MAAMoE,EAAIG,MAGzBC,aAAa5E,KAAK6E,UAClB7E,KAAK6E,SAAWC,WAAW,KACzB9E,KAAKiE,mBAAmBC,EAAgBa,WACvC,KAGH/E,KAAKgF,eAAeN,IAhHpB,KAmHFO,QAAWT,IACTxE,KAAKuD,WAAY,EACjB9F,QAAQuG,MAAM,qBACdhE,KAAKiE,mBAAmBC,EAAgBgB,eAExCJ,WAAW9E,KAAKmF,QAAQC,KAAKpF,MAAO,MAxHpC,KA2HFqF,QAAWb,IACTxE,KAAKuD,WAAY,EACjB9F,QAAQuG,MAAM,sBA7Hd,KAiIFD,YAAc,KACZtG,QAAQC,IAAI,wBAlIZ,KAoIFsH,eAAkBN,IAChB,GAAM,QAASA,EAIf,OAAQA,EAAIhB,KACV,IAAK,kBACH1D,KAAKsF,oBAAoBZ,EAAIf,UAC7B,MACF,IAAK,kBACH3D,KAAKuF,wBAAwBb,GAC7B,MACF,IAAK,mBACH1E,KAAKwF,4BAA4Bd,EAAI5B,YACrC,MACF,QACErF,QAAQgI,KAAR,wCAA8Cf,EAAIhB,IAAlD,MAA2DgB,QAd7DjH,QAAQgI,KAAK,mCAAoCf,IArInD1E,KAAKiE,mBAAqB5B,EAC1BrC,KAAKsF,oBAAsBhD,EAC3BtC,KAAKuF,wBAA0BhD,EAC/BvC,KAAKwF,4BAA8BhD,EACnCxC,KAAK0C,kBAAoB,GACzB1C,KAAKmF,UACLnF,KAAKuD,WAAY,EAGjBpB,WAAWV,GAAsBhB,iBAC/BT,KAAKkD,0BAEPf,WAAWV,GAAsBhB,iBAC/BT,KAAKkD,0BAITiC,UACM,cAAetH,QACjBmC,KAAKuD,WAAY,EACjBvD,KAAKiE,mBAAmBC,EAAgBwB,YACxC1F,KAAKmD,KAAO,IAAIE,UAAU,6CAC1BrD,KAAKmD,KAAKwC,OAAS3F,KAAK8D,OACxB9D,KAAKmD,KAAKyC,UAAY5F,KAAKuE,UAC3BvE,KAAKmD,KAAK0C,QAAU7F,KAAKiF,QACzBjF,KAAKmD,KAAK2C,QAAU9F,KAAKqF,UAEzBrF,KAAKiE,mBAAmBC,EAAgB6B,OAExCC,MAAM,8C,WCpCZ,MAAMC,EAAyB1E,wBAAwB,gBAAiB,IAE3D2E,sBAAwB,IAAMD,EAEpC,SAASE,kBACd,OAAOF,EAAuBrG,WAGzB,SAASwG,gBAAgB9E,GAC9B7D,QAAQC,IAAI,4BAA6B4D,GACzC2E,EAAuBjF,SAASM,GAK3B,SAAS+E,8BAA8BC,EAAe,MAC3D,IAAIC,GAAsB,EAGL,OAAjBD,IACFA,EAAY,eAAQH,mBACpBI,GAAsB,GAGxB,MAAMC,EAAYC,uBAAuBC,gBAEzC,IAAK,MAAMC,KAAWL,EACpB,GAAIK,KAAWH,EAAW,CAExB,MAAMI,EAAcJ,EAAUG,GAASE,KAAKC,KAAKC,SAK7CH,IAHiBN,EAAaK,GAASnF,OAIzC8E,EAAaK,GAASnF,KAAOoF,EAC7BL,GAAsB,GAMxBA,GACFH,gBAAgBE,GAKb,MAAMU,kBAAqBC,IAAD,CAC/BzF,KAAMyF,EACNC,aAAa,EACbC,kBAAmB,OAIRC,UAAaC,IACxB,MAAMC,EAAa,eAAQnB,mBAC3B,IAAIoB,GAAU,EAFuB,oBAGfF,GAHe,IAGrC,2BAAgC,CAAC,MAAtBV,EAAqB,QACxBA,KAAWW,IACfA,EAAcX,GAAWK,kBAAkBL,GAC3CY,GAAU,IANuB,8BAUjCA,GACFlB,8BAA8BiB,IAKrBE,aAAgBH,IAC3B,MAAMC,EAAa,eAAQnB,mBAE3B,IAAIoB,GAAU,EAH0B,oBAIlBF,GAJkB,IAIxC,2BAAgC,CAAC,MAAtBV,EAAqB,QAC1BA,KAAWW,WACNA,EAAcX,GACrBY,GAAU,IAP0B,8BAWpCA,GACFnB,gBAAgBkB,ICtFPG,KAAO,CAACC,EAAMC,EAAMC,IAClB,OAATD,EACKD,EAEI,OAATA,EACKC,GAED,EAAMC,GAAOF,EAAOE,EAAMD,EAKvBE,OAAS,CAACC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,KAIrDH,GAAMJ,EACNM,GAAMN,EAIN,MAAMQ,IAAOP,EAAKF,IAHlBQ,GAAKP,GAGuBD,GAN5BG,GAAMF,GAMgCC,GAFtCD,EAAK,KAE6CE,EAAKF,GACjDS,IAAON,EAAKF,GAAMM,EAAIN,EAAKG,EAAKD,EAAKD,IAAOE,EAAKF,GACjDQ,IAAOL,EAAKF,GAAMI,EAAIJ,EAAKG,EAAKD,EAAKD,IAAOE,EAAKF,GAEjDO,IAAOF,EAAKD,GAAMD,EAAIC,EAAKJ,EAAKK,EAAKT,IAAOI,EAAKJ,GACjDY,IAAOF,EAAKD,GAAMF,EAAIE,EAAKH,EAAKI,EAAKR,IAAOI,EAAKJ,GAIvD,QAFYU,EAAKD,GAAMJ,EAAII,EAAKP,EAAKQ,EAAKV,IAAOE,EAAKF,IAK3CW,iBAAmB,CAACd,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,KAI/DH,GAAMJ,EACNM,GAAMN,EAIN,MAAMQ,IAAOP,EAAKF,IAHlBQ,GAAKP,GAGuBD,GAN5BG,GAAMF,GAMgCC,GAFtCD,EAAK,KAE6CE,EAAKF,GACjDS,IAAON,EAAKF,GAAMM,EAAIN,EAAKG,EAAKD,EAAKD,IAAOE,EAAKF,GACjDQ,IAAOL,EAAKF,GAAMI,EAAIJ,EAAKG,EAAKD,EAAKD,IAAOE,EAAKF,GAEjDU,GAAOb,EAAKF,IAAOG,EAAKF,GACxBe,GAAOZ,EAAKF,IAAOG,EAAKF,GACxBc,GAAOX,EAAKF,IAAOG,EAAKF,GAKxBa,GAAOF,EAAMR,EAAIE,EAAKK,EAAMP,EAAIC,EAAKM,EAAMV,EAAKW,EAAMf,IAAOI,EAAKJ,GAClEkB,GAAOF,EAAMT,EAAIG,EAAKK,EAAMR,EAAIE,EAAKM,EAAMT,EAAKU,EAAMd,IAAOI,EAAKJ,GAIxE,OAFYgB,EAAMX,IALLG,EAAKD,GAAMF,EAAIE,EAAKH,EAAKI,EAAKR,IAAOI,EAAKJ,GAK5Be,EAAMV,IANpBE,EAAKD,GAAMD,EAAIC,EAAKJ,EAAKK,EAAKT,IAAOI,EAAKJ,GAMbiB,EAAMb,EAAKc,EAAMhB,IAAOE,EAAKF,ICxD1D,MAAMiB,kBACnBzJ,YACE0J,EACAC,EAAkB,EAACC,EAAGC,IAAMA,EAAID,GAChCE,EAAeF,IAAW,OAANA,IAEpBrJ,KAAKwJ,YAAcJ,EACnBpJ,KAAKyJ,UAAYF,EACjBvJ,KAAK0J,QAAU,KACf1J,KAAK2J,MAAQ,KACb3J,KAAK4J,YAAc,KACnB5J,KAAKmJ,gBAAkBA,EAGzBU,OAAOC,EAASC,GACd,GACmB,OAAjB/J,KAAK0J,SACO,OAAZI,GACe,OAAf9J,KAAK2J,OACK,OAAVI,GACA/J,KAAKyJ,UAAUzJ,KAAK0J,UACpB1J,KAAKyJ,UAAUK,IACf9J,KAAK2J,QAAU3J,KAAK+J,MAIpB,OAFA/J,KAAK0J,QAAUI,EACf9J,KAAK2J,MAAQI,EACN,KAGT,IAAIC,EAAKD,EAAQ/J,KAAK2J,MAElBM,EADOjK,KAAKwJ,YAAYxJ,KAAK0J,QAASI,GACvBE,EAEfE,EAASC,KAAKC,IAAIpK,KAAKmJ,gBAAiBa,GAS5C,OARyB,OAArBhK,KAAK4J,YACP5J,KAAK4J,YAAcK,EAEnBjK,KAAK4J,YAAcM,EAASlK,KAAK4J,aAAe,EAAMM,GAAUD,EAGlEjK,KAAK0J,QAAUI,EACf9J,KAAK2J,MAAQI,EACN/J,KAAK4J,YAGdS,QACErK,KAAK0J,QAAU,KACf1J,KAAK2J,MAAQ,KACb3J,KAAK4J,YAAc,M,YC1BRU,eAtBI,CAACC,EAAaC,EAAQC,KACvC,GAAID,EAAS,EAAG,OAAO,EAEvB,IAAIE,GAAY,EACZC,EAAWH,EACXI,EAAe,EACfC,EAAe,KAEnB,KAAOH,EAAWC,EAAW,GAC3BC,GAAiBF,EAAWC,GAAY,EAAK,EAC7CE,EAAeJ,EAAOG,GAElBC,EAAeN,EACjBG,EAAWE,EAEXD,EAAWC,EAIf,OAAOD,GCfF,MAAMG,UAAaC,GACjBZ,KAAKa,MAAMhI,KAAK5C,MAAM2K,GAAU,KAG1B,MAAME,wCACnBxL,cAAe,KAWfyL,GAAMrK,GAAUb,KAAK2E,KAAK9D,GAXZ,KAuIdyJ,WAAca,GACLb,WAAWa,EAAWnL,KAAK2E,KAAK6F,OAASY,GAAQpL,KAAK2E,KAAKyG,GAAK9C,GAxI3D,KA2Id+C,iBAAmB,CAACF,EAAWG,KAC7B,IAAIF,EAAME,EACV,KAAOF,EAAMpL,KAAK2E,KAAK6F,QAAUxK,KAAK2E,KAAKyG,GAAK9C,EAAI6C,GAClDC,GAAO,EAET,OAAOA,GAhJK,KAmJdG,mBAAqB,IACfvL,KAAK2E,KAAK6F,OAAS,EAAU,KAC1BxK,KAAK2E,KAAK3E,KAAK2E,KAAK6F,OAAS,GAAGlC,EApJvCtI,KAAK2E,KAAO,GACZ3E,KAAKwL,iBAAmB,IAAItC,kBAAkB,IAC9ClJ,KAAKyL,mBAAqB,IAAIvC,kBAAkB,IAChDlJ,KAAK0L,iBAAmB,IAAIxC,kBAC1B,GACA,CAACnG,EAAO4I,IAAQC,sBAAY7I,EAAO4I,EAAK,KACxC,KAAM,GAMVE,QAEE7L,KAAK2E,KAAO,GACZ3E,KAAKwL,iBAAmB,IAAItC,kBAAkB,IAC9ClJ,KAAKyL,mBAAqB,IAAIvC,kBAAkB,IAChDlJ,KAAK0L,iBAAmB,IAAIxC,kBAC1B,GACA,CAACnG,EAAO4I,IAAQC,sBAAY7I,EAAO4I,EAAK,KACxC,KAAM,GAIV,aACE,OAAO3L,KAAK2E,KAAK6F,OAGnBsB,mBAAmBX,GACjB,OAAInL,KAAK2E,KAAK6F,QAAU,GACjBxK,KAAK2E,KAAK3E,KAAK2E,KAAK6F,OAAS,GAAGlC,EAAI6C,EAG7CY,OAAOpH,GAAO,IAAD,gBACQA,GADR,IACX,2BAAyB,CAAC,MAAfqH,EAAc,QACjBb,EAAYL,UAAUkB,EAAKb,WAC3BC,EAAM,CAAE/G,IAAK2H,EAAK3H,IAAK4H,IAAKD,EAAK1H,KAEjC4H,EAA2B,IAAjBF,EAAKE,QAAgB,KAAOF,EAAKE,QAC3CC,EAAyB,IAAhBH,EAAKG,OAAe,KAAOH,EAAKG,OAGzCC,EAAWpM,KAAKwL,iBAAiB3B,OAAOsC,EAAQhB,GAChDkB,EAAYrM,KAAKyL,mBAAmB5B,OAAOqC,EAASf,GACpDmB,EAAWtM,KAAK0L,iBAAiB7B,OAAOuB,EAAKD,GAE7CoB,EAAU,CACdL,QAASA,EACTC,OAAQA,EACRK,UAAWR,EAAKQ,UAChBpB,IAAKA,EACLgB,SAAUA,EACVC,UAAWA,EACXC,SAAUA,EACVhE,EAAG6C,GAELnL,KAAK2E,KAAKhE,KAAK4L,IAvBN,+BA2BbE,QAAQ9H,GACN3E,KAAK6L,QACL7L,KAAK+L,OAAOpH,GAGd+H,OAAO/H,GACL,MAAMgI,EAAc,GADT,oBAEQhI,GAFR,IAEX,2BAAyB,CAAC,MAAfqH,EAAc,QACjBb,EAAYL,UAAUkB,EAAKb,WAC3BC,EAAM,CAAE/G,IAAK2H,EAAK3H,IAAK4H,IAAKD,EAAK1H,KAIjCiI,EAAU,CACdL,QAJ+B,IAAjBF,EAAKE,QAAgB,KAAOF,EAAKE,QAK/CC,OAJ6B,IAAhBH,EAAKG,OAAe,KAAOH,EAAKG,OAK7CK,UAAWR,EAAKQ,UAChBpB,IAAKA,EACLgB,SAAU,KACVC,UAAW,KACXC,SAAU,KACVhE,EAAG6C,GAELwB,EAAYhM,KAAK4L,IAlBR,8BAsBX,MAAMK,EAAc5M,KAAK2E,KACzB3E,KAAK2E,KAAO,GAEZ,IAAIkI,EAAS,EACTC,EAAS,EAEb,OACMD,GAAUD,EAAYpC,QAAUsC,GAAUH,EAAYnC,SACrD,GAAIqC,GAAUD,EAAYpC,OAC7BxK,KAAK2E,KAAKhE,KAAKgM,EAAYG,IAC3BA,GAAU,OACL,GAAIA,GAAUH,EAAYnC,OAC/BxK,KAAK2E,KAAKhE,KAAKiM,EAAYC,IAC3BA,GAAU,MACL,CACL,MAAME,EAAQH,EAAYC,GACpBG,EAAQL,EAAYG,GAEtBE,EAAM1E,EAAIyE,EAAMzE,GAClBtI,KAAK2E,KAAKhE,KAAKqM,GACfF,GAAU,GACDC,EAAMzE,EAAI0E,EAAM1E,GACzBtI,KAAK2E,KAAKhE,KAAKoM,GACfF,GAAU,IAEV7M,KAAK2E,KAAKhE,KAAKqM,GACfH,GAAU,EACVC,GAAU,GAMhB9M,KAAKwL,iBAAiBnB,QACtBrK,KAAKyL,mBAAmBpB,QACxBrK,KAAK0L,iBAAiBrB,QAzDX,oBA0DMrK,KAAK2E,MA1DX,IA0DX,2BAA4B,CAAC,IAApBqH,EAAmB,QAC1B,MAAMI,EAAWpM,KAAKwL,iBAAiB3B,OAAOmC,EAAKG,OAAQH,EAAK1D,GAC1D+D,EAAYrM,KAAKyL,mBAAmB5B,OAAOmC,EAAKE,QAASF,EAAK1D,GAC9DgE,EAAWtM,KAAK0L,iBAAiB7B,OAAOmC,EAAKZ,IAAKY,EAAK1D,GAE7D0D,EAAKI,SAAWA,EAChBJ,EAAKK,UAAYA,EACjBL,EAAKM,SAAWA,GAjEP,gCCvEf,MAAMW,yBASJxN,cAAe,KAMf4K,MAAQ,KACNrK,KAAKkN,gBAAkB,KACvBlN,KAAKmN,SAAW,GAChBnN,KAAKoN,kBAAoB,GARzBpN,KAAKkN,gBAAkB,KACvBlN,KAAKmN,SAAW,GAChBnN,KAAKoN,kBAAoB,GAU7B,MAAMC,yBAgBJ,gBAAgB1I,GACd,MAAO,CACLuH,QAASvH,EAAKuH,QACdC,OAAQxH,EAAKwH,OACbK,UAAW7H,EAAK6H,UAChBpB,IAAK,CACH/G,IAAKM,EAAKyG,IAAI/G,IACd4H,IAAKtH,EAAKyG,IAAIa,KAEhBG,SAAUzH,EAAKyH,SACfC,UAAW1H,EAAK0H,UAChBC,SAAU3H,EAAK2H,UAInB,iBAAiBgB,EAAOC,EAAOC,GAC7B,MAAM5F,GAAO4F,EAAYF,EAAMhF,IAAMiF,EAAMjF,EAAIgF,EAAMhF,GACrD,MAAO,CACL4D,QAASzE,KAAK6F,EAAMpB,QAASqB,EAAMrB,QAAStE,GAC5CuE,OAAQ1E,KAAK6F,EAAMnB,OAAQoB,EAAMpB,OAAQvE,GACzC4E,UAAW/E,KAAK6F,EAAMd,UAAWe,EAAMf,UAAW5E,GAClDwD,IAAK,CACH/G,IAAKoD,KAAK6F,EAAMlC,IAAI/G,IAAKkJ,EAAMnC,IAAI/G,IAAKuD,GACxCqE,IAAKxE,KAAK6F,EAAMlC,IAAIa,IAAKsB,EAAMnC,IAAIa,IAAKrE,IAE1CwE,SAAU3E,KAAK6F,EAAMlB,SAAUmB,EAAMnB,SAAUxE,GAC/CyE,UAAW5E,KAAK6F,EAAMjB,UAAWkB,EAAMlB,UAAWzE,GAClD0E,SAAU7E,KAAK6F,EAAMhB,SAAUiB,EAAMjB,SAAU1E,IAInD,uBAAuB6F,EAAOH,EAAOC,EAAOG,EAAOF,GACjD,MAAM5F,GAAO4F,EAAYF,EAAMhF,IAAMiF,EAAMjF,EAAIgF,EAAMhF,GACrD,MAAO,CACL4D,QAASzE,KAAK6F,EAAMpB,QAASqB,EAAMrB,QAAStE,GAC5CuE,OAAQ1E,KAAK6F,EAAMnB,OAAQoB,EAAMpB,OAAQvE,GACzC4E,UAAW/E,KAAK6F,EAAMd,UAAWe,EAAMf,UAAW5E,GAClDwD,IAAK,CACH/G,IAAKwD,OACH4F,EAAMrC,IAAI/G,IACVoJ,EAAMnF,EACNgF,EAAMlC,IAAI/G,IACViJ,EAAMhF,EACNiF,EAAMnC,IAAI/G,IACVkJ,EAAMjF,EACNoF,EAAMtC,IAAI/G,IACVqJ,EAAMpF,EACNkF,GAEFvB,IAAKpE,OACH4F,EAAMrC,IAAIa,IACVwB,EAAMnF,EACNgF,EAAMlC,IAAIa,IACVqB,EAAMhF,EACNiF,EAAMnC,IAAIa,IACVsB,EAAMjF,EACNoF,EAAMtC,IAAIa,IACVyB,EAAMpF,EACNkF,IAGJpB,SAAU3E,KAAK6F,EAAMlB,SAAUmB,EAAMnB,SAAUxE,GAC/CyE,UAAW5E,KAAK6F,EAAMjB,UAAWkB,EAAMlB,UAAWzE,GAClD0E,SAAU7E,KAAK6F,EAAMhB,SAAUiB,EAAMjB,SAAU1E,IAInD,6BAA6B0F,EAAOC,GAClC,MAAMtF,EAAKqF,EAAMhF,EACXH,EAAKoF,EAAMjF,EACjB,GAAIL,IAAOE,EAAI,OAAO,KAEtB,MAAMwF,EAAKxF,EAAKF,EAEVD,EAAKsF,EAAMlC,IACXlD,EAAKqF,EAAMnC,IAIjB,MAAO,CAAE/G,KAFK6D,EAAG7D,IAAM2D,EAAG3D,KAAOsJ,EAEb1B,KADN/D,EAAG+D,IAAMjE,EAAGiE,KAAO0B,GAInC,6BAA6BC,EAAIC,EAAIC,EAAIC,EAAIzF,GAC3C,MAAMP,EAAK6F,EAAGtF,EACRL,EAAK4F,EAAGvF,EACRH,EAAK2F,EAAGxF,EACRD,EAAK0F,EAAGzF,EAERR,EAAK8F,EAAGxC,IACRpD,EAAK6F,EAAGzC,IACRlD,EAAK4F,EAAG1C,IACRhD,EAAK2F,EAAG3C,IA0Bd,MAAO,CAAE/G,IAxBIuE,iBACXd,EAAGzD,IACH0D,EACAC,EAAG3D,IACH4D,EACAC,EAAG7D,IACH8D,EACAC,EAAG/D,IACHgE,EACAC,GAekB2D,IAZPrD,iBACXd,EAAGmE,IACHlE,EACAC,EAAGiE,IACHhE,EACAC,EAAG+D,IACH9D,EACAC,EAAG6D,IACH5D,EACAC,KAlIA+E,yBACGW,aAAgBC,IACd,CACL/B,QAAS+B,EAAYC,QAAQhC,QAC7BC,OAAQ8B,EAAYC,QAAQ/B,OAC5BK,UAAWyB,EAAYC,QAAQ1B,UAC/BpB,IAAK,CACH/G,IAAK4J,EAAYC,QAAQ7J,IACzB4H,IAAKgC,EAAYC,QAAQ5J,KAE3B8H,SAAU,KACVC,UAAW,KACXC,SAAU,OAwaD6B,MA3Sf,MAAMA,gCACJ1O,YAAYwO,GAAc,KA0B1BG,QAAU,KACRjM,WAAWV,GAA0Bb,mBACnCZ,KAAKqO,gBAEPlM,WAAWV,GAAsBb,mBAAmBZ,KAAKqO,gBACzDlM,WAAWV,GAAsBb,mBAAmBZ,KAAKqO,gBACzDlM,WAAWV,GAAsBb,mBAAmBZ,KAAKqO,iBAhClC,KAmCzBA,eAAiB,KACfrO,KAAKsO,SAAW,CACdC,kBAAmBpM,WAAWV,GAA0B7B,WACxD4O,eAAgBrM,WAAWV,GAAsB7B,WACjD6O,mBAAoBtM,WAAWV,GAAsB7B,WACrD8O,YAAavM,WAAWV,GAAsB7B,YAEhDI,KAAK2O,cAActE,QACnBrK,KAAK4O,oBAAoBvE,SA3CF,KA8CzBwE,YAAeC,IACb9O,KAAK+O,QAAUD,EAAMC,OACrB/O,KAAKiO,YAAca,EACnB9O,KAAKgP,eAAevC,QAAQqC,EAAMG,OAClCjP,KAAK4O,oBAAoBvE,SAlDF,KAqDzB6E,WAAcvK,IACZ,GAAIA,EAAK6F,OAAS,EAAG,OAGrB,MAAM2E,EAAkBrE,UAAUnG,EAAK,GAAGwG,WACtCnL,KAAKoP,SAAStD,mBAAmBqD,GAEnCnP,KAAKoP,SAASrD,OAAOpH,IAGrB3E,KAAKoP,SAAS1C,OAAO/H,GAGrB3E,KAAK2O,cAActE,UAlEE,KAsEzBgF,aAAe,KACb5R,QAAQC,IAAI,mCACZsC,KAAK+O,QAAS,GAxES,KA2EzBO,oBAAsB,CAAC3K,EAAM4K,EAAO/B,KAClC,GAAI7I,EAAK6F,OAAS,EAAG,OAAO,KAEE,OAA1B+E,EAAMrC,gBACRqC,EAAMrC,gBAAkBvI,EAAK2F,WAAWkD,GAGxC+B,EAAMrC,gBAAkBvI,EAAK0G,iBAC3BmC,EACA+B,EAAMrC,iBAKV,IAAIsC,EAAc,KACdC,GAAa,EACbC,GAAe,EACfC,EAAc,KAClB,GAAIJ,EAAMrC,iBAAmB,EAE3BsC,EAAcnC,yBAASuC,SAASjL,EAAKuG,GAAG,IACpCvG,EAAK6F,QAAU,IACjBmF,EAActC,yBAASwC,sBAAsBlL,EAAKuG,GAAG,GAAIvG,EAAKuG,GAAG,KAEnEwE,GAAe,OACV,GAAIH,EAAMrC,iBAAmBvI,EAAK6F,OAEvCgF,EAAcnC,yBAASuC,SAASjL,EAAKuG,GAAGvG,EAAK6F,OAAS,IAClD7F,EAAK6F,QAAU,IACjBmF,EAActC,yBAASwC,sBACrBlL,EAAKuG,GAAGvG,EAAK6F,OAAS,GACtB7F,EAAKuG,GAAGvG,EAAK6F,OAAS,KAG1BiF,GAAa,MACR,CACL,MAAMnC,EAAQ3I,EAAKuG,GAAGqE,EAAMrC,gBAAkB,GACxCK,EAAQ5I,EAAKuG,GAAGqE,EAAMrC,iBAEtBO,EACJ8B,EAAMrC,gBAAkB,GAAK,EACzBvI,EAAKuG,GAAGqE,EAAMrC,gBAAkB,GADpC,eAGSI,EAHT,CAIMhF,EAAGgF,EAAMhF,EAAI,IAGfoF,EACJ6B,EAAMrC,gBAAkB,EAAIvI,EAAK6F,OAC7B7F,EAAKuG,GAAGqE,EAAMrC,gBAAkB,GADpC,eAGSK,EAHT,CAIMjF,EAAGiF,EAAMjF,EAAI,IAIrBkH,EAAcnC,yBAASyC,gBACrBrC,EACAH,EACAC,EACAG,EACAF,GAEFmC,EAActC,yBAAS0C,sBACrBtC,EACAH,EACAC,EACAG,EACAF,GAMJ,MAAO,CACLgC,EACAE,EACAD,EAL0B9K,EAAKuG,GAAGvG,EAAK6F,OAAS,GAAGlC,EAOnDqH,IA1JqB,KA8JzBK,gBAAkB,IACT,CACL3C,yBAASW,aAAahO,KAAKiO,cAC3B,GACA,EACAnD,UAAU9K,KAAKiO,YAAYC,QAAQ/C,WACnC,MApKqB,KAwKzB8E,aAAe,CAACtL,EAAM4K,EAAOpE,KAC3B,GAAIxG,EAAK6F,OAAS,EAAG,OAAO,KAE5B,MAAM0F,EAAkB/E,EAA+C,GAAnCnL,KAAKsO,SAASG,mBAElD,IAAIQ,EAAQM,EAAMpC,SAGlB,KACEoC,EAAMnC,kBAAoBzI,EAAK6F,QAC/B7F,EAAKuG,GAAGqE,EAAMnC,mBAAmB9E,EAAI6C,GACrC,CACA,MAAMa,EAAOrH,EAAKuG,GAAGqE,EAAMnC,mBAC3B6B,EAAMtO,KAAK,CACT0D,IAAK2H,EAAKZ,IAAI/G,IACd4H,IAAKD,EAAKZ,IAAIa,IACdd,UAAWa,EAAK1D,EAChB6H,SAA0B,OAAhBnE,EAAKG,OAAkBH,EAAKG,OAASH,EAAKE,QACpDM,UAAWR,EAAKQ,YAElB+C,EAAMnC,mBAAqB,EAI7B,GAAIpN,KAAKsO,SAASI,YAAa,CAC7B,MAAM0B,EAAkB,GACxB,IAAIC,EAAY,EAChB,KACEA,EAAYD,EAAkB,EAAInB,EAAMzE,QACxCyE,EAAMoB,EAAYD,EAAkB,GAAGjF,UAAY+E,GAEnDG,GAAaD,EAEXC,EAAY,IACdpB,EAAQA,EAAMqB,MAAMD,GACpBd,EAAMpC,SAAW8B,GAIrB,OAAOA,GA/MgB,KAkNzBsB,gBAAmBC,IACjB,MAAMC,EAAuBzQ,KAAKsO,SAASE,eACvCgC,EAAsB,IACtBA,EAAsB,IAAOxQ,KAAKsO,SAASC,kBAE/C,IAAImC,EAAkB1Q,KAAKsP,oBACzBtP,KAAKoP,SACLpP,KAAK2O,cACL8B,GAEGC,IACHA,EAAkB1Q,KAAKsP,oBACrBtP,KAAKgP,eACLhP,KAAK4O,oBACL6B,IAGCC,IACHA,EAAkB1Q,KAAKgQ,mBAGzB,IAAIf,EAAQjP,KAAKiQ,aACfjQ,KAAKoP,SACLpP,KAAK2O,cACL8B,GAEGxB,IACHA,EAAQjP,KAAKiQ,aACXjQ,KAAKgP,eACLhP,KAAK4O,oBACL6B,IAGCxB,IACHA,EAAQ,IAlC+B,MA2CrCyB,EA3CqC,mBAsCvClB,EAtCuC,KAuCvCE,EAvCuC,KAwCvCD,EAxCuC,KAyCvCkB,EAzCuC,KA0CvChB,EA1CuC,KA8CrC3P,KAAKsO,SAASE,iBAIdiB,IAHEzP,KAAK+O,QASM4B,EAAsBF,EAAuB,IAM9D,IAAIG,EAAuBH,EAoB3B,OAnBIzQ,KAAK+O,SACP6B,EAAuBzG,KAAK0G,IAC1BF,EACAF,IAIQ,eACPjB,EADO,CAEVE,aAAcA,EACdD,WAAYA,EACZV,OAAQ/O,KAAK+O,OACbvN,KAAMxB,KAAKiO,YAAYpH,KAAKC,KAAKC,SACjC4J,oBAAqBA,EACrB1B,MAAOA,EACPU,YAAaA,EACbmB,qBAAsB3G,KAAKa,MAAM4F,MAjSZ,KAuSzBrF,mBAAqB,IAAMvL,KAAKoP,SAAS7D,qBArSvCvL,KAAKoP,SAAW,IAAInE,wCACpBjL,KAAK2O,cAAgB,IAAI1B,yBAGzBjN,KAAKiO,YAAc,KACnBjO,KAAKgP,eAAiB,IAAI/D,wCAC1BjL,KAAK4O,oBAAsB,IAAI3B,yBAG/BjN,KAAK+O,OAASd,EAAYc,OAG1B/O,KAAK6O,YAAYZ,GAEjBjO,KAAKsO,SAAW,GAChBtO,KAAKqO,iBAGLlM,WAAWV,GAA0BhB,iBAAiBT,KAAKqO,gBAC3DlM,WAAWV,GAAsBhB,iBAAiBT,KAAKqO,gBACvDlM,WAAWV,GAAsBhB,iBAAiBT,KAAKqO,gBACvDlM,WAAWV,GAAsBhB,iBAAiBT,KAAKqO,kBCtK5C0C,MArBf,MAAMA,sBAGJtR,YAAYuR,EAAY,IAAK,KAK7BC,IAAM,CAACC,EAA0BC,KAC/B,IAAIC,EAAgBF,EAA2BlR,KAAKqR,OACpD,MAAMC,EAAQF,EAAgBD,EAO9B,OALIG,EAAQtR,KAAKgR,WAAaM,GAAStR,KAAKgR,aAC1ChR,KAAKqR,QAAUC,EACfF,EAAgBF,EAA2BlR,KAAKqR,QAG3CD,GAbPpR,KAAKqR,OAAS,EACdrR,KAAKgR,UAAYA,ICSN,MAAMO,oCACnB9R,YAAYmE,GAAuB,KA6BnC4N,YAAcxO,KAAKyO,MA7Be,KA8BlCC,cAAgB,KAEd,MAAMC,EAAU3O,KAAKyO,MAEfG,EAAiB,IAAS5R,KAAK6R,aAErC,IAAK7R,KAAK8R,mBAAqBH,GAAW3R,KAAKwR,YAAa,CACtDxR,KAAK8R,oBACP9R,KAAKwR,aAAeI,EAChBD,EAAU3R,KAAKwR,cACjBxR,KAAKwR,YAAcG,IAIvB,MAAMI,EAAmB,GACzBC,OAAOC,KAAKjS,KAAKkS,mBAAmBC,QAAQC,IAC1C,GAAIA,KAASpS,KAAKqS,YAAa,CAC7B,MAAMzP,EAAW5C,KAAKqS,YAAYD,GAAOxP,SACzC,GAAIA,KAAY5C,KAAKsS,kBAAmB,CACtC,MAAMC,EAAavS,KAAKsS,kBAAkB1P,GAC1CmP,EAAiBK,GAASG,EAAWhC,gBAAgBoB,OAI3D3R,KAAKwS,sBAAsBT,GAE7BU,sBAAsBzS,KAAK0R,gBAxDK,KA2DlCc,sBAAwB7N,IACtB3E,KAAK0S,sBAAwB/N,EADC,oBAEb3E,KAAK2S,YAFQ,IAE9B,2BAAkC,EAChCnS,EADgC,SAC7BmE,IAHyB,gCA3DE,KAmElCiO,oBAAsBC,IACpB7S,KAAKkS,kBAAoBW,EACzB7S,KAAK8S,2BArE2B,KAwElCC,YAAcC,IACZvV,QAAQC,IAAI,YAAasV,GACzBhT,KAAKqS,YAAcW,EACnBhT,KAAK8S,0BAGLd,OAAOiB,OAAOD,GAAWb,QAAQe,IAC/B,MAAMtQ,EAAWsQ,EAAWtQ,SACxBA,KAAY5C,KAAKsS,mBACnBtS,KAAKsS,kBAAkB1P,GAAUiM,YAAYqE,MAjFjB,KAsFlCC,YAAc,CAACC,EAASC,KACtB5V,QAAQC,IAAI,iBAAkB0V,EAASC,GACnCD,KAAWpT,KAAKsS,mBAClBtS,KAAKsS,kBAAkBc,GAASlE,WAAWmE,IAzFb,KA4FlCC,iBAAmB1Q,IACbA,KAAY5C,KAAKsS,mBACnBtS,KAAKsS,kBAAkB1P,GAAUyM,gBA9FH,KAkGlC5O,iBAAmBD,IACZR,KAAK2S,WAAWjS,SAASF,IAAKR,KAAK2S,WAAWhS,KAAKH,GACxDA,EAAGR,KAAK0S,wBApGwB,KAuGlC9R,mBAAqBJ,IACnB,MAAMK,EAAQb,KAAK2S,WAAW7R,QAAQN,GAClCK,GAAS,GACXb,KAAK2S,WAAW5R,OAAOF,EAAO,IA1GA,KA8GlC0S,QAAU,IACDvT,KAAK0S,sBA/GoB,KAmHlCI,wBAA0B,KAExB,IAAIU,EAAmB,GACvBxB,OAAOiB,OAAOjT,KAAKqS,aAChBoB,OAAOC,GAAOA,EAAI7M,KAAKC,KAAK6M,YAAY3T,KAAKkS,mBAC7CC,QAAQuB,IACPF,EAAiBE,EAAI9Q,UAAY8Q,IAGrC,IAAIE,EAAqB,IAAIC,IAAI7B,OAAOC,KAAKuB,IAG7C,CACE,MAAMM,EAAW,GACjB,IAAK,MAAMlR,KAAY5C,KAAKsS,kBACpB1P,KAAY4Q,GAChBM,EAASnT,KAAKiC,GAGlB,cAAuBkR,EAAvB,eAAiC,CAA5B,MAAMlR,EAAQ,KACjBnF,QAAQC,IAAI,gCAAkCkF,EAAW,SACzD5C,KAAKsS,kBAAkB1P,GAAUwL,iBAC1BpO,KAAKsS,kBAAkB1P,IAYlC,GAPAoP,OAAO+B,QAAQP,GAAkBrB,QAAQ,EAAEvP,EAAUsQ,MAC7CtQ,KAAY5C,KAAKsS,oBACrBtS,KAAKsS,kBAAkB1P,GAAY,IAAIuL,EAAgB+E,OAvJ/D,SAASc,MAAMC,EAAIC,GACjB,GAAID,EAAGE,OAASD,EAAGC,KAAM,OAAO,EADX,oBAELF,GAFK,IAErB,kCAAW5K,EAAX,QAAoB,IAAK6K,EAAGE,IAAI/K,GAAI,OAAO,GAFtB,8BAGrB,OAAO,EAyJA2K,CAAMJ,EAAoB5T,KAAKqU,oBAAqB,CACvDrU,KAAKqU,mBAAqBT,EAG1B,IAAIU,EAAwB,GAC5B7W,QAAQC,IAAIsC,KAAKsS,mBACjBsB,EAAmBzB,QAAQvP,IACzBnF,QAAQC,IAAIkF,EAAU5C,KAAKsS,kBAAkB1P,IAC7C0R,EAAsB3T,KAAK,CACzBiC,EACA5C,KAAKsS,kBAAkB1P,GAAU2I,yBAIrC9N,QAAQC,IACN,iCACAsC,KAAKqU,mBACLT,GAEF5T,KAAKuU,8BAA8BD,KAvKrCtU,KAAK0S,sBAAwB,GAC7B1S,KAAK2S,WAAa,GAClB3S,KAAKkS,kBAAoB/L,kBACzBnG,KAAKqU,mBAAqB,IAAIR,IAC9B7T,KAAKqS,YAAc,GACnBrS,KAAKsS,kBAAoB,GACzBtS,KAAKwU,uBAAyB,IAAIzD,EAClC,MAAM0D,EAAoBtS,WAAWV,GAC/BiT,EAAevS,WAAWV,GAGhCzB,KAAK8R,kBAAoB2C,EAAkB7U,WAC3CI,KAAK6R,aAAe6C,EAAa9U,WACjC6U,EAAkBhU,iBAAiBJ,IACjCL,KAAK8R,kBAAoBzR,IAE3BqU,EAAajU,iBAAiBJ,IAC5BL,KAAK6R,aAAexR,IAGtBL,KAAKuU,8BAAgC1Q,IACnCD,EAAqB+Q,MAAMC,KAAK/Q,KAElCqC,wBAAwBzF,iBAAiBT,KAAK4S,qBAC9CH,sBAAsBzS,KAAK0R,gBCChBmD,MAvCf,MAAMA,4BACJpV,YAAYE,GAAe,KAK3BmV,IAAMzU,IACJL,KAAK+U,cAAgB1U,EADR,oBAEIL,KAAK2S,YAFT,IAEb,2BAAkC,EAChCnS,EADgC,SAC7BH,IAHQ,gCALW,KAY1BT,SAAW,IAAMI,KAAK+U,cAZI,KAc1BtU,iBAAmBD,IACZR,KAAK2S,WAAWjS,SAASF,IAAKR,KAAK2S,WAAWhS,KAAKH,IAfhC,KAkB1BI,mBAAqBJ,IACnB,MAAMK,EAAQb,KAAK2S,WAAW7R,QAAQN,GAClCK,GAAS,GACXb,KAAK2S,WAAW5R,OAAOF,EAAO,IArBR,KAyB1BQ,IAAM,KAAO,MAAD,EACgBzE,mBAASoD,KAAK+U,eAD9B,mBACH1U,EADG,KACIW,EADJ,KASV,OANA/D,oBAAU,KAER+C,KAAKS,iBAAiBO,GACf,IAAMhB,KAAKY,mBAAmBI,IACpC,IAEIX,GAjCPL,KAAK2S,WAAa,GAClB3S,KAAK+U,cAAgBpV,ICAlB,MAAMuE,EAAkB,CAC7BwB,WAAY,aACZK,MAAO,QACP5B,YAAa,cACbM,OAAQ,SACRM,SAAU,WACVG,cAAe,gBACf8P,eAAgB,kBAGlB,MAAMC,oCACJxV,cAAe,KAafmE,qBAAuBC,IACrB7D,KAAKkV,OAAOtR,qBAAqBC,IAdrB,KAiBd6C,cAAgB,IAAM1G,KAAKmV,OAjBb,KAmBdC,yBAA2BrY,IACzBiD,KAAKqV,gBAAgBP,IAAI/X,IApBb,KAuBduY,sBAAwB5Q,IACtB1E,KAAKmV,OAAS,GADe,oBAEEzQ,GAFF,IAE7B,2BAAoC,CAAC,MAAD,yBAAxB0O,EAAwB,KAAfnE,EAAe,KAE9BA,EAAMsG,YAEVtG,EAAMrM,SAAWwQ,EAEjBpT,KAAKmV,OAAOlG,EAAMpI,KAAKC,KAAK6M,UAAY1E,IARb,8BAU7BjP,KAAKwV,UAAUzC,YAAY/S,KAAKmV,QAChCnV,KAAKyV,WAAWX,IAAI9U,KAAKmV,QAGzB9O,iCArCY,KAwCdqP,0BAA4BhR,IAC1B1E,KAAKwV,UAAUrC,YAAYzO,EAAI5B,WAAY4B,EAAIiR,aAzCnC,KA4CdC,8BAAgChT,IAC9B5C,KAAKwV,UAAUlC,iBAAiB1Q,IA5ChC5C,KAAKmV,OAAS,GACdnV,KAAKqV,gBAAkB,IAAIR,EAAc3Q,EAAgB8Q,gBACzDhV,KAAKyV,WAAa,IAAIZ,EAAc,IACpC7U,KAAKkV,OAAS,IAAI9S,8BAChBpC,KAAKoV,yBACLpV,KAAKsV,sBACLtV,KAAK0V,0BACL1V,KAAK4V,+BAEP5V,KAAKwV,UAAY,IAAIjE,oCAAkBvR,KAAK4D,uBAwChD,IAAIiS,EAAY,KACT,MAAMpP,qBAAuB,KAC7BoP,IACHA,EAAY,IAAIZ,qCAEXY,GCxCM,SAASC,UAAUC,GAEhC,MAAMC,EAhCR,SAASC,MAAMC,GACb,IAAK,IAAIC,EAAI,EAAGC,EAAI,WAAaF,EAAI1L,OAAQ2L,EAAID,EAAI1L,OAAQ2L,IAE3DC,GADAA,EAAIjM,KAAKkM,KAAKD,EAAIF,EAAII,WAAWH,GAAI,cAC3B,GAAOC,IAAM,GAEzB,OAAO,WAGL,OAFAA,EAAIjM,KAAKkM,KAAKD,EAAKA,IAAM,GAAK,YAC9BA,EAAIjM,KAAKkM,KAAKD,EAAKA,IAAM,GAAK,aACtBA,GAAKA,IAAM,MAAQ,GAwBhBH,CAAMF,GAGnB,OAtBF,SAASQ,MAAMlN,EAAGC,EAAGkN,EAAGC,GACtB,OAAO,WAKL,IAAInO,GAJJe,KAAO,IACPC,KAAO,GAGW,EAOlB,OANAD,EAAIC,EAAKA,IAAM,EACfA,GAJAkN,KAAO,IAIGA,GAAK,GAAM,EAIrBA,GAHAA,EAAKA,GAAK,GAAOA,IAAM,KAEvBlO,EAAKA,GADLmO,GALAA,KAAO,GAKE,EAAK,GACA,GACA,GACNnO,IAAM,GAAK,YAQRiO,CAAMP,IAAQA,IAAQA,IAAQA,K,sBChC9B,SAASU,aAAaR,EAAKS,GACxC,MAAMC,EAAOd,UAAUI,GAEjBW,EAAW1M,KAAK0G,IAAI1G,KAAK2M,IAAa,IAATF,IAAc,GAAI,KAErD,MADiB,IAAMG,IAAQC,IAAIC,IAAIJ,EAAU,IAAKF,GCFxD,MAWaO,kBAAoB1V,GAAQkV,aAAalV,EAAM,IAuB/C2V,aAAe,CAC1BC,EACA3H,EACA4H,EACAjM,EACAuE,EACApQ,KAUA,GAAIkQ,EACF,OAAI4H,EAEK,CACLC,KA7CN,wZA8CMC,UAAWhY,EACXiY,YAAa,EACbC,OAAQ,CAAEC,EAAG,GAAIC,EAAG,IACpBC,aAAc,EACdC,MAAO,KAIF,CACLP,KA/DN,glBAgEMC,UAAWhY,EACXiY,YAAa,EACbC,OAAQ,CAAEC,EAAG,GAAIC,EAAG,IACpBC,aAAc,EACdC,MAAO,KAKb,GAAIT,EAEF,MAAO,CACLE,KAxEJ,yFAyEIC,UAAWhY,EACXiY,YAAa,EACbC,OAAQ,CAAEC,EAAG,GAAIC,EAAG,IACpBC,aAAc,EACdC,MAAO,KAcX,MAAO,CACLP,KA9FF,+JA+FEC,UAAWhY,EACXiY,YAAa,EACbC,OAAQ,CAAEC,EAAG,GAAIC,EAAG,IACpBC,aAAc,EACdC,MAAO,IACPC,SAfgB,OAAhBnI,EACI,EACAoI,8BAAoB3M,EAAK,CACvB/G,IAAK+G,EAAI/G,IAAMsL,EAAYtL,IAC3B4H,IAAKb,EAAIa,IAAM0D,EAAY1D,QC9FrC,MAAM+L,0DACJvY,cAAe,KAqBfwY,YAAc,KACZjY,KAAKjD,MAAMqE,YAAY8W,GAAQ,eAC1BA,EAD0B,CAE7BC,SAAS,MAxBC,KA6BdC,mBAAqBzR,IACnB3G,KAAKjD,MAAMqE,YAAY8W,GAAQ,eAC1BA,EAD0B,CAE7BC,SAAS,EACTE,kBAAmB1R,KAErB3G,KAAKsY,0BAnCO,KAsCdC,cAAgB,KACdvY,KAAKjD,MAAMqE,YAAY8W,GAAQ,eAC1BA,EAD0B,CAE7BC,SAAS,EACTE,kBAAmB,SA1CT,KA+CdC,uBAAyB,KAAO,IAAD,gBACDtY,KAAKwY,gBADJ,IAC7B,2BAAiD,SACjCC,qBAFa,gCA/CjB,KAsDdC,iBAAmBjD,IAEjBzV,KAAKjD,MAAMqE,YAAYuX,IACrB,MAAMC,EAAQ,eAAQD,GACtBC,EAASzD,OAAT,eAAuByD,EAASzD,QAGhC,IAAK,MAAMlO,KAAa0R,EAASxD,OACzBlO,KAAawO,UACVmD,EAASzD,OAAOlO,GAK3B,IAAK,MAAMA,KAAawO,EAChBxO,KAAa2R,EAASzD,SAC1ByD,EAASzD,OAAOlO,IAAa,GAIjC,OAAO2R,IApBsB,oBAuBH5Y,KAAKwY,gBAvBF,IAuB/B,2BAAiD,SACjCE,iBAAiBjD,EAAYzV,KAAKjD,MAAM6C,aAxBzB,gCAtDnB,KAmFdiZ,sBAAwBC,IACjB9Y,KAAKwY,eAAe9X,SAASoY,IAChC9Y,KAAKwY,eAAe7X,KAAKmY,IArFf,KAyFdC,wBAA0BD,IACxB,MAAMjY,EAAQb,KAAKwY,eAAe1X,QAAQgY,GACtCjY,GAAS,GACXb,KAAKwY,eAAezX,OAAOF,EAAO,IA3FpCb,KAAKwY,eAAiB,GAGtBxY,KAAKjD,MAAQwE,wBAAwB,iBAAkB,CACrDyX,aAAa,EACbb,SAAS,EACTE,kBAAmB,KACnBlD,OAAQ,KAMVnV,KAAKjD,MAAMiE,SAAS,MAGpByF,uBAAuB+O,UAAU/U,iBAAiBT,KAAK0Y,mBAiF3D,IAAI7C,EAAY,KACT,MAAMoD,gCAAkC,KACxCpD,IACHA,EAAY,IAAImC,2DAEXnC,GCnGM,MAAMqD,gCACnBzZ,YAAY3B,EAAQ6E,EAAKqQ,EAAWmG,EAAaC,GAAkB,KAkDnEC,OAAS1W,IACP3C,KAAKsZ,OAAOD,OAAO1W,GACnB3C,KAAKiP,MAAMoK,OAAO1W,GAClB3C,KAAKuZ,mBAAmBF,OAAO1W,IArDiC,KAwDlE6W,aAAevK,IACb,IAAKA,GAASA,EAAMzE,OAAS,EAAG,OAGhC,MAAMA,EAASyE,EAAMzE,OACfiP,EAAYxK,EAAM,GAAG9D,UACrBuO,EAAUzK,EAAMzE,EAAS,GAAGW,UAClC,GACEsO,IAAczZ,KAAK2Z,oBAAoBF,WACvCC,IAAY1Z,KAAK2Z,oBAAoBD,SACrClP,IAAWxK,KAAK2Z,oBAAoBnP,OAHtC,CAQA,GACEiP,IAAczZ,KAAK2Z,oBAAoBF,WACvCjP,EAASxK,KAAK2Z,oBAAoBnP,QAClCkP,EAAU1Z,KAAK2Z,oBAAoBD,QACnC,CACA,IAAIE,EAAW5Z,KAAKiP,MAAM4K,UACtBC,EAAYF,EAASG,YACzB,KAAOD,EAAYtP,GAAQ,CACzB,MAAMwP,EAAW/K,EAAM6K,GACvBA,EAAYF,EAASjZ,KACnB,IAAIX,KAAKlC,OAAOmc,KAAKC,OAAOF,EAAS3V,IAAK2V,EAAS/N,MAMvD,OAFAjM,KAAK2Z,oBAAoBD,QAAUA,OACnC1Z,KAAK2Z,oBAAoBnP,OAASA,GAOpCxK,KAAK2Z,oBAAoBF,UAAYA,EACrCzZ,KAAK2Z,oBAAoBD,QAAUA,EACnC1Z,KAAK2Z,oBAAoBnP,OAASA,EAElCxK,KAAKiP,MAAMkL,QAAQlL,KAjG6C,KAoGlEmL,qBAAuB,CAACC,EAAaC,KAEC,OAAhCta,KAAKua,yBACPva,KAAKuZ,mBAAmBY,QAAQ,CAACE,EAAaC,IAC9Cta,KAAKua,uBAAyB,CAACF,EAAaC,IAJI,oBASPta,KAAKua,uBATE,GAS3CC,EAT2C,KAStBC,EATsB,KAUlDza,KAAKua,uBAAyB,CAACF,EAAaC,GAG5C,MAAMhD,EAAOtX,KAAKuZ,mBAAmBM,UAGrC,GACEQ,EAAYhW,MAAQmW,EAAoBnW,KACxCgW,EAAYpO,MAAQuO,EAAoBvO,IACxC,CACA,MAAMyO,EAAQ,IAAI1a,KAAKlC,OAAOmc,KAAKC,OACjCG,EAAYhW,IACZgW,EAAYpO,KAEdqL,EAAKqD,MAAM,EAAGD,GAIhB,GACED,EAAYpW,MAAQiW,EAAWjW,KAC/BoW,EAAYxO,MAAQqO,EAAWrO,IAC/B,CACA,MAAMyO,EAAQ,IAAI1a,KAAKlC,OAAOmc,KAAKC,OAAOI,EAAWjW,IAAKiW,EAAWrO,KACrEqL,EAAKqD,MAAM,EAAGD,KArIgD,KA0IlExL,WAAavK,IACX3E,KAAKsZ,OAAOsB,YAAYjW,EAAKyG,KAG7B,IAAIyP,EAAY7a,KAAKsZ,OAAOwB,UAC5B,MAAMC,EAAe5D,aACnBxS,EAAK+K,aACL/K,EAAK8K,WACL9K,EAAKoK,OACLpK,EAAKyG,IACLzG,EAAKgL,YACL3P,KAAKgb,YAKP,GFhJ4B,EAACC,EAAcF,KAC7C,IAAK,IAAIG,KAAKD,EACZ,KAAMC,KAAKH,GAAe,OAAO,EAEnC,IAAK,IAAIG,KAAKH,EAAc,CAC1B,KAAMG,KAAKD,GAAe,OAAO,EAEjC,GAAU,WAANC,GACF,GACED,EAAaC,GAAGxD,IAAMqD,EAAaG,GAAGxD,GACtCuD,EAAaC,GAAGvD,IAAMoD,EAAaG,GAAGvD,EAEtC,OAAO,OACJ,GAAIsD,EAAaC,KAAOH,EAAaG,GAC1C,OAAO,EAGX,OAAO,GE4HDC,CAAiBN,EAAWE,IAC9B/a,KAAKsZ,OAAO8B,QAAQL,GAElBpW,EAAKsK,MAAMzE,OAAS,EAAG,CACzB,MAAM8P,EAAa3V,EAAKsK,MAAMtK,EAAKsK,MAAMzE,OAAS,GAC5C6P,EAAc1V,EAAKyG,IACzBpL,KAAKoa,qBAAqBC,EAAaC,GAEzCta,KAAKwZ,aAAa7U,EAAKsK,QA9JvBjP,KAAKlC,OAASA,EACdkC,KAAKoZ,gBAAkBA,EACvBpZ,KAAKgb,WAAa9D,kBAAkBlE,EAAUnM,KAAKC,KAAK6M,UACxD3T,KAAKqb,WFIiC3E,aEJD1D,EAAUnM,KAAKC,KAAK6M,SFIA,IEFzD3T,KAAK6a,UAAY1D,aACfgC,EAAYzJ,aACZyJ,EAAY1J,WACZ0J,EAAYpK,OACZoK,EAAY/N,IACZ+N,EAAYxJ,YACZ3P,KAAKgb,YAGPhb,KAAKsZ,OAAS,IAAItZ,KAAKlC,OAAOmc,KAAKqB,OAAO,CACxC3Y,IAAKA,EACL4Y,SAAUpC,EAAY/N,IACtBoQ,MAAOxI,EAAUnM,KAAKC,KAAKC,SAC3B0U,KAAMzb,KAAK6a,YAGb7a,KAAKsZ,OAAOoC,YAAY,QAAS,KAC/B1b,KAAKoZ,gBAAgBuC,KACnB3b,KAAK2C,IACL3C,KAAKsZ,OACLtG,EAAUnM,KAAKC,KAAK6M,YAIxB3T,KAAKsZ,OAAOoC,YAAY,WAAY,KAClCzC,kCAAkCb,mBAChCpF,EAAUnM,KAAKC,KAAK6M,YAIxB3T,KAAKiP,MAAQ,IAAIjP,KAAKlC,OAAOmc,KAAK2B,SAAS,CACzCjZ,IAAKA,EACL2U,KAAM,GACNuE,YAAa7b,KAAKqb,aAEpBrb,KAAK2Z,oBAAsB,CAAEF,UAAW,KAAMC,QAAS,KAAMlP,OAAQ,MACrExK,KAAKuZ,mBAAqB,IAAIvZ,KAAKlC,OAAOmc,KAAK2B,SAAS,CACtDjZ,IAAKA,EACL2U,KAAM,GACNuE,YAAa7b,KAAKqb,aAEpBrb,KAAKua,uBAAyB,MCxDnB,MAAMuB,mBACnBrc,YAAY3B,GAAS,KAWrB6d,KAAO,CAAChZ,EAAK8U,EAAQ9Q,KACnB3G,KAAK+b,aAAepV,EACpB3G,KAAKgc,WAAWL,KAAKhZ,EAAK8U,GAC1BzX,KAAKic,iBAda,KAiBpBC,MAAQ,KACNlc,KAAKgc,WAAWE,QAChBlc,KAAK+b,aAAe,KACpB/b,KAAKic,iBApBa,KAuBpBpS,OAASlF,IACP3E,KAAK2E,KAAOA,EACZ3E,KAAKic,iBAzBa,KA4BpBA,cAAgB,KAEd,GAA8B,MAA1Bjc,KAAKgc,WAAWvE,OAElB,YADAzX,KAAK+b,aAAe,MAItB,GAA0B,OAAtB/b,KAAK+b,aAAuB,OAEhC,KAAM/b,KAAK+b,gBAAgB/b,KAAK2E,MAG9B,OAFA3E,KAAK+b,aAAe,UACpB/b,KAAKgc,WAAWE,QAIlB,MAAMlJ,EAAYhT,KAAK2E,KAAK3E,KAAK+b,cAE3Bnd,EACiB,OAArBoU,EAAU7G,OAAkB6G,EAAU9G,QAAU8G,EAAU7G,OACtDgQ,EAAYhS,KAAK2M,IAAIlY,EAASoU,EAAUxG,UAAW,GAGzD,IAAI4P,EAAa,GAKjB,GAJAA,GAAc,MAAQpJ,EAAUxR,KAAO,WACvC4a,GAAcjS,KAAKa,MAAMpM,GAAU,MACnCwd,GAAcjS,KAAKa,MAAMmR,GAAa,SAEV,OAAxBnJ,EAAU3G,YAAuB2G,EAAUjE,OAAQ,CACrD,MAAMsN,EAAQlS,KAAKa,MAA4B,GAAtBgI,EAAU3G,WACnC,IAAIiQ,EAAWnS,KAAKoS,IAAIF,GACpBC,EAAW,KAAIA,EAAW,IAO9BF,GAAc,WALXC,GAAS,EAAI,SAAW,WACzBlS,KAAKqS,MAAMF,EAAW,IACtB,IACCA,EAAW,GACZ,OACkC,sBAGX,OAAvBtJ,EAAU1G,UAAsB0G,EAAUjE,SAC5CqN,GAAcjS,KAAKa,MAA2B,IAArBgI,EAAU1G,UAAkB,QAGnDtM,KAAKgc,WAAWS,eAAiBL,GACnCpc,KAAKgc,WAAWU,WAAWN,IAxE7Bpc,KAAKlC,OAASA,EACdkC,KAAKgc,WAAa,IAAIle,EAAOmc,KAAK0C,WAAW,CAC3CC,QAAS,YACTC,YAAa,IAAI/e,EAAOmc,KAAK6C,KAAK,GAAI,GACtCC,gBAAgB,IAElB/c,KAAK2E,KAAO,GACZ3E,KAAK+b,aAAe,MCLT,MAAMiB,wBACnBvd,YAAYkD,EAAK7E,GAAS,KAO1Bmf,iBAAmBtY,IACjB,MAAMmP,EAAW,GACjB,IAAK,MAAM1B,KAASpS,KAAKkd,OACjB9K,KAASzN,GACbmP,EAASnT,KAAKyR,GAGlB,cAAoB0B,EAApB,eAA8B,CAAzB,MAAM1B,EAAK,KACdpS,KAAKkd,OAAO9K,GAAOiH,OAAO,aACnBrZ,KAAKkd,OAAO9K,KAhBE,KAoBzBvI,OAASlF,IACP,MAAM8Q,EAAahP,uBAAuBC,gBAG1C1G,KAAKid,iBAAiBtY,GAGtBqN,OAAO+B,QAAQpP,GAAMwN,QAAQ,EAAEC,EAAO+K,MACpC,KAAM/K,KAASqD,GAAa,OAC5B,MAAM5O,EAAO4O,EAAWrD,GAGlBA,KAASpS,KAAKkd,SAClBld,KAAKkd,OAAO9K,GAAS,IAAI8G,gCACvBlZ,KAAKlC,OACLkC,KAAK2C,IACLkE,EACAsW,EACAnd,KAAKgc,aAKKhc,KAAKkd,OAAO9K,GACpBlD,WAAWiO,KAGnBnd,KAAKgc,WAAWnS,OAAOlF,IA9CvB3E,KAAK2C,IAAMA,EACX3C,KAAKlC,OAASA,EACdkC,KAAKkd,OAAS,GACdld,KAAKgc,WAAa,IAAIF,mBAAmBhe,I,mBCP7C,MAAMsf,wBACJ3d,cAAe,KAUf4d,gBAAkB,KAChB,IAAIC,EAAoBnb,WAAWV,GAAsB7B,WACrD2d,EAAqBvd,KAAK2S,WAAWnI,OAAS,EAE9CgT,EAAYF,GAAqBC,EAEf,OAAlBvd,KAAKyd,UAAqBD,GAAaE,UAAUC,cACnD3d,KAAKyd,SAAWC,UAAUC,YAAYC,cACpC5d,KAAK6d,cACL7d,KAAK8d,YACL,CAAEC,oBAAoB,IAExBtgB,QAAQC,IAAI,YAGQ,OAAlBsC,KAAKyd,UAAsBD,IAC7BE,UAAUC,YAAYK,WAAWhe,KAAKyd,UACtCzd,KAAKyd,SAAW,KAChBzd,KAAKie,YAAY,MACjBxgB,QAAQC,IAAI,cA7BF,KAmCdugB,YAActZ,IACZlH,QAAQC,IAAI,YAAaiH,GACzB3E,KAAKke,SAAWvZ,EAFI,oBAGH3E,KAAK2S,YAHF,IAGpB,2BAAkC,EAChCnS,EADgC,SAC7BmE,IAJe,gCAnCR,KA2CdkZ,cAAgBlZ,IACd3E,KAAKie,YAAYtZ,IA5CL,KA8CdmZ,YAAc,KACZ9d,KAAKie,YAAY,OA/CL,KAkDdxd,iBAAmBD,IACZR,KAAK2S,WAAWjS,SAASF,IAAKR,KAAK2S,WAAWhS,KAAKH,GACxDR,KAAKqd,kBACL7c,EAAGR,KAAKke,WArDI,KAwDdtd,mBAAqBJ,IACnB,MAAMK,EAAQb,KAAK2S,WAAW7R,QAAQN,GAClCK,GAAS,GACXb,KAAK2S,WAAW5R,OAAOF,EAAO,GAEhCb,KAAKqd,mBA7DO,KAgEd9J,QAAU,IACDvT,KAAKke,SAhEZle,KAAK2S,WAAa,GAClB3S,KAAKyd,SAAW,KAChBzd,KAAKke,SAAW,KAEQ/b,WAAWV,GACjBhB,iBAAiBT,KAAKqd,iBACxCrd,KAAKqd,mBA+DT,IAAIxH,EAAY,KACT,MAAMsI,eAAiB,KACvBtI,IACHA,EAAY,IAAIuH,yBAEXvH,GC3EM,MAAMuI,0CACnB3e,YAAY3B,EAAQ6E,GAAM,KAmB1B8V,kBAAoB,KACdzY,KAAK2C,IAAI0b,UAAY,IAAIre,KAAK2C,IAAI2b,QAAQ,KApBvB,KAuBzBC,SAAW,KAKTJ,iBAAiBvd,mBAAmBZ,KAAKwe,cA5BlB,KA+BzBA,YAAcC,IACZze,KAAK0e,SAAWD,GAhCO,KAmCzBE,YAAc,KACP3e,KAAK4e,uBACR3F,kCAAkChB,eArCb,KAwCzB4G,eAAiBC,IACf,MAAMC,EAA2B/e,KAAKgf,iBAGtC,GAFAhf,KAAKgf,kBAAmB,EAEK,IAAzBF,EAActU,OAChB,OAGF,GAA6B,IAAzBsU,EAActU,OAShB,OARAxK,KAAK4e,uBAAwB,EAC7B5e,KAAK2C,IAAIsc,MAAMH,EAAc,IAC7B9e,KAAK4e,uBAAwB,EAExBG,GACH/e,KAAKyY,yBAEPzY,KAAKgf,kBAAmB,GAI1B,IAAIE,EAAS,IAAIlf,KAAKlC,OAAOmc,KAAKkF,aAChCL,EAAc,GACdA,EAAc,IAGhBA,EAAc3M,QAAQiN,GAASF,EAAOG,OAAOD,IAE7Cpf,KAAK4e,uBAAwB,EAC7B5e,KAAK2C,IAAI2c,UAAUJ,GACnBlf,KAAK4e,uBAAwB,GArEN,KAwEzBlG,iBAAmB,CAACjD,EAAY8J,KAE9B,IAAKvf,KAAKwf,oBAAqB,CAC7B,IAAIV,EAAgB,GAEpB,cAA4B9M,OAAO+B,QAAQ0B,GAA3C,eAAwD,CAAC,MAA3CzC,EAA0C,uBACtD8L,EAAcne,KAAKqS,EAAU5H,KAG3BpL,KAAK0e,UACPI,EAAcne,KAAK,CACjB0D,IAAKrE,KAAK0e,SAASe,OAAOC,SAC1BzT,IAAKjM,KAAK0e,SAASe,OAAOE,YAID,IAAzBb,EAActU,SAChBxK,KAAK6e,eAAeC,GACpB9e,KAAKwf,qBAAsB,GAK/B,IAAKD,EAAgBpH,QAKnB,YADAnY,KAAK6e,eAAe,IAKtB,GAA0C,OAAtCU,EAAgBlH,kBAA4B,CAC9C,MAAMpR,EAAYsY,EAAgBlH,kBAClC,GAAIpR,KAAawO,EAEf,YADAzV,KAAK6e,eAAe,CAACpJ,EAAWxO,GAAWmE,MAK/C,IAAI0T,EAAgB,GAChBS,EAAgBvG,aACdhZ,KAAK0e,UACPI,EAAcne,KAAK,CACjB0D,IAAKrE,KAAK0e,SAASe,OAAOC,SAC1BzT,IAAKjM,KAAK0e,SAASe,OAAOE,YAIhC,cAAmC3N,OAAO+B,QAAQwL,EAAgBpK,QAAlE,eAA2E,CAAC,MAAD,sBAA/DlO,EAA+D,WAC1DA,KAAawO,GAC1BqJ,EAAcne,KAAK8U,EAAWxO,GAAWmE,KAG7CpL,KAAK6e,eAAeC,IA7HpB9e,KAAKlC,OAASA,EACdkC,KAAK2C,IAAMA,EACX3C,KAAK4f,WAAa5c,KAAKyO,MAEvBzR,KAAK0e,SAAWP,iBAAiB5K,UACjC4K,iBAAiB1d,iBAAiBT,KAAKwe,aAEvCxe,KAAKwf,qBAAsB,EAC3Bxf,KAAKgf,kBAAmB,EAExBhf,KAAK6f,mBAAqB,CACxBld,EAAI+Y,YAAY,YAAa1b,KAAK2e,aAClChc,EAAI+Y,YAAY,iBAAkB1b,KAAK2e,cAGzC3e,KAAK4e,uBAAwB,G,OCpB1B,MAAMkB,iBAAmB,CAACC,EAASC,KACxC,MAAMC,EAAQ,6BAEd,IAAIC,EAAQC,SAASC,gBAAgBH,EAAO,OAC5CC,EAAMG,aAAa,QAAS,MAC5BH,EAAMG,aAAa,SAAU,MAC7BH,EAAMG,aAAa,UAAWL,GAE9B,IAAIM,EAASH,SAASC,gBAAgBH,EAAO,QAI7C,OAHAK,EAAOD,aAAa,IAAKN,GAEzBG,EAAMK,YAAYD,GACXJ,GCVF,SAASM,yBAAyB1iB,EAAQ6E,GAE/C,IAAI8d,EAAaN,SAASO,cAAc,OAGpCC,EAAYR,SAASO,cAAc,OAcvC,OAbAC,EAAUC,UAAUC,IAAI,6BACxBF,EAAUnF,MAAQ,wBAClBmF,EAAUJ,YDMVT,iBACE,4IACA,cCPFW,EAAWF,YAAYI,GAEvBF,EAAWK,QAAU,KACfne,EAAIoe,iBAAmBjjB,EAAOmc,KAAK+G,UAAUC,OAC/Cte,EAAIue,aAAapjB,EAAOmc,KAAK+G,UAAUG,SAEvCxe,EAAIue,aAAapjB,EAAOmc,KAAK+G,UAAUC,SAIpCR,EClBF,SAASW,2BAA2BtjB,EAAQ6E,GAEjD,IAAI8d,EAAaN,SAASO,cAAc,OAGpCC,EAAYR,SAASO,cAAc,OAUvC,OATAC,EAAUC,UAAUC,IAAI,6BACxBF,EAAUnF,MAAQ,eAClBmF,EAAUJ,YFWVT,iBACE,uRACA,kBEZFW,EAAWF,YAAYI,GAEvBF,EAAWK,QAAU,KACnB7H,kCAAkCV,iBAG7BkI,ECuHMY,kBAvHC,KAAO,MAAD,EACiB1kB,IADjB,mBACb2kB,EADa,KACHC,EADG,KACOzjB,EADP,KAEd0jB,EAAUC,mBAFI,EAGE7kB,mBAAS,MAHX,mBAGb+F,EAHa,KAGR0W,EAHQ,KAsGpB,OAhGAqI,0BAAgB,KACVJ,IAAa3e,GACf0W,EACE,IAAIvb,EAAOmc,KAAK0H,IAAIH,EAAQI,QAAS,CACnCC,OAAQ,CAAExd,IAAK,UAAW4H,IAAK,WAC/B6V,UAAW,UACXC,KAAM,EACNC,QAAS,GACTC,kBAAkB,EAClBC,aAAa,EACbC,cAAc,EACdC,mBAAmB,EACnBC,OAAQC,MAIb,CAAChB,EAAU3e,EAAK7E,EAAQ0jB,IAG3BvkB,oBAAU,KACJ0F,GAAO7E,IAET6E,EAAI+Y,YAAY,oBAAqB,KAC/B/Y,EAAIoe,iBAAmBjjB,EAAOmc,KAAK+G,UAAUG,QAC/Cxe,EAAI4f,WAAW,CAAEP,QAAS,KAE1Brf,EAAI4f,WAAW,CAAEP,QAAS,OAK9Brf,EAAI6f,SAAS1kB,EAAOmc,KAAKwI,gBAAgBC,UAAU/hB,KACjD6f,yBAAyB1iB,EAAQ6E,IAEnCA,EAAI6f,SAAS1kB,EAAOmc,KAAKwI,gBAAgBC,UAAU/hB,KACjDygB,gCAGH,CAACze,EAAK7E,IAGTb,oBAAU,KACR,GAAI0F,GAAO7E,EAAQ,CACjB,MACM6kB,EADc,IAAI3F,wBAAYra,EAAK7E,GACK+L,OAC9CpD,uBAAuB+O,UAAU/U,iBAC/BkiB,GAGF,MAAMC,ECzDL,SAASC,wBAAwB/kB,EAAQ6E,GAC9C,MAAMmgB,0BAA0BhlB,EAAOmc,KAAK8I,UAO1CtjB,YAAYujB,EAASC,EAAqBC,EAAgBC,GACxDC,QAMApjB,KAAKqjB,aAAe,KAMpBrjB,KAAKsjB,QAAU,KAMftjB,KAAKujB,QAAU,KAMfvjB,KAAKwjB,UAAY,EAEjB,IAAIC,EAAkB,CACpBC,WAAW,EACXC,OAAQ,UACRC,WAAW,EACXC,MAAM,EACNpI,KAAM,CACJnE,KAAMxZ,EAAOmc,KAAK6J,WAAWC,OAC7BxM,UAAW,UACXC,YAAa,GACbK,MAAO,GACPD,aAAc,GAEhB2D,SAAU,IAAIzd,EAAOmc,KAAKC,OAAO,EAAG,GACpCsB,MAAO,mBACPwI,OAAQ,GAGNC,EAAa,CACfP,WAAW,EACXC,OAAQ,UACRC,WAAW,EACXC,MAAM,EACNpI,KAAM,CACJnE,KAAMxZ,EAAOmc,KAAK6J,WAAWC,OAC7BxM,UAAW,UACXC,YAAa,EACbK,MAAO,EACPgE,YAAa,QACbjE,aAAc,GAGhBsM,WAAW,EACX3I,SAAU,IAAIzd,EAAOmc,KAAKC,OAAO,EAAG,GACpCsB,MAAO,mBACPwI,OAAQ,GAGNf,IACFQ,EAAkBzjB,KAAKmkB,aACrBV,EACAR,IAIAC,IACFe,EAAajkB,KAAKmkB,aAAaF,EAAYf,IAG7C,IAAIkB,EAAa,CACfV,WAAW,EACXW,OAAQ,EACRxI,YAAa,SACbyI,cAAe,GACf/M,UAAW,SACXC,YAAa,GACbI,aAAc,EACdoM,OAAQ,GAGNb,IACFiB,EAAapkB,KAAKmkB,aAAaC,EAAYjB,IAG7CnjB,KAAKqjB,aAAe,IAAIvlB,EAAOmc,KAAKqB,OAAOmI,GAC3CzjB,KAAKsjB,QAAU,IAAIxlB,EAAOmc,KAAKqB,OAAO2I,GACtCjkB,KAAKujB,QAAU,IAAIzlB,EAAOmc,KAAKsK,OAAOH,GAEtCtmB,EAAOmc,KAAK8I,UAAUyB,UAAU1P,IAAI2P,KAAKzkB,KAAM,WAAY,MAC3DlC,EAAOmc,KAAK8I,UAAUyB,UAAU1P,IAAI2P,KAAKzkB,KAAM,WAAY,MAC3DlC,EAAOmc,KAAK8I,UAAUyB,UAAU1P,IAAI2P,KAAKzkB,KAAM,MAAO,MAEtDA,KAAK8U,IAAI,mBAAoB,MAE7B9U,KAAK8U,IAAI,mBAAsD,CAC7DiJ,oBAAoB,EACpB2G,WAAY,MAGd1kB,KAAKujB,QAAQoB,OAAO,MAAO3kB,KAAKqjB,cAChCrjB,KAAKujB,QAAQoB,OAAO,MAAO3kB,KAAKsjB,SAE5BN,GACFhjB,KAAKqZ,OAAO2J,GAShBlO,IAAIpV,EAAKW,GACP,GAAIyiB,kBAAkB8B,uBAAuBC,KAAKnlB,GAChD,MAAM,IAAIolB,MAAM,IAAMplB,EAAM,8BACX,QAARA,EACTM,KAAKqZ,OAAuChZ,GAE5CvC,EAAOmc,KAAK8I,UAAUyB,UAAU1P,IAAI2P,KAAKzkB,KAAMN,EAAKW,GAKxD0kB,SACE,OAA4C/kB,KAAKiR,IAAI,OAIvD+T,qBACE,OAAkDhlB,KAAKiR,IACrD,oBAKJgU,mBAAmBC,GACjBllB,KAAK8U,IAAI,mBAAoBoQ,GAI/BC,cACE,OAA+CnlB,KAAKiR,IAAI,YAI1DmU,YACE,OAAIplB,KAAKiR,IAAI,YACJjR,KAAKujB,QAAQ6B,YAEb,KAKXC,cACE,OAAmCrlB,KAAKiR,IAAI,YAI9CqU,qBACE,OAAmCtlB,KAAKiR,IAAI,oBAI9CsU,mBAAmBC,GACjBxlB,KAAK8U,IAAI,mBAAoB0Q,GAI/BnM,OAAO1W,GACL7E,EAAOmc,KAAK8I,UAAUyB,UAAU1P,IAAI2P,KAAKzkB,KAAM,MAAO2C,GAClDA,EACF3C,KAAKylB,kBAELzlB,KAAKqjB,aAAaqC,OAAO,YACzB1lB,KAAKsjB,QAAQoC,OAAO,YACpB1lB,KAAKujB,QAAQmC,OAAO,UACpB1lB,KAAKujB,QAAQmC,OAAO,UACpB5nB,EAAOmc,KAAK8I,UAAUyB,UAAU1P,IAAI2P,KAAKzkB,KAAM,WAAY,MAC3DlC,EAAOmc,KAAK8I,UAAUyB,UAAU1P,IAAI2P,KAAKzkB,KAAM,WAAY,MAC3D0d,UAAUC,YAAYK,WAAWhe,KAAKwjB,UACtCxjB,KAAKwjB,UAAY,EACjBxjB,KAAKqjB,aAAahK,OAAO1W,GACzB3C,KAAKsjB,QAAQjK,OAAO1W,IAKxBgjB,sBAAsBlC,GACpBzjB,KAAKqjB,aAAad,WAAWviB,KAAKmkB,aAAa,GAAIV,IAIrDmC,iBAAiB3B,GACfjkB,KAAKsjB,QAAQf,WAAWviB,KAAKmkB,aAAa,GAAIF,IAIhD4B,iBAAiBzB,GACfpkB,KAAKujB,QAAQhB,WAAWviB,KAAKmkB,aAAa,GAAIC,IAOhD0B,gBAAgBvK,GACd,IAAIwK,EAAc,IAAIjoB,EAAOmc,KAAKC,OAC9BqB,EAASkE,OAAOC,SAChBnE,EAASkE,OAAOE,WAElBqG,EAAqC,MAAzBhmB,KAAKsjB,QAAQyB,SAE3B,GAAIiB,EAAW,CACb,GAC+B,MAA7BhmB,KAAKslB,sBACL/J,EAASkE,OAAO+F,SAAWxlB,KAAKslB,qBAEhC,OAEFtlB,KAAKqjB,aAAahK,OAAOrZ,KAAK+kB,UAC9B/kB,KAAKsjB,QAAQjK,OAAOrZ,KAAK+kB,UACzB/kB,KAAKqjB,aAAasB,OAAO,WAAY3kB,MACrCA,KAAKsjB,QAAQqB,OAAO,WAAY3kB,MAChCA,KAAKujB,QAAQoB,OAAO,SAAU3kB,KAAM,YACpCA,KAAKujB,QAAQoB,OAAO,SAAU3kB,KAAM,YAGlCA,KAAKqlB,gBAAkB9J,EAASkE,OAAO+F,UAEzC1nB,EAAOmc,KAAK8I,UAAUyB,UAAU1P,IAAI2P,KAClCzkB,KACA,WACAub,EAASkE,OAAO+F,WAKlBQ,GACsB,MAAtBhmB,KAAKmlB,eACJnlB,KAAKmlB,cAAcc,OAAOF,IAG3BjoB,EAAOmc,KAAK8I,UAAUyB,UAAU1P,IAAI2P,KAAKzkB,KAAM,WAAY+lB,GAO/DN,iBACM/H,UAAUC,cACZ3d,KAAKwjB,SAAW9F,UAAUC,YAAYC,cACpC5d,KAAK8lB,gBAAgB1gB,KAAKpF,MAC1BA,KAAKkmB,kBAAkB9gB,KAAKpF,MAC5BA,KAAKglB,uBASXkB,kBAAkBvhB,GAChB7G,EAAOmc,KAAKkM,MAAMC,QAAQpmB,KAAM,oBAAqB2E,GASvDwf,aAAakC,EAAQC,GACnB,IAAK,IAAIC,KAAOD,GACoC,IAA9CxD,kBAAkB0D,mBAAmBD,KACvCF,EAAOE,GAAOD,EAAOC,IAGzB,OAAOF,GAqBX,OAbAvD,kBAAkB0D,mBAAqB,CACrC7jB,KAAK,EACL4Y,UAAU,EACV8I,QAAQ,GAOVvB,kBAAkB8B,uBAAyB,2BAGpC,IAAI9B,kBAAkBngB,GDlQCkgB,CAAwB/kB,EAAQ,MAC1D8kB,EAAkBqC,mBAAmB,CAAElH,oBAAoB,IAGvD5b,WAAWV,GAAsB7B,YACnCgjB,EAAkBvJ,OAAO1W,GAE3B,MAAM8jB,8BAAiCtO,IACjCA,EACFyK,EAAkBvJ,OAAO1W,GAEzBigB,EAAkBvJ,OAAO,OAG7BlX,WAAWV,GAAsBhB,iBAC/BgmB,+BAIF,IAAIC,EAAgB,IAAItI,0CAAqBtgB,EAAQ6E,GAGrD,OAFAsW,kCAAkCJ,sBAAsB6N,GAEjD,KAELzN,kCAAkCF,wBAChC2N,GAIFA,EAAcnI,WAGd9X,uBAAuB+O,UAAU5U,mBAC/B+hB,GAIFxgB,WAAWV,GAAsBb,mBAC/B6lB,+BAIF7D,EAAkBvJ,OAAO,SAG5B,CAAC1W,EAAK7E,IAGP,kBAAC,IAAM6oB,SAAP,KACE,kBAACjoB,EAAA,EAAD,CACEC,MAAM,OACNC,OAAO,OACPC,QAASyiB,EAAW,QAAU,OAC9BtiB,IAAKwiB,IAEP,kBAACnjB,YAAD,CACEC,QAAQ,mBACRC,OAAQ+iB,GAAYC,IAEtB,kBAACliB,UAAD,CAAWf,QAAQ,sBAAsBC,QAASgjB,O,uFEpIxD,MAAMqF,GAAa,GAEnB/oB,OAAOgpB,iBACL,WACA,KAC4B,IAAtBD,GAAWpc,QACb/M,QAAQgI,KAAK,0BAEf,MAAMqhB,EAAWF,GAAWG,MAC5BtpB,QAAQuG,MAAM,kBAAmB4iB,GAAWpc,QACxCoc,GAAWpc,OAAS,GAAG3M,OAAOmpB,QAAQC,UAAU,GAAI,IACpDH,GAAUA,KAEhB,CAAEI,SAAS,IC8DEC,mBAhEGC,IAAU,MAAD,EACAxqB,oBAAS,GADT,mBAClB+e,EADkB,KACZ0L,EADY,OAEczqB,oBAAS,GAFvB,mBAElB0qB,EAFkB,KAELC,EAFK,KAGnBP,EDiBC,CAAErmB,KAdYH,IACnB,MAAMgnB,EAAWZ,GAAWpc,OAC5Boc,GAAWjmB,KAAKH,GAChB/C,QAAQuG,MAAM,kBAAmB4iB,GAAWpc,QAC3B,IAAbgd,GACF3pB,OAAOmpB,QAAQC,UAAU,GAAI,KASJF,IALT,KAElBlpB,OAAOmpB,QAAQS,SC+BjB,OA9BIL,EAAMzL,OAASA,IACb2L,EAGFF,EAAMniB,WAfR+hB,EAAQrmB,KAAK,KACX0mB,GAAS,GACTD,EAAMniB,YAERoiB,GAAS,GACTE,GAAgB,MA0BdD,GAAgB3L,GAASyL,EAAMzL,MACjC4L,GAAgB,GAKd5L,IAASyL,EAAMzL,MACjBqL,EAAQD,MAIR,kBAACW,GAAA,EAAD,CACE/L,KAAMA,EACN1W,QAAS,KACPmiB,EAAMniB,WAER0iB,WAAYP,EAAMO,WAClBC,SAAUR,EAAMQ,SAChBC,UAAWT,EAAMS,UACjBppB,QAAS2oB,EAAM3oB,SAEd2oB,EAAMU,W,cCtEN,MAAMC,iBAAmBC,IAC9B,MAAMC,EAAY,UAAYD,EAAQE,WAAa,OAiBnD,MAfsB,CACpBD,UAAWA,EAGXE,gBAAiBF,EAGjBG,aAAcH,EAGdI,YAAaJ,EAGbK,WAAYL,IC+BT,MAAMM,kCAAqBC,IAAMC,cACtChpB,YAAY2nB,GACVhE,MAAMgE,GADW,KAKnBsB,WAAa,EAAGvd,YAAWsE,aAAYV,SAAQ4Z,WAAUC,kBACvD,GAAiB,MAAbzd,EACF,MAAO,CAAC,GAAI,SAEd,IAAI0d,EAAY,IAAI7lB,KAAKmI,GAAW2d,UAAY9lB,KAAKyO,MAEjDsX,EAAU,GAId,OAHcA,EAAVJ,EAvDR,SAASK,eAAeC,GACtB,IAAIC,EAAW,GAEXD,EAAS,IACXA,GAAUA,EACVC,EAAW,KAGb,IAAIC,EAAOhf,KAAKqS,MAAMyM,EAAS,KAC/B,GAAIE,EAAO,GACT,OAAOD,EAAWC,EAAO,OAG3B,IAAIC,EAAOjf,KAAKqS,MAAM2M,EAAO,IAC7B,GAAIC,EAAO,GACT,OAAOF,EAAWE,EAAO,OAG3B,IAAIC,EAAQlf,KAAKqS,MAAM4M,EAAO,IAE9B,GADAA,GAAsB,GAARC,EACVA,EAAQ,GACV,OAAOH,EAAWG,EAAQ,IAAMD,EAAKlB,WAAWoB,SAAS,EAAG,KAAO,KAGrE,IAAIC,EAAOpf,KAAKqS,MAAM6M,EAAQ,IAE9B,OADAA,GAAuB,GAAPE,EAEdL,EACAK,EACA,KACAF,EACA,IACAD,EAAKlB,WAAWoB,SAAS,EAAG,KAC5B,KAsBwBN,CAAeH,GAlB3C,SAASW,sBAAsBre,GAE7B,OADW,IAAInI,KAAKmI,GACRse,qBAiBKD,CAAsBre,GAEjCsE,GAAcV,EACT,CAAC,UAAW,UAAYga,IAG5BF,EAAY,OAAWpZ,EACtBkZ,EACEC,EAAoB,CAAC,QAAS,gBAAkBG,EAAU,KAClD,CAAC,QAAS,eACZ,CAAC,QAAS,UAAYA,GAGhCJ,EAAiB,CAAC,MAAO,WAAaI,EAAU,KACxC,CAAC,MAAO,KAAOA,IA3BV,KA8BnBW,gBAAkBtC,IAChB,GAA4B,OAAxBpnB,KAAK2pB,OAAO/H,QAAkB,CAChC,MAAMgI,EAAU5pB,KAAK2pB,OAAO/H,QADI,EAEP5hB,KAAK0oB,WAAWtB,GAFT,mBAEzB7nB,EAFyB,KAElBjB,EAFkB,KAGhC0T,OAAO6X,OAAOD,EAAQE,MAAO,CAAEvqB,MAAOA,IAElCqqB,EAAQG,YAAczrB,IACxBsrB,EAAQG,UAAYzrB,KAnCxB0B,KAAK2pB,OAASnB,IAAMwB,YAwCtBC,SAAU,MAAD,EACkBjqB,KAAK0oB,WAAW1oB,KAAKonB,OADvC,mBACA7nB,EADA,KACOjB,EADP,KAEP,OACE,0BAAMwrB,MAAO,CAAEvqB,MAAOA,GAASP,IAAKgB,KAAK2pB,QACtCrrB,IAMF,MAAM4rB,kCAAqB1B,IAAMC,cACtChpB,YAAY2nB,GACVhE,MAAMgE,GADW,KASnB+C,qBAAuB1L,IACrBze,KAAKye,QAAUA,EAGfze,KAAKoqB,oBAbY,KAuBnBC,OAASC,IACPtqB,KAAKkO,QAAUoc,EAGftqB,KAAKoqB,oBA3BY,KA8BnBA,iBAAmB,KACjB,GAAIpqB,KAAKuqB,SAAS3I,QAAS,CACzB,MAAM4I,EAAaN,0BAAaO,sBAC9BzqB,KAAKye,QACLze,KAAKkO,SAEP8D,OAAO6X,OAAO7pB,KAAKuqB,SAAS3I,QAAQkI,MAAOU,GAE7C,GAAIxqB,KAAK0qB,YAAY9I,QAAS,CAC5B,MAAM+I,EAAcT,0BAAate,YAAY5L,KAAKye,QAASze,KAAKkO,SAC5Dyc,IAAgB3qB,KAAK0qB,YAAY9I,QAAQmI,YAC3C/pB,KAAK0qB,YAAY9I,QAAQmI,UAAYY,KAvCzC3qB,KAAKye,QAAUN,iBAAiB5K,UAEhCvT,KAAK0qB,YAAclC,IAAMwB,YACzBhqB,KAAKuqB,SAAW/B,IAAMwB,YACtBhqB,KAAKkO,QAAUlO,KAAKonB,MAAMlZ,QAU5B0c,oBACEzM,iBAAiB1d,iBAAiBT,KAAKmqB,sBAEzCU,uBACE1M,iBAAiBvd,mBAAmBZ,KAAKmqB,sBAyB3C,mBAAmBW,EAAYC,GAC7B,GAAmB,OAAfD,GAAoC,OAAbC,EAAmB,MAAO,OAErD,MAAMC,EAAWpf,sBACf,CAAEvH,IAAKymB,EAAWrL,OAAOC,SAAUzT,IAAK6e,EAAWrL,OAAOE,WAC1DoL,GAEF,OAAQ5gB,KAAKa,MAAMggB,EAAW,KAAO,IAAI9C,WAAa,KAGxD,6BAA6B4C,EAAYC,GACvC,GAAmB,OAAfD,GAAoC,OAAbC,EAAmB,OAAOhD,iBAAiB,GACtE,MAAMC,EAAUjQ,8BACd,CAAE1T,IAAKymB,EAAWrL,OAAOC,SAAUzT,IAAK6e,EAAWrL,OAAOE,WAC1DoL,GAEF,OAAOhD,iBAAiBC,GAG1BiC,SAEE,OADAjqB,KAAKkO,QAAUlO,KAAKonB,MAAMlZ,QAExB,kBAAC,IAAMyY,SAAP,KACE,0BAAM3nB,IAAKgB,KAAK0qB,aACbR,0BAAate,YAAY5L,KAAKye,QAASze,KAAKkO,UACvC,IACR,yBACElP,IAAKgB,KAAKuqB,SACVT,MAAK,aACHjrB,QAAS,gBACNqrB,0BAAaO,sBAAsBzqB,KAAKye,QAASze,KAAKkO,WAJ7D,YCxKD,MAGM+c,YAAc,IAEvB,kBAACC,GAAA,EAAD,CACEC,UAAU,MACVC,QAAQ,OACRjsB,UAAU,4BACV2qB,MAAO,CACLlrB,OAVoB,GAWpBC,QAAS,OACTC,WAAY,SACZusB,UAAW,eAGb,yBAAKvB,MAAO,CAAEwB,KAAM,MAApB,QACA,yBAAKxB,MAAO,CAAEnrB,MAAO,MAAOM,UAAW,UAAvC,SACA,yBAAK6qB,MAAO,CAAEnrB,MAAO,MAAOM,UAAW,UAAvC,YAKN,MAAMssB,uDAA6B/C,IAAMC,cACvCwB,SAAU,MAAD,EASHjqB,KAAKonB,MAPPrgB,EAFK,EAELA,SACA4M,EAHK,EAGLA,SACAzF,EAJK,EAILA,QACA/C,EALK,EAKLA,UACA4D,EANK,EAMLA,OACAyc,EAPK,EAOLA,IACAC,EARK,EAQLA,SAGF,OACE,yBACE3B,MAAO,CACLnrB,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,WAAY,SACZusB,UAAW,aACX5X,OAAQgY,EAAW,oCAAiCC,IAGtD,kBAAChtB,EAAA,EAAD,CAAK4sB,KAAK,IAAIK,YAAa,EAAGC,WAAY,EAAGC,cAAe,GAC1D,kBAACzsB,EAAA,EAAD,CAAYgsB,QAAQ,SAASrkB,GAC7B,kBAAC3H,EAAA,EAAD,CACEgsB,QAAQ,UACR7rB,MAAM,gBACNuqB,MAAO,CAAE6B,YAAa,SAHxB,IAKIhY,EALJ,MAQF,yBAAKmW,MAAO,CAAEnrB,MAAO,MAAOM,UAAW,UACrC,6BACE,kBAACG,EAAA,EAAD,CAAYgsB,QAAQ,WAClB,kBAAC,0BAAD,CACEjgB,UAAWA,EACX4D,OAAQA,EACRU,WAAYV,EACZ4Z,UAAQ,MAId,6BACE,kBAACvpB,EAAA,EAAD,CAAYgsB,QAAQ,WAClB,kBAAC,0BAAD,CAAcld,QAASA,OAI7B,yBAAK4b,MAAO,CAAEnrB,MAAO,MAAOM,UAAW,UACrC,kBAACP,EAAA,EAAD,CAAKotB,aAAc,EAAGH,YAAa,GAChCH,EACD,kBAAC9sB,EAAA,EAAD,CACEY,SAAS,QACTysB,WAAW,MACXC,UAAW,EACXlC,MAAO,CAAEmC,cAAe,UACxB9sB,UAAW,uBAAyBqsB,EAAIU,oBAS/C,MAAMC,UAAY,EAAGxnB,OAAM9D,QAAOipB,YACvC,MAAMnjB,EAAUhC,EAAKsN,KAAKpR,GACpBsc,EAAYxY,EAAKA,KAAKgC,GAEtBI,EAAWoW,EAAYA,EAAUtW,KAAKC,KAAKC,SAAW,eACtD4M,EAAWwJ,EAAYA,EAAUtW,KAAKC,KAAK6M,SAAWhN,EACtDuH,EAAUiP,EAAYA,EAAUjP,QAAU,KAC1C/C,EAAYgS,EAAYA,EAAUjP,QAAQ/C,UAAY,KACtD4D,EAASoO,EAAYA,EAAUpO,OAAS,KACxCyc,EAAMrO,EAAYA,EAAUtW,KAAKC,KAAKslB,YAAYZ,IAAM,KACxDa,GAA+C,IAApC1nB,EAAK0nB,SAASvrB,QAAQ6F,GACjC8kB,GAAmD,IAAxC9mB,EAAK2nB,aAAaxrB,QAAQ6F,GAE3C,OACE,kBAACukB,GAAA,EAAD,CACEC,UAAU,MACVC,QAAQ,OACRmB,QAAQ,OACRzC,MAAK,eACAA,EADA,CAEH0C,gBACEH,IAAaZ,EAAW,2BAAwBC,IAEpDe,QAAS,KACFhB,GAAU9mB,EAAK+nB,eAAe/lB,KAGrC,kBAAC,+CAAD,CACEI,SAAUA,EACV4M,SAAUA,EACVzF,QAASA,EACT/C,UAAWA,EACX4D,OAAQA,EACRyc,IAAKA,EACLC,SAAUA,M,wBCnHlB,MAwBMkB,cAAgB,CAAClX,EAAYmX,KACjC,GAAIA,EAAK,CAEP,MAAMC,EAAQ,CAAExoB,IAAKuoB,EAAInN,OAAOC,SAAUzT,IAAK2gB,EAAInN,OAAOE,WAC1D,IAAImN,EAAY9a,OAAO+B,QAAQ0B,GAAY9S,IAAI,EAAEgE,EAAShC,KAEjD,CAACgC,EADSiF,sBAAYihB,EAAOloB,EAAKuJ,WAK3C,OAFA4e,EAAUC,KAAK,CAACC,EAAKC,IAAQD,EAAI,GAAKC,EAAI,IACzBH,EAAUnqB,IAAIuqB,GAAMA,EAAG,IAEnC,CAEL,IAAI7lB,EAAW2K,OAAOC,KAAKwD,GAE3B,OADApO,EAAS0lB,OACF1lB,IAKI,MAAM8lB,4CAA0B3E,IAAMC,cACnDhpB,YAAY2nB,GACVhE,MAAMgE,GADW,KAWnBgG,eAAiB,KACfptB,KAAKhD,SAASD,GAAK,eAAUA,EAAV,CAAiBswB,UAAU,MAZ7B,KA8BnBC,2BAA6B,KAC3B,MAAMC,EAAeZ,cAAc3sB,KAAKjD,MAAM0Y,WAAYzV,KAAKye,UCxF5D,SAAS+O,YAAYC,EAAQC,GAElC,IAAKD,IAAWC,EAAQ,OAAO,EAG/B,GAAID,EAAOjjB,SAAWkjB,EAAOljB,OAAQ,OAAO,EAE5C,IAAK,IAAI2L,EAAI,EAAGwX,EAAIF,EAAOjjB,OAAQ2L,EAAIwX,EAAGxX,IAMxC,GAAIsX,EAAOtX,KAAOuX,EAAOvX,GACvB,OAAO,EAGX,OAAO,GDyEAqX,CAAYxtB,KAAKjD,MAAM6wB,gBAAiBL,IAC3CvtB,KAAKhD,SAASD,GAAK,eAAUA,EAAV,CAAiB6wB,gBAAiBL,MAlCtC,KAqCnBM,aAAepP,IAEbze,KAAKye,QAAUA,EACfze,KAAKstB,8BAxCY,KA2CnBQ,gBAAkBrY,IAEhBzV,KAAKhD,SAASD,GAAK,eACdA,EADc,CAEjB0Y,WAAYA,EACZmY,gBAAiBjB,cAAclX,EAAYzV,KAAKye,aAhDjC,KAoDnBiO,eAAiB/lB,IACX3G,KAAKonB,MAAMsF,gBAAgB1sB,KAAKonB,MAAMsF,eAAe/lB,IAnDzD3G,KAAKjD,MAAQ,CAAEswB,UAAU,GACzBrtB,KAAKye,QAAUN,iBAAiB5K,UAChC,MAAMkC,EAAahP,uBAAuBgP,WAAW7V,WACrDI,KAAKjD,MAAQ,CACX0Y,WAAYA,EACZmY,gBAAiBjB,cAAclX,EAAYzV,KAAKye,UAQpDmM,oBACEnkB,uBAAuBgP,WAAWhV,iBAAiBT,KAAK8tB,iBACxD3P,iBAAiB1d,iBAAiBT,KAAK6tB,cAKvC/oB,WAAW9E,KAAKotB,gBAGlBvC,uBACEpkB,uBAAuBgP,WAAW7U,mBAAmBZ,KAAK8tB,iBAC1D3P,iBAAiBvd,mBAAmBZ,KAAK6tB,cA6B3C5D,SACE,IAAKjqB,KAAKjD,MAAMswB,SACd,OACE,yBACEvD,MAAO,CACLnrB,MAAO,OACPE,QAAS,OACTE,eAAgB,SAChBgvB,SAAU,WAGZ,kBAAC7uB,EAAA,EAAD,CAAkB8uB,eAAa,EAAClE,MAAO,CAAE3rB,OAAQ,UAKvD,MAAM8vB,EArHc,EAACznB,EAAWiP,EAAYyY,KAC9C,MAAMC,cAAgB3sB,GACL,KAAX0sB,GAGG1sB,EAAK0qB,cAAcxrB,SAASwtB,EAAOhC,eAI5C,IAAIkC,EAAiB5nB,EAAUiN,OAAO9M,GAElCwnB,cAAc1Y,EAAW9O,GAASE,KAAKC,KAAK6M,WAC5Cwa,cAAc1Y,EAAW9O,GAASE,KAAKC,KAAKC,WAShD,OAJ8B,IAA1BqnB,EAAe5jB,SAAiB,KAAKqa,KAAKqJ,IAAWA,EAAO1jB,OAAS,GACvE4jB,EAAeztB,KAAKutB,GAGfE,GAgGmBC,CACtBruB,KAAKjD,MAAM6wB,gBACX5tB,KAAKjD,MAAM0Y,WACXzV,KAAKonB,MAAM8G,QAGb,OACE,kBAAC,IAAMvH,SAAP,KACE,kBAACsE,YAAD,MACA,yBAAKnB,MAAO,CAAEwB,KAAM,MAClB,kBAAC,KAAD,KACG,EAAG1sB,SAAQD,WACV,kBAAC,KAAD,CACEA,MAAOA,EACPC,OAAQA,EACR0vB,UAAWL,EAAgBzjB,OAC3B+jB,SD7IS,GC8ITC,SAAU,CACRvc,KAAMgc,EACNtpB,KAAM3E,KAAKjD,MAAM0Y,WACjB4W,SAAUrsB,KAAKonB,MAAMiF,SACrBC,aAActsB,KAAKonB,MAAMkF,aACzBI,eAAgB1sB,KAAK0sB,gBAEvB+B,QAAS,CAAC5tB,GAASoR,UAAWA,EAAKpR,IAElCsrB,eE3IjB,MAAMpuB,GAAYC,YAAW,CAC3B0wB,iBAAkB,CAChB9vB,OAAQ,UA0HGyiB,mBArHO+F,IACpB,MAAM3oB,EAAUV,KACVE,EAAQ0wB,cACRhH,EAAaiH,YAAc3wB,EAAM4wB,YAAYC,KAAK,OAH3B,EAMGlyB,mBAAS,IANZ,mBAMtByvB,EANsB,KAMZ0C,EANY,OAODnyB,mBAAS,IAPR,mBAOtBsxB,EAPsB,KAOdc,EAPc,KAQvBC,EAAc5C,EAAS7hB,OAEvB0kB,YAAc,KAElBF,EAAU,IACVD,EAAY,IACZ3H,EAAMniB,WAuBR,OACE,kBAAC,eAAD,CACE0W,KAAMyL,EAAMzL,KACZ1W,QAASiqB,YACTvH,WAAYA,EACZC,SAAS,KACTC,WAAW,EACXppB,QAAS,CAAE0wB,MAAO1wB,EAAQiwB,mBAE1B,kBAACU,GAAA,EAAD,CACEtF,MACkB,IAAhBmF,EACI,GACuB,UAAvBhxB,EAAMoxB,QAAQC,KACd,CACE/vB,MAAOtB,EAAMoxB,QAAQE,UAAUC,KAC/BhD,gBAAiBiD,aAAQxxB,EAAMoxB,QAAQE,UAAUG,MAAO,MAE1D,CACEnwB,MAAOtB,EAAMoxB,QAAQM,KAAKC,QAC1BpD,gBAAiBvuB,EAAMoxB,QAAQE,UAAUM,OAIhDZ,EAAc,EACb,kBAAC7vB,EAAA,EAAD,CAAY+rB,UAAU,MAAM5rB,MAAM,UAAU6rB,QAAQ,aACjD6D,EADH,aAIA,kBAAC7vB,EAAA,EAAD,CAAY+rB,UAAU,MAAMC,QAAQ,KAAK0E,GAAG,cAA5C,oBAKJ,kBAACpxB,EAAA,EAAD,CAAKitB,YAAY,MAAMG,aAAa,MAAMF,WAAW,OACnD,kBAACmE,GAAA,EAAD,CAEE5xB,OAAO,QACP6xB,aAAa,MACb5E,QAAQ,WACR0E,GAAG,eACHG,MAAM,SACNX,KAAK,SACLzH,WAAS,EACTqI,SAAU/J,GAAS6I,EAAU7I,EAAME,OAAOhmB,UAG9C,kBAAC3B,EAAA,EAAD,CACE4sB,KAAK,WACL6E,QAAQ,MACRtxB,QAAQ,OACRuxB,cAAc,SACdtxB,WAAW,WAEX,kBAAC,oCAAD,CACEwtB,aAAclF,EAAMkF,aACpBD,SAAUA,EACVK,eA7EalrB,IACnB,MAAM6uB,EAAgBhE,EAASvrB,QAAQU,GACvC,IAAI8uB,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAYC,OAAOlE,EAAU7qB,GAChB,IAAlB6uB,EACTC,EAAcA,EAAYC,OAAOlE,EAAS/b,MAAM,IACvC+f,IAAkBhE,EAAS7hB,OAAS,EAC7C8lB,EAAcA,EAAYC,OAAOlE,EAAS/b,MAAM,GAAI,IAC3C+f,EAAgB,IACzBC,EAAcA,EAAYC,OACxBlE,EAAS/b,MAAM,EAAG+f,GAClBhE,EAAS/b,MAAM+f,EAAgB,KAInCtB,EAAYuB,IA6DNpC,OAAQA,KAGZ,kBAACsC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQhE,QAASyC,YAAa3vB,MAAM,WAApC,UAGA,kBAACkxB,GAAA,EAAD,CACEhF,SAA0B,IAAhBwD,EACVxC,QAAS,KACPrF,EAAMsJ,YAAYrE,GAClB6C,eAEF3vB,MAAM,WANR,W,wLC9HR,MAAMoxB,IACsC,IAA1CjT,UAAUkT,SAAS9vB,QAAQ,YACa,IAAxC4c,UAAUkT,SAAS9vB,QAAQ,UACa,IAAxC4c,UAAUkT,SAAS9vB,QAAQ,QACvB,IACA,IAES,MAAM+vB,mBACnBpxB,YAAYqnB,GAAW,KAMvBgK,aAAelzB,IACbH,QAAQC,IAAIsC,KAAKkoB,WAAY,gBAC7BloB,KAAK+wB,qBAAsB,EAE3B,MAAMC,EAAQpzB,EAAEqzB,QAAQ,GAExBjxB,KAAKkxB,mBAAqBpsB,WAAW,KACnC9E,KAAK+wB,qBAAsB,EAC3B/wB,KAAK8mB,SAASkK,GACdvzB,QAAQC,IAAIsC,KAAKkoB,WAAY,iBAC5ByI,KAhBiB,KAmBtBQ,YAAcvzB,IACZH,QAAQC,IAAIsC,KAAKkoB,WAAY,eAC7BtjB,aAAa5E,KAAKkxB,qBArBE,KAwBtBE,cAAgBxzB,IACdH,QAAQC,IAAIsC,KAAKkoB,WAAY,iBAC7BloB,KAAK+wB,qBAAsB,EAC3BnsB,aAAa5E,KAAKkxB,qBA3BE,KA8BtBG,WAAazzB,IACXH,QAAQC,IAAIsC,KAAKkoB,WAAY,cAC7BloB,KAAK+wB,qBAAsB,EAC3BnsB,aAAa5E,KAAKkxB,qBAjCE,KAoCtBI,cAAgB1zB,IACdH,QAAQC,IAAIsC,KAAKkoB,WAAY,iBAC7BloB,KAAK+wB,qBAAsB,EAE3BnsB,aAAa5E,KAAKkxB,oBAElBlxB,KAAK8mB,SAASlpB,GACdA,EAAE2zB,kBA1CFvxB,KAAK8mB,SAAWA,EAChB9mB,KAAKkxB,mBAAqB,KAC1BlxB,KAAK+wB,qBAAsB,GCRxB,MAAMS,8CAA2BhJ,IAAMC,cAC5ChpB,YAAY2nB,GACVhE,MAAMgE,GADW,KAgBnBqK,8BAAgC,CAACC,EAAQvU,KACvC,MAAMwU,EAAM9zB,OAAO+zB,kBAAoB,EACjCC,EAAOH,EAAOI,wBAKpB,GAJAJ,EAAO/yB,MAAQkzB,EAAKlzB,MAAQgzB,EAC5BD,EAAO9yB,OAASizB,EAAKjzB,OAAS+yB,EAG1BxU,EAAUpO,QAAUoO,EAAUlO,MAAMzE,OAAS,EAAG,CAClD,MAAMunB,EAAiB5U,EAAUrM,qBAC3BkhB,EAAqB7U,EAAUlO,MAAM,GAAG9D,UAC9C,OAAOhB,KAAK2M,IAAI,EAAGib,EAAiBC,GAItC,OAAO,KA9BU,KAiCnBC,aAAe,CACbP,EACAziB,EACAijB,EACAC,EACAC,EACAjhB,EACAkhB,KAEA,MAAMV,EAAM9zB,OAAO+zB,kBAAoB,EACjCjzB,EAAQ+yB,EAAO/yB,MACfC,EAAS8yB,EAAO9yB,OAEhB0zB,SAAW,CAACC,EAAM/lB,IAGf,CAFG7N,GAAS,GAAKwS,EAAcohB,GAAQH,GACpCxzB,GAAU,GAAK4N,EAAY0lB,IAAaC,EAAWD,KAP5D,EAW6BI,SAAS,EAAGD,GAAnCG,EAXN,oBAaH,IAAIC,EAAMf,EAAOgB,WAAW,KAAM,CAChCC,OAAO,IAITF,EAAIG,UAAY5yB,KAAK6yB,aACrBJ,EAAIK,SAAS,EAAG,EAAGn0B,EAAOC,GAG1B6zB,EAAIG,UAAY5yB,KAAK+yB,UACrBN,EAAIO,YAAchzB,KAAKizB,YACvBR,EAAIS,YACJT,EAAIU,OAAO,EAAG,GACdV,EAAIW,OAAOz0B,EAAO,GAClB8zB,EAAIW,OAAOz0B,EAAO6zB,GAClB,IAAIa,EAAWb,EACf,IAAK,IAAIrc,EAAIlH,EAAMzE,OAAS,EAAG2L,GAAK,EAAGA,IAAK,CAC1C,MAAMxR,EAAOsK,EAAMkH,GACnB,GAAIxR,EAAKwG,UAAYgG,EAAcihB,EAAW,MAFJ,QAI3BE,SAAS3tB,EAAKwG,UAAWxG,EAAK6H,WAJH,mBAInCkL,EAJmC,KAIhCC,EAJgC,KAK1C8a,EAAIW,OAAO1b,EAAGC,GAEd0b,EAAW1b,EAEb8a,EAAIW,OAAO,EAAGC,GACdZ,EAAIa,OAGJb,EAAIc,UAAY,EAAI5B,EACpBc,EAAIe,SAAW,QACff,EAAIgB,QAAU,QACdhB,EAAIS,YACJ,IAAK,IAAI/c,EAAIlH,EAAMzE,OAAS,EAAG2L,GAAK,EAAGA,IAAK,CAC1C,MAAMxR,EAAOsK,EAAMkH,GACnB,GAAIxR,EAAKwG,UAAYgG,EAAcihB,EAAW,MAFJ,QAI3BE,SAAS3tB,EAAKwG,UAAWxG,EAAKwL,UAJH,mBAInCuH,EAJmC,KAIhCC,EAJgC,KAKtCxB,IAAMlH,EAAMzE,OAAS,EACvBioB,EAAIU,OAAOzb,EAAGC,GAEd8a,EAAIW,OAAO1b,EAAGC,GAGlB8a,EAAIiB,UAlGa,KAqGnBhK,gBAAmB/kB,IACjB,KAAM3E,KAAKonB,MAAMhV,SAASzN,GAAO,OACjC,GAA+B,OAA3B3E,KAAK2zB,UAAU/R,QAAkB,OACrC,MAAM8P,EAAS1xB,KAAK2zB,UAAU/R,QAGxBzE,EAAYxY,EAAK3E,KAAKonB,MAAMhV,OAC5BnD,EAAQkO,EAAUlO,MAClBojB,EAAmBlV,EAAU3Q,UAC7B2E,EAAcgM,EAAUrM,qBAG9B,GAAI9Q,KAAK4zB,wBAA0BziB,EAAa,OAChDnR,KAAK4zB,sBAAwBziB,EAG7B,MAAM0iB,EACiB,OAArB1W,EAAUhR,OAAkBgR,EAAUhR,OAASgR,EAAUjR,QAC3D,GAAsB,OAAlB2nB,EAAwB,OAG5B,MAAMzB,EAAYpyB,KAAKyxB,8BAA8BC,EAAQvU,GAG7D,IAAI+U,EAAWG,EACXF,EAAW0B,EACf,IAAK,IAAI1d,EAAIlH,EAAMzE,OAAS,EAAG2L,GAAK,EAAGA,IAAK,CAC1C,MAAMxR,EAAOsK,EAAMkH,GACnB,GAAIxR,EAAKwG,UAAYgG,EAAcihB,EAAW,MAE9CF,EAAW/nB,KAAK0G,IAAIqhB,EAAUvtB,EAAK6H,WACnC2lB,EAAWhoB,KAAK2M,IAAIqb,EAAUxtB,EAAKwL,UAErCgiB,GAAYnyB,KAAK8zB,cACjB5B,GAAYlyB,KAAK8zB,cACjB3B,EAAWnyB,KAAK+zB,aAAe5pB,KAAK6pB,KAAK7B,EAAWnyB,KAAK+zB,cACzD7B,EAAWlyB,KAAK+zB,aAAe5pB,KAAKqS,MAAM0V,EAAWlyB,KAAK+zB,cAG1D/zB,KAAKiyB,aACHP,EACAziB,EACAijB,EACAC,EACAC,EACAjhB,EACAkhB,GAI+B,OAA7BryB,KAAKi0B,YAAYrS,UACnB5hB,KAAKi0B,YAAYrS,QAAQsS,YAAc/B,EAASjK,YAEjB,OAA7BloB,KAAKm0B,YAAYvS,UACnB5hB,KAAKm0B,YAAYvS,QAAQsS,YAAchC,EAAShK,aA3JjC,KA+JnBkM,mBAAsBzvB,IACpB3E,KAAK0pB,gBAAgB/kB,IAhKJ,KAmKnBimB,kBAAoB,KAClB5qB,KAAK0pB,gBAAgBjjB,uBAAuB+O,UAAUjC,WACtD9M,uBAAuB+O,UAAU/U,iBAAiBT,KAAKo0B,qBArKtC,KAuKnBC,mBAAqB,KACnBr0B,KAAK0pB,gBAAgBjjB,uBAAuB+O,UAAUjC,YAtKtDvT,KAAK2zB,UAAYnL,IAAMwB,YACvBhqB,KAAKi0B,YAAczL,IAAMwB,YACzBhqB,KAAKm0B,YAAc3L,IAAMwB,YAEzBhqB,KAAK8zB,cAAgB,GACrB9zB,KAAK+zB,aAAe,IACpB/zB,KAAK+yB,UAAY,UAEjB/yB,KAAK6yB,aAAe,UACpB7yB,KAAKizB,YAAc,OAEnBjzB,KAAK4zB,sBAAwB,EA6J/B/I,uBACEpkB,uBAAuB+O,UAAU5U,mBAC/BZ,KAAKo0B,oBAITnK,SACE,OACE,yBACEH,MAAO,CACLnrB,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,WAAY,YAGd,yBACEgrB,MAAO,CACLwB,KAAM,WACN3sB,MAAO,MACPmtB,aAAc,OACdjtB,QAAS,OACTuxB,cAAe,SACfrxB,eAAgB,gBAChBD,WAAY,aAGd,yBACEE,IAAKgB,KAAKi0B,YACVnK,MAAO,CAAExqB,SAAU,OAAQg1B,UAAW,WAExC,yBACEt1B,IAAKgB,KAAKm0B,YACVrK,MAAO,CAAExqB,SAAU,OAAQi1B,aAAc,aAG7C,yBACEzK,MAAO,CACLwB,KAAM,QACNyC,SAAU,SACVxS,SAAU,YAEZvc,IAAKgB,KAAKw0B,iBAEV,4BACEx1B,IAAKgB,KAAK2zB,UACV7J,MAAO,CACLvO,SAAU,WACV5c,MAAO,OACPC,OAAQ,aCzMtB,MAAM61B,GAAeC,aAAOt1B,IAAPs1B,CAAmB,CAAE3G,SAAU,SAAUzC,KAAM,MAE9DqJ,GAAgBD,aAAOt1B,IAAPs1B,CAAmB,CACvCE,YAAa,OACb7I,WAAY,SAGR8I,GAAYH,aAAOt1B,IAAPs1B,CAAmB,CACnC71B,QAAS,OACTE,eAAgB,gBAChB4sB,YAAa,SAGTmJ,GAA6BC,aAAW,CAC5CC,KAAM,CACJrJ,YAAa,QAEf/O,QAAS,CACPmR,SAAU,SACVjvB,WAAY,SACZm2B,WAAY,WAPmBF,CAShCG,MAEGC,GAA6BJ,aAAW,CAC5CC,KAAM,CACJn2B,QAAS,OACTC,WAAY,UACZC,eAAgB,gBAChBq2B,cAAe,OACfC,iBAAkB,OAClBC,aAAc,SAPiBP,CAShCQ,MAEGC,GAAed,aAAOt1B,IAAPs1B,CAAmB,CACtCpJ,KAAM,QACNzsB,QAAS,OACTE,eAAgB,aAChBqxB,cAAe,SACftxB,WAAY,aACZgtB,aAAc,QAGV2J,GAAef,aAAOt1B,IAAPs1B,CAAmB,CACtCpJ,KAAM,QACNzsB,QAAS,SAGL62B,GAAahB,aAAOt1B,IAAPs1B,CAAmB,CACpC71B,QAAS,OACTE,eAAgB,aAChBD,WAAY,SACZm2B,WAAY,WAGRU,GAAkBZ,aAAW,CACjCC,KAAM,CACJlJ,aAAc,OACdntB,MAAO,OACPC,OAAQ,SAJYm2B,CAMrBa,MACGC,GAAqBd,aAAW,CACpCC,KAAM,CACJlJ,aAAc,OACdntB,MAAO,OACPC,OAAQ,SAJem2B,CAMxBe,MACGC,GAAmBhB,aAAW,CAClCC,KAAM,CACJlJ,aAAc,OACdntB,MAAO,OACPC,OAAQ,SAJam2B,CAMtBiB,MAEH,MAAMC,sDAA+BzN,IAAMC,cACzChpB,YAAY2nB,GACVhE,MAAMgE,GADW,KA4CnB8O,sBAAyBljB,IAChB,CACLpU,OAA6B,OAArBoU,EAAU7G,OAAkB6G,EAAU7G,OAAS6G,EAAU9G,QACjEM,UAAWwG,EAAUxG,UACrB6P,MAAOrJ,EAAU3G,UACjBqD,aAAcsD,EAAUtD,aACxBD,WAAYuD,EAAUvD,WACtBV,OAAQiE,EAAUjE,OAClB4B,oBAAqBqC,EAAUrC,oBAC/BtM,IAAK2O,EAAU5H,IAAI/G,IACnB4H,IAAK+G,EAAU5H,IAAIa,IACnBkqB,YAC4B,OAA1BnjB,EAAUrD,YAAuB,KAAOqD,EAAUrD,YAAYtL,IAChE+xB,YAC4B,OAA1BpjB,EAAUrD,YAAuB,KAAOqD,EAAUrD,YAAY1D,IAChEK,SAAU0G,EAAU1G,SACpBwE,qBAAsBkC,EAAUlC,uBA5DjB,KAgEnBulB,aAAgBC,IACd,MAAMC,EAAWv2B,KAAKw2B,WACtB,IAAK,IAAItb,KAAKqb,EACZ,KAAMrb,KAAKob,GAAW,OAAO,EAE/B,IAAK,IAAIpb,KAAKob,EAAU,CACtB,KAAMpb,KAAKqb,GAAW,OAAO,EAC7B,GAAIA,EAASrb,KAAOob,EAASpb,GAAI,OAAO,EAE1C,OAAO,GAzEU,KA4EnBiP,qBAAwB1L,IACtBze,KAAKye,QAAUA,GA7EE,KAgFnBgY,kBAAqBtZ,IACnB,KAAMnd,KAAKonB,MAAMzgB,WAAWwW,GAAY,OAExC,MAAMnK,EAAYmK,EAAUnd,KAAKonB,MAAMzgB,SACjC+vB,EAAgB12B,KAAKk2B,sBAAsBljB,GAG7ChT,KAAKq2B,aAAaK,IACpB12B,KAAKw2B,WAAaE,EAClB12B,KAAK0pB,iBAAgB,IAGrB1pB,KAAK0pB,iBAAgB,IA5FN,KAgGnBoE,gBAAmBhf,IACjB,MAAM6nB,EAAe32B,KAAK42B,2BAA2B52B,KAAKjD,MAAO+R,GACxB,IAArCkD,OAAOC,KAAK0kB,GAAcnsB,QAC5BxK,KAAKhD,SAAS25B,IAnGC,KAuGnBC,2BAA6B,CAACje,EAAUke,KACtC,MAAMF,EAAe,GAEfG,YAAc,CAACt1B,EAAMnB,KACrBmB,KAAQmX,GAAYA,EAASnX,KAAUnB,IAG3Cs2B,EAAan1B,GAAQnB,IAGvB,GAAIL,KAAKonB,MAAMzgB,WAAWkwB,EAAU,CAClC,MAAM/nB,EAAQ+nB,EAAS72B,KAAKonB,MAAMzgB,SAKlC,GAHAmwB,YAAY,aAAchoB,EAAMjI,KAAKkwB,QACrCD,YAAY,aAAchsB,UAAUgE,EAAMjI,KAAKmwB,YAAY7rB,YAEvD,YAAa2D,GAAS,UAAWA,EAAMmoB,QAAS,CAClD,MAAMC,EAAQpoB,EAAMmoB,QAAQC,MACN,MAAlBA,EAAMlM,UACR8L,YAAY,gBAAiBI,EAAMlM,SAASmM,QAAQ,IAClD,SAAUD,GACZJ,YAAY,YAAaI,EAAM5H,KAAK5rB,MAI1C,OAAOizB,GAhIU,KAmInBjN,gBAAmB2M,IAEjB,GAA+B,OAA3Br2B,KAAKo3B,UAAUxV,SAAoByU,EAAc,CACnD,MAAMgB,EAAYpB,8CAAuBqB,aAAat3B,KAAKw2B,YACvDa,IAAcr3B,KAAKo3B,UAAUxV,QAAQmI,YACvC/pB,KAAKo3B,UAAUxV,QAAQmI,UAAYsN,GAYvC,GARgC,OAA5Br3B,KAAKu3B,WAAW3V,SAAoByU,GACtCr2B,KAAKu3B,WAAW3V,QAAQyI,OAAO,CAC7BhmB,IAAKrE,KAAKw2B,WAAWnyB,IACrB4H,IAAKjM,KAAKw2B,WAAWvqB,MAKI,OAAzBjM,KAAKw3B,QAAQ5V,SAAoByU,EAAc,CACjD,IAAI5a,EAAOzb,KAAKw3B,QAAQ5V,QAExB,MAAM7G,EAAe5D,aACnBnX,KAAKw2B,WAAW9mB,aAChB1P,KAAKw2B,WAAW/mB,WAChBzP,KAAKw2B,WAAWznB,OAChB,CAAE1K,IAAKrE,KAAKw2B,WAAWnyB,IAAK4H,IAAKjM,KAAKw2B,WAAWvqB,KACjD,CAAE5H,IAAKrE,KAAKw2B,WAAWL,YAAalqB,IAAKjM,KAAKw2B,WAAWJ,cAI3D,GAAI3a,EAAKgc,WAAWjtB,OAAS,EAAG,CAC9B,MAAM8M,EAAOmE,EAAKgc,WAAW,GACbngB,EAAKogB,aAAa,OAClB3c,EAAazD,MAC3BA,EAAK+I,aAAa,IAAKtF,EAAazD,MAKxC,MAAMQ,OACsB4T,IAA1B3Q,EAAajD,SAAyB,EAAIiD,EAAajD,SACzD9F,OAAO6X,OAAOpO,EAAKqO,MAAO/B,iBAAiBjQ,IAe7C,GAXkC,OAA9B9X,KAAK23B,aAAa/V,SACpB5hB,KAAK23B,aAAa/V,QAAQ8H,gBAAgB,CACxCve,UAAiD,IAAtCnL,KAAKw2B,WAAW7lB,oBAC3B5B,OAAQ/O,KAAKw2B,WAAWznB,OACxBU,WAAYzP,KAAKw2B,WAAW/mB,WAC5BkZ,UAAU,EACVC,YAAazmB,WAAWV,GAAsB7B,aAKX,OAAnCI,KAAK43B,kBAAkBhW,SAAoByU,EAAc,CAC3D,MAAMwB,EAAoB5B,8CAAuB6B,qBAC/C93B,KAAKjD,MAAMg7B,WACX/3B,KAAKw2B,WAAW1lB,sBAEd+mB,IAAsB73B,KAAK43B,kBAAkBhW,QAAQmI,YACvD/pB,KAAK43B,kBAAkBhW,QAAQmI,UAAY8N,KA5L/C73B,KAAKye,QAAUN,iBAAiB5K,UAChCvT,KAAKgb,WAAa9D,kBAAkBlX,KAAKonB,MAAMzgB,SAG/C3G,KAAKjD,MAAQ,CACXi7B,WAAY,KACZD,WAAY,KACZE,cAAe,KACfC,UAAW,MAEblmB,OAAO6X,OACL7pB,KAAKjD,MACLiD,KAAK42B,2BACH52B,KAAKjD,MACL0J,uBAAuBC,kBAK3B1G,KAAKu3B,WAAa/O,IAAMwB,YACxBhqB,KAAKo3B,UAAY5O,IAAMwB,YACvBhqB,KAAK23B,aAAenP,IAAMwB,YAC1BhqB,KAAKw3B,QAAUhP,IAAMwB,YACrBhqB,KAAK43B,kBAAoBpP,IAAMwB,YAE/BhqB,KAAKm4B,mBAAqB,IAAItH,mBAAoBjzB,IAChDoC,KAAKonB,MAAMgR,qBACTp4B,KAAKonB,MAAMzgB,QACX,CACE0xB,KAAMz6B,EAAE06B,MACRC,IAAK36B,EAAE46B,OAETx4B,KAAKw2B,cAgKX5L,oBACEnkB,uBAAuB+O,UAAU/U,iBAAiBT,KAAKy2B,mBACvDhwB,uBAAuBgP,WAAWhV,iBAAiBT,KAAK8tB,iBACxD3P,iBAAiB1d,iBAAiBT,KAAKmqB,sBAGzCU,uBACEpkB,uBAAuB+O,UAAU5U,mBAAmBZ,KAAKy2B,mBACzDhwB,uBAAuBgP,WAAW7U,mBAAmBZ,KAAK8tB,iBAC1D3P,iBAAiBvd,mBAAmBZ,KAAKmqB,sBAS3C,oBAAoBqM,GAClB,MAAM53B,EAAS43B,EAAW53B,OAE1B,OACEuL,KAAKa,MAAMpM,GACX,MACAuL,KAAKa,MAAMb,KAAK2M,IAAI,EAAGlY,EAAS43B,EAAWhqB,YAC3C,KAIJ,4BAA4BurB,EAAY5mB,GACtC,GAAkB,MAAd4mB,GAAqC,MAAf5mB,EAAqB,MAAO,SAEtD,MAAMsnB,EAAWtuB,KAAKa,OAAOmG,EAAc4mB,GAAc,IACnDW,GAAmBD,EAAW,IAAIvQ,WAAWoB,SAAS,EAAG,KAE/D,OADsBnf,KAAKqS,MAAMic,EAAW,IACrB,IAAMC,EAAkB,KASjD,mBAAmBT,EAAeC,GAKhC,OAAOD,EAAgB,QAHrBC,KAAajC,8CAAuB0C,WAChC1C,8CAAuB0C,WAAWT,GAClCA,GAIRjO,SACE,CACE,MAAM9M,EAAY1W,uBAAuB+O,UAAUjC,UAC7CP,EACJhT,KAAKonB,MAAMzgB,WAAWwW,EAAYA,EAAUnd,KAAKonB,MAAMzgB,SAAW,KACpE3G,KAAKw2B,WAAax2B,KAAKk2B,sBAAsBljB,GAG/CvV,QAAQC,IACN,UACAsC,KAAKonB,MAAMzgB,QACX3G,KAAKjD,MACLiD,KAAKonB,MACLpnB,KAAKw2B,YAGP,MAAM3b,EAAY1D,aAChBnX,KAAKw2B,WAAW9mB,aAChB1P,KAAKw2B,WAAW/mB,WAChBzP,KAAKw2B,WAAWznB,OAChB,CAAE1K,IAAKrE,KAAKw2B,WAAWnyB,IAAK4H,IAAKjM,KAAKw2B,WAAWvqB,KACjD,CAAE5H,IAAKrE,KAAKw2B,WAAWL,YAAalqB,IAAKjM,KAAKw2B,WAAWJ,cAErDwC,OACmBlN,IAAvB7Q,EAAU/C,SAAyB,EAAI+C,EAAU/C,SAEnD,OACE,kBAAC+gB,GAAA,EAAD,CACEC,gBAAiB,CAAEC,eAAe,GAClCzH,cAAetxB,KAAKm4B,mBAAmB7G,cACvCR,aAAc9wB,KAAKm4B,mBAAmBrH,aACtCM,cAAepxB,KAAKm4B,mBAAmB/G,cACvCC,WAAYrxB,KAAKm4B,mBAAmB9G,WACpCF,YAAanxB,KAAKm4B,mBAAmBhH,aAErC,kBAAC2D,GAAD,CAA4BkE,WAAY,kBAAC,KAAD,OACtC,yBACEr6B,MAAM,OACNC,OAAO,OACPohB,QAAQ,YACRnhB,QAAQ,QACRirB,MAAK,aACHwB,KAAM,YACHvD,iBAAiB6Q,IAEtB55B,IAAKgB,KAAKw3B,SAEV,0BAAM/gB,EAAGoE,EAAUvD,KAAMgc,KAAMtzB,KAAKgb,WAAY0Y,OAAO,WAEzD,yBACE5J,MAAO,CACLwB,KAAM,WACNyC,SAAU,SACVhC,WAAY,SAGd,yBACEjC,MAAO,CACLnrB,MAAO,OACPE,QAAS,OACTkvB,SAAU,WAGZ,kBAAC0G,GAAD,CAAcrJ,QAAQ,SACnBprB,KAAKonB,MAAMngB,WAEd,kBAAC0tB,GAAD,CAAevJ,QAAQ,WACrB,kBAAC,0BAAD,CACEpsB,IAAKgB,KAAKu3B,WACVrpB,QAAS,CACP7J,IAAKrE,KAAKw2B,WAAWnyB,IACrB4H,IAAKjM,KAAKw2B,WAAWvqB,SAK7B,kBAAC4oB,GAAD,CAAWzJ,QAAQ,WACjB,kBAAC,0BAAD,CACEjgB,UAAiD,IAAtCnL,KAAKw2B,WAAW7lB,oBAC3B5B,OAAQ/O,KAAKw2B,WAAWznB,OACxBU,WAAYzP,KAAKw2B,WAAW/mB,WAC5BkZ,UAAQ,EACR3pB,IAAKgB,KAAK23B,aACV/O,YAAazmB,WAAWV,GAAsB7B,aAEhD,0BAAMZ,IAAKgB,KAAKo3B,WACbnB,8CAAuBqB,aAAat3B,KAAKw2B,gBAKlD,kBAACrB,GAAD,KACE,kBAACK,GAAD,KACE,kBAACE,GAAD,CAAYtK,QAAQ,WAClB,kBAACuK,GAAD,MACA,0BAAM32B,IAAKgB,KAAK43B,mBACb3B,8CAAuB6B,qBACtB93B,KAAKjD,MAAMg7B,WACX/3B,KAAKw2B,WAAW1lB,wBAItB,kBAAC4kB,GAAD,CAAYtK,QAAQ,WAClB,kBAACyK,GAAD,MACCI,8CAAuBgD,YACtBj5B,KAAKjD,MAAMk7B,cACXj4B,KAAKjD,MAAMm7B,YAGf,kBAACxC,GAAD,CAAYtK,QAAQ,WAClB,kBAAC2K,GAAD,MADF,IACwB/1B,KAAKjD,MAAMi7B,aAGrC,kBAACvC,GAAD,CAAcrK,QAAQ,WACpB,kBAAC,sCAAD,CAAoBhZ,MAAOpS,KAAKonB,MAAMzgB,cA3W5CsvB,8CA2OG0C,WAAa,CAClBO,aAAc,UACdC,YAAa,SACbC,WAAY,WAqIDnD,qD,oFCrdf,MAAMoD,GAAQ93B,wBAAwB,gBAAiB,GAKxC,QACb83B,SACAC,YANkB,KAClBD,GAAMr4B,SAAS,KCmBjB,MAAMu4B,4CAA0B/Q,IAAMC,cACpChpB,YAAY2nB,GACVhE,MAAMgE,GADW,KASnBoS,mBAAsBrc,IAEpB,GAAqB,OAAjBnd,KAAKye,QAAkB,OAAOzM,OAAOC,KAAKkL,GAG9C,MAAM0P,EAAQ,CACZxoB,IAAKrE,KAAKye,QAAQgB,OAAOC,SACzBzT,IAAKjM,KAAKye,QAAQgB,OAAOE,WAI3B,IAAI8Z,EAAqBznB,OAAO+B,QAAQoJ,GAAWxa,IAAI,EAAEnB,EAAMmD,KAAU,CACvEnD,EACAoK,sBAAYihB,EAAOloB,EAAKyG,OAO1B,OAHAquB,EAAmB1M,KAAK,CAACC,EAAKC,IAAQD,EAAI,GAAKC,EAAI,IAG5CwM,EAAmB92B,IAAKuqB,GAAOA,EAAG,KA7BxB,KAgCnBxU,iBAAoByE,IAElB,MAAMyQ,EAAkB5tB,KAAKw5B,mBAAmBrc,GAG1Cuc,EAAkB9L,EAAgBna,OACrCjS,GAAS2b,EAAU3b,GAAMiO,YAAc0N,EAAU3b,GAAMuN,QAOpDvI,EALqBonB,EAAgBna,OACxCjS,KAAW2b,EAAU3b,GAAMiO,YAAc0N,EAAU3b,GAAMuN,SAIvBwhB,OAAOmJ,GAG5C,IAAIC,GAAmB,EACvB,GAAInzB,EAAUgE,SAAWxK,KAAKjD,MAAM68B,aAAapvB,QAC/C,IAAK,IAAI2L,EAAI,EAAGA,EAAI3P,EAAUgE,OAAQ2L,IACpC,GAAI3P,EAAU2P,KAAOnW,KAAKjD,MAAM68B,aAAazjB,GAAI,CAC/CwjB,GAAmB,EACnB,YAIJA,GAAmB,EAIjBA,GACF35B,KAAKhD,SAAUD,GAAD,eAAiBA,EAAjB,CAAwB68B,aAAcpzB,MA9DrC,KAkEnB2jB,qBAAwB1L,IACtBze,KAAKye,QAAUA,GAnEE,KA+EnBob,YAAelzB,IACb3G,KAAKonB,MAAM5f,aAAa,CAACb,KAhFR,KAmFnBmzB,gBAAkB,CAACnzB,EAASozB,EAAUvD,KACpCx2B,KAAKhD,SAAU2b,GAAD,eACTA,EADS,CAEZqhB,YAAa,CAAErzB,QAASA,EAASyE,IAAK2uB,EAAU3S,MAAOoP,OAtFxC,KA0FnByD,gBAAkB,KAChBj6B,KAAKhD,SAAU2b,GAAD,eAAoBA,EAApB,CAA8BqhB,YAAa,SA3FxC,KA8FnBE,mBAAqB,KACY,OAA3Bl6B,KAAKjD,MAAMi9B,aACbh6B,KAAK65B,YAAY75B,KAAKjD,MAAMi9B,YAAYrzB,SAC1C3G,KAAKi6B,mBAjGY,KAoGnBE,uBAAyB,KACvB,GAA+B,OAA3Bn6B,KAAKjD,MAAMi9B,YAAsB,CACnC,MAAMxD,EAAax2B,KAAKjD,MAAMi9B,YAAY5S,OC9HzC,SAASgT,WAAWhvB,IAGmB,IAA1CsS,UAAUkT,SAAS9vB,QAAQ,YACa,IAAxC4c,UAAUkT,SAAS9vB,QAAQ,UACa,IAAxC4c,UAAUkT,SAAS9vB,QAAQ,QAE3BjD,OAAO8d,KACL,iCACEvQ,EAAI/G,IAAI6jB,WACR,IACA9c,EAAIa,IAAIic,YAGZrqB,OAAO8d,KACL,kCACEvQ,EAAI/G,IAAI6jB,WACR,IACA9c,EAAIa,IAAIic,YD6GVkS,CAAW,CAAE/1B,IAAKmyB,EAAWnyB,IAAK4H,IAAKuqB,EAAWvqB,MAEpDjM,KAAKi6B,mBAzGY,KA4GnBI,sBAAwB,KACtB,GAA+B,OAA3Br6B,KAAKjD,MAAMi9B,YAAsB,CACnC,MAAMrzB,EAAU3G,KAAKjD,MAAMi9B,YAAYrzB,QACvC2zB,GAAUhB,cACVrgB,kCAAkCb,mBAAmBzR,GAEvD3G,KAAKi6B,mBAhHLj6B,KAAKjD,MAAQ,CACX68B,aAAc,GACdI,YAAa,MAEfh6B,KAAKye,QAAUN,iBAAiB5K,UAgElCqX,oBACEnkB,uBAAuB+O,UAAU/U,iBAAiBT,KAAK0Y,kBACvDyF,iBAAiB1d,iBAAiBT,KAAKmqB,sBAEzCU,uBACEpkB,uBAAuB+O,UAAU5U,mBAAmBZ,KAAK0Y,kBACzDyF,iBAAiBvd,mBAAmBZ,KAAKmqB,sBAyC3CF,SACE,IAAIsQ,EAAgB,IAAI1mB,IAAI7T,KAAKjD,MAAM68B,cAGvC,MAAMA,EAAe55B,KAAKjD,MAAM68B,aAAanmB,OAC1C9M,GAAYA,KAAW3G,KAAKonB,MAAMjS,QAG/BqlB,EAAgBxoB,OAAOC,KAAKjS,KAAKonB,MAAMjS,QAAQ1B,OAClD9M,IAAa4zB,EAAcnmB,IAAIzN,IAG5B8zB,aAAgB9zB,IACpB,MAAMwW,EAAYnd,KAAKonB,MAAMjS,OAAOxO,GACpC,YAAkB+kB,IAAdvO,GAAyC,OAAdA,EAA2BxW,EACnDwW,EAAU3b,MAGnB,OACE,kBAAC9C,EAAA,EAAD,CAAKE,OAAO,OAAO87B,QAAQ,UAAU3M,SAAS,QAC5C,kBAACrvB,EAAA,EAAD,CAAKP,OAAQ,GACVy7B,EAAaj3B,IAAKgE,GACjB,kBAAC,GAAD,CACEjH,IAAKiH,EACLA,QAASA,EACTM,UAAWwzB,aAAa9zB,GACxBkzB,YAAa75B,KAAK65B,YAClBzB,qBAAsBp4B,KAAK85B,oBAIjC,kBAACp7B,EAAA,EAAD,CAAKP,OAAQ,GACVq8B,EAAc73B,IAAKgE,GAClB,kBAACjI,EAAA,EAAD,CACEgB,IAAKiH,EACL8lB,QAAS,KACPzsB,KAAK65B,YAAYlzB,IAEnB9H,QAAQ,QAER,kBAACO,EAAA,EAAD,CAAYgsB,QAAQ,SAASqP,aAAa9zB,IAC1C,kBAACvH,EAAA,EAAD,CACEgsB,QAAQ,UACR7rB,MAAM,gBACNuqB,MAAO,CAAE6B,YAAa,SAHxB,IAKIhlB,EALJ,QAUN,kBAACg0B,GAAA,EAAD,CACEhf,KAAiC,OAA3B3b,KAAKjD,MAAMi9B,YACjBY,gBAAgB,iBAChBC,eAC6B,OAA3B76B,KAAKjD,MAAMi9B,YAAuB,KAAOh6B,KAAKjD,MAAMi9B,YAAY5uB,IAElE0vB,gBAAiB,CACfC,SAAU,MACVC,WAAY,SAEd/1B,QAASjF,KAAKi6B,iBAEd,kBAACgB,GAAA,EAAD,CAAM9P,UAAU,MAAM+P,OAAK,GACzB,kBAACC,GAAA,EAAD,CAAUC,QAAM,EAAC3O,QAASzsB,KAAKq6B,uBAC7B,kBAACgB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,2BAEF,kBAACH,GAAA,EAAD,CAAUC,QAAM,EAAC3P,UAAQ,GACvB,kBAAC4P,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,yBAEF,kBAACH,GAAA,EAAD,CAAUC,QAAM,EAAC3O,QAASzsB,KAAKm6B,wBAC7B,kBAACkB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,sBAEF,kBAACH,GAAA,EAAD,CAAUC,QAAM,EAAC3O,QAASzsB,KAAKk6B,oBAC7B,kBAACmB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,0BASC/B,2CE/Nf,MAAMgC,sBAAe/S,IAAMgT,UACzB/7B,YAAY2nB,GACVhE,MAAMgE,GADW,KAMnBqU,kBAAoB,MACmB,IAAjCz7B,KAAKjD,MAAM2+B,mBACb17B,KAAKhD,SAASD,GAAK,eAAUA,EAAV,CAAiB2+B,mBAAmB,MARxC,KAWnBC,mBAAqB,MACkB,IAAjC37B,KAAKjD,MAAM2+B,mBACb17B,KAAKhD,SAASD,GAAK,eAAUA,EAAV,CAAiB2+B,mBAAmB,MAbxC,KAgBnBE,oBAAsBC,IACpB77B,KAAKhD,SAASD,GAAK,eACdA,EADc,CAEjBuJ,aAAcu1B,MAhBhB77B,KAAKjD,MAAQ,CAAE2+B,mBAAmB,EAAOp1B,aAAcH,mBAoBzDykB,oBACE1kB,wBAAwBzF,iBAAiBT,KAAK47B,qBAEhD/Q,uBACE3kB,wBAAwBtF,mBAAmBZ,KAAK47B,qBAGlD3R,SACE,OACE,kBAAC,IAAMtD,SAAP,KACE,kBAAC,GAAD,CACExR,OAAQnV,KAAKjD,MAAMuJ,aACnBkB,aAAcA,eAGhB,kBAAC9I,EAAA,EAAD,CAAK6c,SAAS,WAAWugB,OAAO,OAAOC,MAAM,QAC3C,kBAACC,EAAA,EAAD,CAAK7nB,KAAK,QAAQ5U,MAAM,UAAUktB,QAASzsB,KAAKy7B,mBAC9C,kBAAC,KAAD,QAGJ,kBAAC,GAAD,CACE9f,KAAM3b,KAAKjD,MAAM2+B,kBACjBz2B,QAASjF,KAAK27B,mBACdjL,YAAatpB,UACbklB,aAActa,OAAOC,KAAKjS,KAAKjD,MAAMuJ,kBAOhCi1B,qB,kOCjEA,MAAMU,gCAAoBzT,IAAMC,cAAe,eAAD,oBAC3D1rB,MAAQ,CACNm/B,gBAAgB,EAChB77B,MAAO,MAGT,gCAAgC+mB,EAAOrqB,GACrC,MAAMo/B,EAAW,eAAQp/B,EAAR,CAAem/B,gBAAgB,IAOhD,OAJKn/B,EAAMm/B,iBACTC,EAAY97B,MAAQ+mB,EAAM/mB,OAGrB87B,EAGTlS,SACE,OACE,kBAAC8F,GAAA,EAAD,CACEG,SAAU/J,IACR,MAAM9lB,EAAQ8lB,EAAME,OAAOhmB,MAOvBA,EAAQL,KAAKonB,MAAMvW,KAGrB7Q,KAAKonB,MAAM8I,SAASlwB,KAAKonB,MAAMvW,KAC/B7Q,KAAKhD,SAASD,GAAK,eACdA,EADc,CAEjBm/B,gBAAgB,EAChB77B,MAAOA,MAEAA,EAAQL,KAAKonB,MAAMtQ,IAC5B9W,KAAKonB,MAAM8I,SAASlwB,KAAKonB,MAAMtQ,KAE/B9W,KAAKonB,MAAM8I,SAAS7vB,IAGxB+qB,QAAQ,WACRK,SAAUzrB,KAAKonB,MAAMqE,SACrBttB,OAAO,QACPi+B,aAAW,EACX9M,KAAK,SACLjvB,MAAOL,KAAKjD,MAAMsD,MAClBg8B,WAAY,CACVC,aACE,kBAACC,GAAA,EAAD,CAAgBhhB,SAAS,OAAOvb,KAAKonB,MAAMoV,OAG/CC,WAAY,CACV5rB,IAAK7Q,KAAKonB,MAAMvW,IAChBiG,IAAK9W,KAAKonB,MAAMtQ,QChDnB,MAAM4lB,GAAiBrb,YAAK+F,IAAU,MAAD,EACFjlB,WAAWilB,EAAMuV,SAASt7B,MADxB,mBACnCu7B,EADmC,KACrBC,EADqB,KAEpCC,YAAc,IAAMD,GAAiBD,GAE3C,OACE,kBAACzB,GAAA,EAAD,CAAUC,QAAM,EAAC3O,QAASqQ,aACxB,kBAACxB,GAAA,EAAD,CACE1L,QAASxI,EAAM2V,YACfxN,UAAWnI,EAAM4V,gBAEnB,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQC,KAAK,MAAMjN,SAAU4M,YAAaM,QAASR,QAM9CS,GAAgBhc,YAAK+F,IAAU,MAAD,EACDjlB,WAAWilB,EAAMuV,SAASt7B,MADzB,mBAClCu7B,EADkC,KACpBC,EADoB,KAGzC,OACE,kBAAC1B,GAAA,EAAD,CAAU1P,SAAUrE,EAAMqE,UACxB,kBAAC6P,GAAA,EAAD,CACE1L,QAASxI,EAAM2V,YACfxN,UAAWnI,EAAM4V,gBAEnB,kBAACC,GAAA,EAAD,KACE,kBAAC,wBAAD,CACE58B,MAAOu8B,EACP1M,SAAU2M,EACVpR,SAAUrE,EAAMqE,SAChB+Q,KAAMpV,EAAMoV,KACZ3rB,IAAKuW,EAAMvW,IACXiG,IAAKsQ,EAAMtQ,U,4ECqCNwmB,OA7Dcjc,YAAK+F,IAAU,MAAD,EAC2BxqB,oBAClE,GAFuC,mBAClC2gC,EADkC,KACNC,EADM,KAKzC,OACE,kBAAC,IAAM7W,SAAP,KACE,kBAAC8W,GAAA,EAAD,CAAQ3T,MAAO,CAAEvO,SAAU,WACzB,kBAAC6T,GAAA,EAAD,KACE,kBAACsO,GAAA,EAAD,CAAYP,KAAK,QAAQ59B,MAAM,UAAUktB,QAASrF,EAAMniB,SACtD,kBAAC,KAAD,OAGF,kBAACvG,EAAA,EAAD,CAAKqtB,WAAY,EAAG4R,SAAU,GAC5B,kBAACv+B,EAAA,EAAD,CAAYgsB,QAAQ,MAApB,aAGF,kBAACsS,GAAA,EAAD,CACEP,KAAK,MACL59B,MAAM,UACNktB,QAAS,IAAM+Q,GAA8B,IAE7C,kBAAC,KAAD,SAMN,kBAAC,eAAD,CACE7hB,KAAM4hB,EACNt4B,QAAS,IAAMu4B,GAA8B,IAE7C,kBAACI,GAAA,EAAD,KAAc,uBACd,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,yDAIF,kBAACtN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEhE,QAAS,K3C7BnBza,OAAOiB,OAAOtR,GAAiBwQ,QAAQ4rB,GACrCA,EAAY/8B,SAAS,O2C8BXw8B,GAA8B,IAEhCj+B,MAAM,WALR,OASA,kBAACkxB,GAAA,EAAD,CACEhE,QAAS,IAAM+Q,GAA8B,GAC7Cj+B,MAAM,UACNy+B,WAAS,GAHX,WCaKC,8BAzEM7W,IAAS,QAEAjlB,WAAWV,GAAsBJ,MAAtD68B,EAFqB,sBAGF/7B,WAAWV,GAAoBJ,MAAlD88B,EAHqB,oBAM5B,OACE,kBAAC,eAAD,CAAWxW,YAAU,EAAChM,KAAMyL,EAAMzL,KAAM1W,QAASmiB,EAAMniB,SACrD,kBAAC,GAAD,CAAsBA,QAASmiB,EAAMniB,UAErC,kBAACg2B,GAAA,EAAD,KAEE,kBAACyB,GAAD,CACEC,QAASl7B,EACTs7B,YAAY,mBACZC,cAAc,wBAahB,kBAACoB,GAAA,EAAD,MACA,kBAAC1B,GAAD,CACEC,QAASl7B,EACTs7B,YAAY,qBACZC,cAAc,yBAEhB,kBAACK,GAAD,CACEN,YAAY,eACZC,cAAc,mBACdL,QAASl7B,EACTgqB,UAAWyS,EACX1B,KAAK,MACL3rB,IAAK,EACLiG,IAAK,MAIP,kBAACsnB,GAAA,EAAD,MACA,kBAAC1B,GAAD,CACEC,QAASl7B,EACTs7B,YAAY,kBACZC,cAAc,+BAEhB,kBAACK,GAAD,CACEN,YAAY,YACZC,cAAc,kBACdL,QAASl7B,EACTgqB,UAAW0S,EACX3B,KAAK,MACL3rB,IAAK,EACLiG,IAAK,KAIP,kBAACsnB,GAAA,EAAD,MACA,kBAAC1B,GAAD,CACEC,QAASl7B,EACTs7B,YAAY,aACZC,cAAc,sCCLTqB,mBAlDEjX,IACf,MAAMnpB,EAAQ0wB,cADU,EAEgB/xB,oBAAS,GAFzB,mBAEjB0hC,EAFiB,KAEHC,EAFG,KAIxB,OACE,kBAAC,IAAM5X,SAAP,KACE,kBAAC6X,GAAA,EAAD,CACEC,oBAAkB,EAClB9iB,KAAMyL,EAAMzL,KACZ7X,OAAQ,OACRmB,QAASmiB,EAAMniB,SAEf,kBAACmqB,GAAA,EAAD,CACEtF,MAAO,CACL0C,gBAAiBvuB,EAAMoxB,QAAQO,QAAQF,MACvCgP,SAAU,SAEZjS,QAASrF,EAAMniB,SAEf,kBAACvG,EAAA,EAAD,CAAKi/B,SAAU,EAAGgB,OAAK,GACrB,kBAACv/B,EAAA,EAAD,CAAYgsB,QAAQ,MAApB,SAEF,kBAACsS,GAAA,EAAD,CAAYP,KAAK,MAAM59B,MAAM,WAC3B,kBAAC,KAAD,QAIJ,kBAAC07B,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CACEC,QAAM,EACN3O,QAAS,KACPrF,EAAMniB,UACNs5B,GAAgB,KAGlB,kBAAClD,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc1L,QAAQ,gBAI5B,kBAAC,0BAAD,CACEjU,KAAM2iB,EACNr5B,QAAS,IAAMs5B,GAAgB,OCvCvC,MAAMxgC,GAAYC,YAAWC,IAAK,CAChC2gC,QAAS,CACPrS,QAAStuB,EAAMG,QAAQ,GACvBygC,MAAO,YAILC,aAAe1X,GAEjB,kBAAC2X,GAAA,EAAD,CAEEC,aAAc,CACZjE,SAAU,SACVC,WAAY,SAEdiE,aACE,kBAAC//B,EAAA,EAAD,CACE8uB,cAAe5G,EAAM4G,cACrBzuB,MAAM,YACN4U,KAAM,GACN+qB,UAAW,MAId9X,EAAMU,UAkGEzG,mBA7FE,KACf,MAAM5iB,EAAUV,KACVsX,EnCqBN5O,uBAAuB4O,gBAAgBhU,MmCnBjC89B,EAAiB3W,IAAM/G,SAJR,EAKiC7kB,mBAAS,MAL1C,mBAKdwiC,EALc,KAKOC,EALP,OAOmBziC,oBAAS,GAP5B,mBAOd0iC,EAPc,KAOAC,EAPA,KASrB/W,IAAM9G,gBAAgB,KAChByd,EAAevd,SACjBud,EAAevd,QAAQ4d,kBAExB,CAACnqB,EAAiB+pB,IA6BrB,OACE,6BACE,kBAAC3B,GAAA,EAAD,CAAQliB,SAAS,UACf,kBAAC6T,GAAA,EAAD,KACE,kBAACsO,GAAA,EAAD,CACEP,KAAK,QACL59B,MAAM,UACNktB,QAAS,IAAM8S,GAAgB,IAE/B,kBAAC,KAAD,OAGF,kBAAC7gC,EAAA,EAAD,CAAKqtB,WAAY,EAAG4R,SAAU,GAC5B,kBAACv+B,EAAA,EAAD,CAAYgsB,QAAQ,MAApB,mBAGF,kBAACsS,GAAA,EAAD,CACEP,KAAK,MACL59B,MAAM,UACNktB,QAAStG,GAASkZ,EAAuBlZ,EAAMsZ,gBA9C5B,MAC3B,OAAQpqB,GACN,KAAKnR,EAAgBO,OACnB,OAAO,kBAAC,KAAD,MACT,KAAKP,EAAgBwB,WACnB,OACE,kBAACo5B,aAAD,KACE,kBAAC,KAAD,OAGN,KAAK56B,EAAgB6B,MACnB,OAAO,kBAAC,KAAD,CAAWxG,MAAM,UAC1B,KAAK2E,EAAgBC,YACnB,OACE,kBAAC26B,aAAD,CAAc9Q,eAAa,GACzB,kBAAC,KAAD,OAGN,KAAK9pB,EAAgBa,SACnB,OAAO,kBAAC,KAAD,MACT,KAAKb,EAAgBgB,cAErB,QACE,OAAO,kBAAC,KAAD,QAyBFw6B,MAIP,kBAAC/E,GAAA,EAAD,CACEhf,KAAMgkB,QAAQP,GACdQ,SAAUR,EACVn6B,QAAS,IAAMo6B,EAAuB,MACtCL,aAAc,CACZjE,SAAU,SACVC,WAAY,SAEdF,gBAAiB,CACfC,SAAU,MACVC,WAAY,SAEd6E,OAAQV,GAER,kBAACzgC,EAAA,EAAD,CAAKS,UAAWV,EAAQmgC,SACtB,kBAACx/B,EAAA,EAAD,KAAaiW,KAGjB,kBAAC,eAAD,CACEsG,KAAM2jB,EACNr6B,QAAS,IAAMs6B,GAAgB,QChDxBO,iBArEE,KAAO,MAAD,EACKxF,GAAUjB,MAAMh4B,MADrB,mBACd0+B,EADc,KACPC,EADO,OAEmBxX,IAAM5rB,SAAS,GAFlC,mBAEdqjC,EAFc,KAEAC,EAFA,KAGfjiC,EAAQ0wB,cACRwR,EAAevR,YAAc3wB,EAAM4wB,YAAYC,KAAK,OAGpDsR,mBAAqB,KACzBF,EAAgBriC,OAAOwiC,cAEzB7X,IAAM9G,gBAAgB,KACpB0e,qBACAviC,OAAOgpB,iBAAiB,SAAUuZ,oBAC3B,IAAMviC,OAAOyiC,oBAAoB,SAAUF,qBACjD,IAGH,MAEMxjB,EAAUujB,EACd,kBAAC,IAAMxZ,SAAP,KACE,kBAACjoB,EAAA,EAAD,CAAKi/B,SAAU,EAAGgB,OAAK,EAAC9/B,QAAQ,QAC9B,kBAAC,IAAD,CAAgB4sB,UAAQ,EAAC5qB,MAAOk/B,GAC9B,kBAACrhC,EAAA,EAAD,CAAKC,MAAM,OAAOC,OAAO,OAAO2c,SAAS,YACvC,kBAAC,EAAD,OAEF,kBAAC7c,EAAA,EAAD,CAAKC,MAAM,OAAOC,OAAO,OAAO2c,SAAS,YACvC,kBAAC,GAAD,SAIN,kBAAC7c,EAAA,EAAD,CAAKslB,OAAQ,IAAKgI,UAAW,GAC3B,kBAACuU,EAAA,EAAD,CACElgC,MAAO0/B,EACP7P,SAjBuB,CAACsQ,EAAQl/B,IAAa0+B,EAAS1+B,GAkBtDm/B,YAAU,GAEV,kBAACC,EAAA,EAAD,CAAwBzQ,MAAM,MAAMxU,KAAM,kBAAC,IAAD,QAC1C,kBAACilB,EAAA,EAAD,CAAwBzQ,MAAM,SAASxU,KAAM,kBAAC,IAAD,WAKnD,kBAAC/c,EAAA,EAAD,CAAKC,MAAM,OAAOg/B,SAAU,EAAG9+B,QAAQ,OAAOkvB,SAAS,UACrD,kBAACrvB,EAAA,EAAD,CAAKi/B,SAAU,EAAG/+B,OAAO,QACvB,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKC,MAAM,QAAQC,OAAO,OAAOolB,OAAQ,GAAIgI,UAAW,GACtD,kBAAC,GAAD,QAKN,OACE,kBAACttB,EAAA,EAAD,CACEE,OAAQqhC,EACRphC,QAAQ,OACRuxB,cAAc,SACdrC,SAAS,UAET,kBAACrvB,EAAA,EAAD,CAAKslB,OAAQ,KACX,kBAAC,GAAD,OAGDpH,IC5EQ+jB,YARH,IAER,yBAAKxhC,UAAU,OACb,kBAAC,aAAD,O,cCMcwgC,QACW,cAA7B9hC,OAAO+iC,SAASC,UAEe,UAA7BhjC,OAAO+iC,SAASC,UAEhBhjC,OAAO+iC,SAASC,SAASC,MACvB,2DCPNC,EAAQ,KAAUC,SCeH,SAASC,yBACtBxjC,QAAQC,IAAI,QAzBd,SAASwjC,kBACP,IAAIC,EAAqBj7B,wBACrBI,EAAY,eAAQ66B,EAAmBvhC,YAEvC2H,GAAU,EACd,cAAoB,IAAIyK,OAAOC,KAAK3L,IAApC,eAAoD,CAA/C,IAAIK,EAAO,KACVy6B,EAAc96B,EAAaK,GAE3By6B,IAAgBpvB,OAAOovB,KACC,iBAAfA,GACT96B,EAAaK,GAAWK,kBAAkBo6B,GAC1C75B,GAAU,IAEVjB,EAAaK,GAAWK,kBAAkBL,GAC1CY,GAAU,IAKZA,GACF45B,EAAmBngC,SAASsF,GAM9B46B,GDdFD,GAGAI,IAASpX,OAAO,kBAAC,QAAD,MAAS9J,SAASmhB,eAAe,SD+G1C,SAASC,aACV,kBAAmB7jB,WACrBA,UAAU8jB,cAAc3kC,MAAMW,KAAKikC,IACjCA,EAAaF,eC7GnBC,K","file":"static/js/main.5ea73a56.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Loader } from \"@googlemaps/loader\";\n\n// Hook\nlet googleMapsApiPromise = null;\nfunction useGoogleMapsApi() {\n  // Keeping track of script loaded and error state\n  const [state, setState] = useState({\n    ready: false,\n    error: false\n  });\n\n  useEffect(\n    () => {\n      if (googleMapsApiPromise === null) {\n        googleMapsApiPromise = new Loader({\n          apiKey: process.env.REACT_APP_GAPI_KEY\n        }).load();\n      }\n\n      let promiseParameters = { gotCanceled: false };\n      googleMapsApiPromise\n        .then(() => {\n          if (promiseParameters.gotCanceled) return;\n          console.log(\"Google Maps API loaded.\");\n          setState({\n            ready: true,\n            error: false\n          });\n        })\n        .catch(e => {\n          if (promiseParameters.gotCanceled) return;\n          console.log(\"Error: Cannot load Google Maps API:\", e);\n          setState({\n            ready: false,\n            error: true\n          });\n        });\n\n      return () => {\n        promiseParameters.gotCanceled = true;\n      };\n    },\n    [] // Don't re-run\n  );\n\n  return [state.ready, state.error, state.ready ? window.google : null];\n}\n\nexport default useGoogleMapsApi;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2)\n  }\n}));\n\nexport const LoadingPage = ({ message, hideIf, subRef }) => {\n  const classes = useStyles();\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      display={hideIf ? \"none\" : \"flex\"}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      ref={subRef}\n    >\n      <Box textAlign=\"center\">\n        <CircularProgress className={classes.progress} />\n        <Typography>{message}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport const ErrorPage = ({ message, hideIf }) => {\n  const classes = useStyles();\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      display={hideIf ? \"none\" : \"flex\"}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box textAlign=\"center\">\n        <ErrorIcon\n          fontSize=\"large\"\n          color=\"error\"\n          className={classes.progress}\n        />\n        <Typography color=\"error\">{message}</Typography>\n      </Box>\n    </Box>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nclass PersistentState {\n  constructor(key, initialValue) {\n    this.key = key;\n    this.initialValue = initialValue;\n    this.callbacks = [];\n\n    this.locallyCachedJson = null;\n    this.locallyCachedValue = null;\n  }\n\n  getValue = () => {\n    const jsonValue = localStorage.getItem(this.key);\n\n    // Caching, to reduce the amount of times the value !== itself.\n    // This is a performance optimization for PureComponents.\n    if (this.locallyCachedJson !== jsonValue) {\n      this.locallyCachedJson = jsonValue;\n      this.locallyCachedValue = JSON.parse(jsonValue);\n    }\n\n    const value = this.locallyCachedValue;\n    if (value === null) return this.initialValue;\n    return value;\n  };\n\n  _notifyAll = () => {\n    const value = this.getValue();\n    for (const cb of this.callbacks) {\n      cb(value);\n    }\n  };\n\n  registerCallback = cb => {\n    if (!this.callbacks.includes(cb)) this.callbacks.push(cb);\n  };\n\n  unregisterCallback = cb => {\n    const index = this.callbacks.indexOf(cb);\n    if (index >= 0) {\n      this.callbacks.splice(index, 1);\n    }\n  };\n\n  setValue = value => {\n    if (value == null) {\n      localStorage.removeItem(this.key);\n    } else {\n      localStorage.setItem(this.key, JSON.stringify(value));\n    }\n\n    this._notifyAll();\n  };\n\n  updateValue = cb => {\n    this.setValue(cb(this.getValue()));\n  };\n\n  use = () => {\n    const [value, setValue] = useState(this.getValue);\n\n    useEffect(() => {\n      const cb = newValue => {\n        // trigger component update on change\n        setValue(newValue);\n      };\n\n      this.registerCallback(cb);\n      return () => this.unregisterCallback(cb);\n    }, []);\n\n    return [value, this.setValue];\n  };\n}\n\nexport const registerPersistentState = (name, initialValue) => {\n  return new PersistentState(name, initialValue);\n};\n","import { registerPersistentState } from \"./PersistentState\";\n\n// Keys\nexport const Settings = {\n  PATH_LENGTH: \"PATH_LENGTH\",\n  LIMIT_PATHS: \"LIMIT_PATHS\",\n  LOW_LATENCY: \"LOW_LATENCY\",\n  ANIMATION_DELAY: \"ANIMATION_DELAY\",\n  FPS_LIMIT: \"FPS_LIMIT\",\n  FPS_RATE: \"FPS_RATE\",\n  GPS_ENABLED: \"GPS_ENABLED\"\n};\n\n// Wrapper for simplification\nconst createSetting = (key, value) =>\n  registerPersistentState(\"SETTINGS_\" + key, value);\n\n// Settings objects\nconst settingsObjects = {\n  PATH_LENGTH: createSetting(Settings.PATH_LENGTH, 15),\n  LIMIT_PATHS: createSetting(Settings.LIMIT_PATHS, false),\n  LOW_LATENCY: createSetting(Settings.LOW_LATENCY, false),\n  ANIMATION_DELAY: createSetting(Settings.ANIMATION_DELAY, 80),\n  FPS_LIMIT: createSetting(Settings.FPS_LIMIT, true),\n  FPS_RATE: createSetting(Settings.FPS_RATE, 10),\n  GPS_ENABLED: createSetting(Settings.GPS_ENABLED, true)\n};\n\nexport const getSetting = key => settingsObjects[key];\n\nexport const resetAllSettings = () => {\n  Object.values(settingsObjects).forEach(settingsObj =>\n    settingsObj.setValue(null)\n  );\n};\n","import { ConnectionState } from \"./XContestInterface\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\n\nexport default class XContestSocket {\n  constructor(\n    onStateChanged,\n    onInfoMessage,\n    onTracklogMessage,\n    onFlightLanded\n  ) {\n    this.setConnectionState = onStateChanged;\n    this.dispatchInfoMessage = onInfoMessage;\n    this.dispatchTracklogMessage = onTracklogMessage;\n    this.dispatchFlightLandedMessage = onFlightLanded;\n    this.subscribedFlights = [];\n    this.connect();\n    this.connected = false;\n\n    // Register hooks, so we get notified when these settings change\n    getSetting(Settings.PATH_LENGTH).registerCallback(\n      this.refreshSubscribedFlights\n    );\n    getSetting(Settings.LIMIT_PATHS).registerCallback(\n      this.refreshSubscribedFlights\n    );\n  }\n\n  connect() {\n    if (\"WebSocket\" in window) {\n      this.connected = false;\n      this.setConnectionState(ConnectionState.CONNECTING);\n      this.sock = new WebSocket(\"wss://live.xcontest.org/websock/webclient\");\n      this.sock.onopen = this.onOpen;\n      this.sock.onmessage = this.onMessage;\n      this.sock.onclose = this.onClose;\n      this.sock.onerror = this.onError;\n    } else {\n      this.setConnectionState(ConnectionState.ERROR);\n      // The browser doesn't support WebSocket\n      alert(\"WebSocket NOT supported by your Browser!\");\n    }\n  }\n\n  formatSubscribedFlights = () => {\n    const formattedFlights = this.subscribedFlights.map(\n      ([flightId, startTimestamp]) => {\n        const startIsoTime =\n          startTimestamp === null\n            ? null\n            : new Date(1000 * startTimestamp).toISOString();\n        return { flightUuid: flightId, start: startIsoTime };\n      }\n    );\n\n    return formattedFlights;\n  };\n\n  refreshSubscribedFlights = () => {\n    if (this.sock.readyState === WebSocket.OPEN && this.connected) {\n      const formattedSubscribedFlights = this.formatSubscribedFlights();\n\n      this.sock.send(\n        JSON.stringify({\n          tag: \"WebFollow\",\n          contents: formattedSubscribedFlights,\n        })\n      );\n    }\n  };\n\n  setSubscribedFlights = (flights) => {\n    this.subscribedFlights = flights;\n    this.refreshSubscribedFlights();\n  };\n\n  onOpen = () => {\n    this.handleReset();\n    console.debug(\"WebSocket: Open!\");\n    this.setConnectionState(ConnectionState.ESTABLISHED);\n    this.connected = true;\n\n    // Set area filter to the entire world\n    this.sock.send(\n      JSON.stringify({\n        tag: \"WebFilterArea\",\n        area: [\n          { lat: -90, lon: -180 },\n          { lat: 90, lon: 180 },\n        ],\n      })\n    );\n\n    // Use current 'fake' contest that is valid for the current alpha phase.\n    // Primarily sent to match the messages from their reverse engineered websocket\n    this.sock.send(\n      JSON.stringify({ tag: \"WebFilterContest\", contents: \"alpha9999\" })\n    );\n\n    // Tell the webserver which flights we want in more detail. TODO.\n    const formattedSubscribedFlights = this.formatSubscribedFlights();\n    this.sock.send(\n      JSON.stringify({\n        tag: \"WebFollow\",\n        contents: formattedSubscribedFlights,\n      })\n    );\n  };\n\n  onMessage = (evt) => {\n    console.debug(\"WebSocket: Message!\");\n    this.setConnectionState(ConnectionState.ACTIVE);\n\n    let msg = JSON.parse(evt.data);\n\n    // Expect the next message in 60 seconds. If not, change the status message.\n    clearTimeout(this.watchdog);\n    this.watchdog = setTimeout(() => {\n      this.setConnectionState(ConnectionState.INACTIVE);\n    }, 70000);\n\n    // Process the message\n    this.processMessage(msg);\n  };\n\n  onClose = (evt) => {\n    this.connected = false;\n    console.debug(\"WebSocket: Close!\");\n    this.setConnectionState(ConnectionState.NO_CONNECTION);\n    // websocket is closed.\n    setTimeout(this.connect.bind(this), 1000);\n  };\n\n  onError = (evt) => {\n    this.connected = false;\n    console.debug(\"WebSocket: Error!\");\n  };\n\n  // Message Processing\n  handleReset = () => {\n    console.log(\"TODO: handle reset!\");\n  };\n  processMessage = (msg) => {\n    if (!(\"tag\" in msg)) {\n      console.warn(\"Warning: Invalid message format!\", msg);\n      return;\n    }\n    switch (msg.tag) {\n      case \"LiveFlightInfos\":\n        this.dispatchInfoMessage(msg.contents);\n        break;\n      case \"LiveFlightChunk\":\n        this.dispatchTracklogMessage(msg);\n        break;\n      case \"LiveFlightLanded\":\n        this.dispatchFlightLandedMessage(msg.flightUuid);\n        break;\n      default:\n        console.warn(`Warning: Unknown message tag '${msg.tag}'!`, msg);\n    }\n  };\n}\n","import { registerPersistentState } from \"./PersistentState\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\n\nconst persistentChosenPilots = registerPersistentState(\"chosen-pilots\", {});\n\nexport const getChosenPilotsObject = () => persistentChosenPilots;\n\nexport function getChosenPilots() {\n  return persistentChosenPilots.getValue();\n}\n\nexport function setChosenPilots(newValue) {\n  console.log(\"Selected pilots updated: \", newValue);\n  persistentChosenPilots.setValue(newValue);\n}\n\n// Sets new chosen pilots and also looks up their names.\n// When used without argument, just updates the names of the existing pilots.\nexport function setChosenPilotsAndUpdateNames(chosenPilots = null) {\n  let chosenPilotsUpdated = true;\n\n  // if no new chosenPilots list was defined, take over previous one and disable updating unless a name changed\n  if (chosenPilots === null) {\n    chosenPilots = { ...getChosenPilots() };\n    chosenPilotsUpdated = false;\n  }\n\n  const pilotList = getXContestInterface().getPilotInfos();\n\n  for (const pilotId in chosenPilots) {\n    if (pilotId in pilotList) {\n      // Get new name\n      const currentName = pilotList[pilotId].info.user.fullname;\n      // Get stored name\n      const previousName = chosenPilots[pilotId].name;\n\n      // If new name is different, update\n      if (currentName !== previousName) {\n        chosenPilots[pilotId].name = currentName;\n        chosenPilotsUpdated = true;\n      }\n    }\n  }\n\n  // If anything updated, set new list. This will trigger events.\n  if (chosenPilotsUpdated) {\n    setChosenPilots(chosenPilots);\n  }\n}\n\n// The default pilot entry for new pilots\nexport const defaultPilotEntry = (pilotName) => ({\n  name: pilotName,\n  highlighted: true,\n  lastKnownPosition: null,\n});\n\n// Add new pilots\nexport const addPilots = (pilotIds) => {\n  const newPilotState = { ...getChosenPilots() };\n  let changed = false;\n  for (const pilotId of pilotIds) {\n    if (!(pilotId in newPilotState)) {\n      newPilotState[pilotId] = defaultPilotEntry(pilotId);\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    setChosenPilotsAndUpdateNames(newPilotState);\n  }\n};\n\n// Remove pilots\nexport const removePilots = (pilotIds) => {\n  const newPilotState = { ...getChosenPilots() };\n\n  let changed = false;\n  for (const pilotId of pilotIds) {\n    if (pilotId in newPilotState) {\n      delete newPilotState[pilotId];\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    setChosenPilots(newPilotState);\n  }\n};\n\n/*export function useChosenPilots() {\n  const [chosenPilots] = persistentChosenPilots.use();\n\n  return [chosenPilots, addPilots, removePilots];\n}*/\n","export const lerp = (val1, val2, pct) => {\n  if (val2 === null) {\n    return val1;\n  }\n  if (val1 === null) {\n    return val2;\n  }\n  return (1.0 - pct) * val1 + pct * val2;\n};\n\n// Important:\n// t0<t1<t2<t3 and t1<=t<=t2\nexport const spline = (p0, t0, p1, t1, p2, t2, p3, t3, t) => {\n  // Make timestamps relative.\n  // This enables us to handle unix timestamps (large numbers)\n  t1 -= t0;\n  t2 -= t0;\n  t3 -= t0;\n  t -= t0;\n  t0 = 0;\n\n  const A1 = ((p1 - p0) * t + p0 * t1 - p1 * t0) / (t1 - t0);\n  const A2 = ((p2 - p1) * t + p1 * t2 - p2 * t1) / (t2 - t1);\n  const A3 = ((p3 - p2) * t + p2 * t3 - p3 * t2) / (t3 - t2);\n\n  const B1 = ((A2 - A1) * t + A1 * t2 - A2 * t0) / (t2 - t0);\n  const B2 = ((A3 - A2) * t + A2 * t3 - A3 * t1) / (t3 - t1);\n\n  const C = ((B2 - B1) * t + B1 * t2 - B2 * t1) / (t2 - t1);\n\n  return C;\n};\n\nexport const splineDerivative = (p0, t0, p1, t1, p2, t2, p3, t3, t) => {\n  // Make timestamps relative.\n  // This enables us to handle unix timestamps (large numbers)\n  t1 -= t0;\n  t2 -= t0;\n  t3 -= t0;\n  t -= t0;\n  t0 = 0;\n\n  const A1 = ((p1 - p0) * t + p0 * t1 - p1 * t0) / (t1 - t0);\n  const A2 = ((p2 - p1) * t + p1 * t2 - p2 * t1) / (t2 - t1);\n  const A3 = ((p3 - p2) * t + p2 * t3 - p3 * t2) / (t3 - t2);\n\n  const A1d = (p1 - p0) / (t1 - t0);\n  const A2d = (p2 - p1) / (t2 - t1);\n  const A3d = (p3 - p2) / (t3 - t2);\n\n  const B1 = ((A2 - A1) * t + A1 * t2 - A2 * t0) / (t2 - t0);\n  const B2 = ((A3 - A2) * t + A2 * t3 - A3 * t1) / (t3 - t1);\n\n  const B1d = (A2d * t + A2 - A1d * t - A1 + A1d * t2 - A2d * t0) / (t2 - t0);\n  const B2d = (A3d * t + A3 - A2d * t - A2 + A2d * t3 - A3d * t1) / (t3 - t1);\n\n  const Cd = (B2d * t + B2 - B1d * t - B1 + B1d * t2 - B2d * t1) / (t2 - t1);\n\n  return Cd;\n};\n\n// Interpolates between points p1 and p2\nexport const uniformspline = (p0, p1, p2, p3, pct) => {\n  //return 0.5*pct*pct*pct*(p3-3*p2+3*p1-p0) + 0.5*pct*pct*(2*p0-5*p1+4*p2-p3) + 0.5*pct*(p2-p0) + p1;\n  return (\n    pct *\n      (pct *\n        (pct * (p3 - 3 * p2 + 3 * p1 - p0) + 2 * p0 - 5 * p1 + 4 * p2 - p3) +\n        p2 -\n        p0) *\n      0.5 +\n    p1\n  );\n};\n\nexport const uniformsplineDerivative = (p0, p1, p2, p3, pct) => {\n  //return 1.5*pct*pct*(p3-3*p2+3*p1-p0) + pct*(2*p0-5*p1+4*p2-p3) + 0.5*(p2-p0);\n  return (\n    0.5 *\n    (pct *\n      (3 * pct * (p3 - 3 * p2 + 3 * p1 - p0) +\n        4 * p0 -\n        10 * p1 +\n        8 * p2 -\n        2 * p3) +\n      p2 -\n      p0)\n  );\n};\n","export default class RunningDerivation {\n  constructor(\n    smoothingFactor,\n    derivation_func = (a, b) => b - a,\n    invalid_func = a => a === null\n  ) {\n    this.computeDiff = derivation_func;\n    this.isInvalid = invalid_func;\n    this.old_val = null;\n    this.old_t = null;\n    this.running_avg = null;\n    this.smoothingFactor = smoothingFactor;\n  }\n\n  update(new_val, new_t) {\n    if (\n      this.old_val === null ||\n      new_val === null ||\n      this.old_t === null ||\n      new_t === null ||\n      this.isInvalid(this.old_val) ||\n      this.isInvalid(new_val) ||\n      this.old_t === this.new_t\n    ) {\n      this.old_val = new_val;\n      this.old_t = new_t;\n      return null;\n    }\n\n    let dt = new_t - this.old_t;\n    let diff = this.computeDiff(this.old_val, new_val);\n    let deriv = diff / dt;\n\n    let weight = Math.pow(this.smoothingFactor, dt);\n    if (this.running_avg === null) {\n      this.running_avg = deriv;\n    } else {\n      this.running_avg = weight * this.running_avg + (1.0 - weight) * deriv;\n    }\n\n    this.old_val = new_val;\n    this.old_t = new_t;\n    return this.running_avg;\n  }\n\n  reset() {\n    this.old_val = null;\n    this.old_t = null;\n    this.running_avg = null;\n  }\n}\n","const findBisect = (targetValue, length, dataFn) => {\n  if (length < 1) return 0;\n\n  let minIndex = -1;\n  let maxIndex = length;\n  let currentIndex = 0;\n  let currentValue = null;\n\n  while (minIndex < maxIndex - 1) {\n    currentIndex = ((minIndex + maxIndex) / 2) | 0;\n    currentValue = dataFn(currentIndex);\n\n    if (currentValue < targetValue) {\n      minIndex = currentIndex;\n    } else {\n      maxIndex = currentIndex;\n    }\n  }\n\n  return maxIndex;\n};\n\nexport default findBisect;\n","import RunningDerivation from \"../../util/RunningDerivation\";\nimport { getDistance } from \"geolib\";\nimport findBisect from \"../../util/FindBisect\";\n\nexport const parseTime = (isoStr) => {\n  return Math.round(Date.parse(isoStr) / 1000);\n};\n\nexport default class FlightAnimationData {\n  constructor() {\n    this.data = [];\n    this.counter_gpsVario = new RunningDerivation(0.7);\n    this.counter_baroVarion = new RunningDerivation(0.7);\n    this.counter_velocity = new RunningDerivation(\n      0.7,\n      (start, end) => getDistance(start, end, 0.01),\n      () => false\n    );\n  }\n\n  at = (index) => this.data[index];\n\n  clear() {\n    // reset everything\n    this.data = [];\n    this.counter_gpsVario = new RunningDerivation(0.7);\n    this.counter_baroVarion = new RunningDerivation(0.7);\n    this.counter_velocity = new RunningDerivation(\n      0.7,\n      (start, end) => getDistance(start, end, 0.01),\n      () => false\n    );\n  }\n\n  get length() {\n    return this.data.length;\n  }\n\n  isAfterLastElement(timestamp) {\n    if (this.data.length <= 0) return true;\n    return this.data[this.data.length - 1].t < timestamp;\n  }\n\n  append(data) {\n    for (const elem of data) {\n      const timestamp = parseTime(elem.timestamp);\n      const pos = { lat: elem.lat, lng: elem.lon };\n\n      const baroAlt = elem.baroAlt === 0 ? null : elem.baroAlt;\n      const gpsAlt = elem.gpsAlt === 0 ? null : elem.gpsAlt;\n\n      // Compute new running average values\n      const gpsVario = this.counter_gpsVario.update(gpsAlt, timestamp);\n      const baroVario = this.counter_baroVarion.update(baroAlt, timestamp);\n      const velocity = this.counter_velocity.update(pos, timestamp);\n\n      const newElem = {\n        baroAlt: baroAlt,\n        gpsAlt: gpsAlt,\n        elevation: elem.elevation,\n        pos: pos,\n        gpsVario: gpsVario,\n        baroVario: baroVario,\n        velocity: velocity,\n        t: timestamp,\n      };\n      this.data.push(newElem);\n    }\n  }\n\n  replace(data) {\n    this.clear();\n    this.append(data);\n  }\n\n  insert(data) {\n    const newElements = [];\n    for (const elem of data) {\n      const timestamp = parseTime(elem.timestamp);\n      const pos = { lat: elem.lat, lng: elem.lon };\n      const baroAlt = elem.baroAlt === 0 ? null : elem.baroAlt;\n      const gpsAlt = elem.gpsAlt === 0 ? null : elem.gpsAlt;\n\n      const newElem = {\n        baroAlt: baroAlt,\n        gpsAlt: gpsAlt,\n        elevation: elem.elevation,\n        pos: pos,\n        gpsVario: null,\n        baroVario: null,\n        velocity: null,\n        t: timestamp,\n      };\n      newElements.push(newElem);\n    }\n\n    // Merge\n    const oldElements = this.data;\n    this.data = [];\n\n    let oldPos = 0;\n    let newPos = 0;\n\n    while (true) {\n      if (oldPos >= oldElements.length && newPos >= newElements.length) break;\n      else if (oldPos >= oldElements.length) {\n        this.data.push(newElements[newPos]);\n        newPos += 1;\n      } else if (newPos >= newElements.length) {\n        this.data.push(oldElements[oldPos]);\n        oldPos += 1;\n      } else {\n        const oldEl = oldElements[oldPos];\n        const newEl = newElements[newPos];\n\n        if (newEl.t < oldEl.t) {\n          this.data.push(newEl);\n          newPos += 1;\n        } else if (oldEl.t < newEl.t) {\n          this.data.push(oldEl);\n          oldPos += 1;\n        } else {\n          this.data.push(newEl);\n          oldPos += 1;\n          newPos += 1;\n        }\n      }\n    }\n\n    // Re-compute derivatives\n    this.counter_gpsVario.reset();\n    this.counter_baroVarion.reset();\n    this.counter_velocity.reset();\n    for (let elem of this.data) {\n      const gpsVario = this.counter_gpsVario.update(elem.gpsAlt, elem.t);\n      const baroVario = this.counter_baroVarion.update(elem.baroAlt, elem.t);\n      const velocity = this.counter_velocity.update(elem.pos, elem.t);\n\n      elem.gpsVario = gpsVario;\n      elem.baroVario = baroVario;\n      elem.velocity = velocity;\n    }\n  }\n\n  findBisect = (timestamp) => {\n    return findBisect(timestamp, this.data.length, (pos) => this.data[pos].t);\n  };\n\n  findForwardSwipe = (timestamp, startPos) => {\n    let pos = startPos;\n    while (pos < this.data.length && this.data[pos].t < timestamp) {\n      pos += 1;\n    }\n    return pos;\n  };\n\n  getNewestTimestamp = () => {\n    if (this.data.length < 1) return null;\n    return this.data[this.data.length - 1].t;\n  };\n}\n","import { lerp, splineDerivative, spline } from \"../../util/Interpolation\";\nimport FlightAnimationData, { parseTime } from \"./FlightAnimationData\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\n\nclass FlightAnimationDataCache {\n  // IMPORTANT ASSUMPTION IN THIS ENTIRE FILE:\n  // While the cache exists, new data gets only appended. Whenever existing data changes, the cache\n  // will be invalidated.\n  // I.E., chache invariants:\n  //    - existing data entries don't change, indices always point to the same data\n  //    - data timestamps are monotonic rising, meaning, to get newer data the data array only\n  //      needs to be traversed in forward direction, never backwards.\n  // This enables efficient caching and O(1) lookup times.\n  constructor() {\n    this.currentArrayPos = null;\n    this.mapsPath = [];\n    this.mapsPathNewestPos = 0;\n  }\n\n  reset = () => {\n    this.currentArrayPos = null;\n    this.mapsPath = [];\n    this.mapsPathNewestPos = 0;\n  };\n}\n\nclass DataGens {\n  static fallbackData = (flightInfos) => {\n    return {\n      baroAlt: flightInfos.lastFix.baroAlt,\n      gpsAlt: flightInfos.lastFix.gpsAlt,\n      elevation: flightInfos.lastFix.elevation,\n      pos: {\n        lat: flightInfos.lastFix.lat,\n        lng: flightInfos.lastFix.lon,\n      },\n      gpsVario: null,\n      baroVario: null,\n      velocity: null,\n    };\n  };\n\n  static takeData(data) {\n    return {\n      baroAlt: data.baroAlt,\n      gpsAlt: data.gpsAlt,\n      elevation: data.elevation,\n      pos: {\n        lat: data.pos.lat,\n        lng: data.pos.lng,\n      },\n      gpsVario: data.gpsVario,\n      baroVario: data.baroVario,\n      velocity: data.velocity,\n    };\n  }\n\n  static blendData(data1, data2, timeStamp) {\n    const pct = (timeStamp - data1.t) / (data2.t - data1.t);\n    return {\n      baroAlt: lerp(data1.baroAlt, data2.baroAlt, pct),\n      gpsAlt: lerp(data1.gpsAlt, data2.gpsAlt, pct),\n      elevation: lerp(data1.elevation, data2.elevation, pct),\n      pos: {\n        lat: lerp(data1.pos.lat, data2.pos.lat, pct),\n        lng: lerp(data1.pos.lng, data2.pos.lng, pct),\n      },\n      gpsVario: lerp(data1.gpsVario, data2.gpsVario, pct),\n      baroVario: lerp(data1.baroVario, data2.baroVario, pct),\n      velocity: lerp(data1.velocity, data2.velocity, pct),\n    };\n  }\n\n  static blendDataSpline(data0, data1, data2, data3, timeStamp) {\n    const pct = (timeStamp - data1.t) / (data2.t - data1.t);\n    return {\n      baroAlt: lerp(data1.baroAlt, data2.baroAlt, pct),\n      gpsAlt: lerp(data1.gpsAlt, data2.gpsAlt, pct),\n      elevation: lerp(data1.elevation, data2.elevation, pct),\n      pos: {\n        lat: spline(\n          data0.pos.lat,\n          data0.t,\n          data1.pos.lat,\n          data1.t,\n          data2.pos.lat,\n          data2.t,\n          data3.pos.lat,\n          data3.t,\n          timeStamp\n        ),\n        lng: spline(\n          data0.pos.lng,\n          data0.t,\n          data1.pos.lng,\n          data1.t,\n          data2.pos.lng,\n          data2.t,\n          data3.pos.lng,\n          data3.t,\n          timeStamp\n        ),\n      },\n      gpsVario: lerp(data1.gpsVario, data2.gpsVario, pct),\n      baroVario: lerp(data1.baroVario, data2.baroVario, pct),\n      velocity: lerp(data1.velocity, data2.velocity, pct),\n    };\n  }\n\n  static computeLinearVelocity(data1, data2) {\n    const t1 = data1.t;\n    const t2 = data2.t;\n    if (t1 === t2) return null;\n\n    const dT = t2 - t1;\n\n    const p1 = data1.pos;\n    const p2 = data2.pos;\n\n    const vLat = (p2.lat - p1.lat) / dT;\n    const vLng = (p2.lng - p1.lng) / dT;\n    return { lat: vLat, lng: vLng };\n  }\n\n  static computeSplineVelocity(d0, d1, d2, d3, t) {\n    const t0 = d0.t;\n    const t1 = d1.t;\n    const t2 = d2.t;\n    const t3 = d3.t;\n\n    const p0 = d0.pos;\n    const p1 = d1.pos;\n    const p2 = d2.pos;\n    const p3 = d3.pos;\n\n    const vLat = splineDerivative(\n      p0.lat,\n      t0,\n      p1.lat,\n      t1,\n      p2.lat,\n      t2,\n      p3.lat,\n      t3,\n      t\n    );\n\n    const vLng = splineDerivative(\n      p0.lng,\n      t0,\n      p1.lng,\n      t1,\n      p2.lng,\n      t2,\n      p3.lng,\n      t3,\n      t\n    );\n\n    return { lat: vLat, lng: vLng };\n  }\n}\n\nclass FlightAnimation {\n  constructor(flightInfos) {\n    // Live data\n    this.liveData = new FlightAnimationData();\n    this.liveDataCache = new FlightAnimationDataCache();\n\n    // Data from flight infos, used as fallback\n    this.flightInfos = null;\n    this.flightInfoData = new FlightAnimationData();\n    this.flightInfoDataCache = new FlightAnimationDataCache();\n\n    // 'landed' state\n    this.landed = flightInfos.landed;\n\n    // Set flight infos\n    this.updateInfos(flightInfos);\n\n    this.settings = {};\n    this.updateSettings();\n\n    // register settings hooks\n    getSetting(Settings.ANIMATION_DELAY).registerCallback(this.updateSettings);\n    getSetting(Settings.LOW_LATENCY).registerCallback(this.updateSettings);\n    getSetting(Settings.PATH_LENGTH).registerCallback(this.updateSettings);\n    getSetting(Settings.LIMIT_PATHS).registerCallback(this.updateSettings);\n  }\n\n  destroy = () => {\n    getSetting(Settings.ANIMATION_DELAY).unregisterCallback(\n      this.updateSettings\n    );\n    getSetting(Settings.LOW_LATENCY).unregisterCallback(this.updateSettings);\n    getSetting(Settings.PATH_LENGTH).unregisterCallback(this.updateSettings);\n    getSetting(Settings.LIMIT_PATHS).unregisterCallback(this.updateSettings);\n  };\n\n  updateSettings = () => {\n    this.settings = {\n      timeOffsetSeconds: getSetting(Settings.ANIMATION_DELAY).getValue(),\n      lowLatencyMode: getSetting(Settings.LOW_LATENCY).getValue(),\n      trackLengthMinutes: getSetting(Settings.PATH_LENGTH).getValue(),\n      limitTracks: getSetting(Settings.LIMIT_PATHS).getValue(),\n    };\n    this.liveDataCache.reset();\n    this.flightInfoDataCache.reset();\n  };\n\n  updateInfos = (infos) => {\n    this.landed |= infos.landed;\n    this.flightInfos = infos;\n    this.flightInfoData.replace(infos.track);\n    this.flightInfoDataCache.reset();\n  };\n\n  updateData = (data) => {\n    if (data.length < 1) return;\n\n    // Compute start time\n    const data_start_time = parseTime(data[0].timestamp);\n    if (this.liveData.isAfterLastElement(data_start_time)) {\n      // If the new data is newer than everything in the existing data, append\n      this.liveData.append(data);\n    } else {\n      // Otherwise, merge\n      this.liveData.insert(data);\n\n      // Reset animation\n      this.liveDataCache.reset();\n    }\n  };\n\n  updateLanded = () => {\n    console.log(\"Received flight landed message!\");\n    this.landed = true;\n  };\n\n  getInterpolatedData = (data, cache, timeStamp) => {\n    if (data.length < 1) return null;\n\n    if (cache.currentArrayPos === null) {\n      cache.currentArrayPos = data.findBisect(timeStamp);\n    } else {\n      // Optimization because we assume that time runs forward and the next value is after the current value\n      cache.currentArrayPos = data.findForwardSwipe(\n        timeStamp,\n        cache.currentArrayPos\n      );\n    }\n\n    // Compute\n    let blendedData = null;\n    let endOfTrack = false;\n    let startOfTrack = false;\n    let velocityVec = null;\n    if (cache.currentArrayPos <= 0) {\n      // If the timestamp is before our track, return first element\n      blendedData = DataGens.takeData(data.at(0));\n      if (data.length >= 2) {\n        velocityVec = DataGens.computeLinearVelocity(data.at(0), data.at(1));\n      }\n      startOfTrack = true;\n    } else if (cache.currentArrayPos >= data.length) {\n      // If the timestamp is after our track, return last element\n      blendedData = DataGens.takeData(data.at(data.length - 1));\n      if (data.length >= 2) {\n        velocityVec = DataGens.computeLinearVelocity(\n          data.at(data.length - 2),\n          data.at(data.length - 1)\n        );\n      }\n      endOfTrack = true;\n    } else {\n      const data1 = data.at(cache.currentArrayPos - 1);\n      const data2 = data.at(cache.currentArrayPos);\n\n      const data0 =\n        cache.currentArrayPos - 2 >= 0\n          ? data.at(cache.currentArrayPos - 2)\n          : {\n              ...data1,\n              t: data1.t - 1,\n            };\n\n      const data3 =\n        cache.currentArrayPos + 1 < data.length\n          ? data.at(cache.currentArrayPos + 1)\n          : {\n              ...data2,\n              t: data2.t + 1,\n            };\n\n      // Blend via spline\n      blendedData = DataGens.blendDataSpline(\n        data0,\n        data1,\n        data2,\n        data3,\n        timeStamp\n      );\n      velocityVec = DataGens.computeSplineVelocity(\n        data0,\n        data1,\n        data2,\n        data3,\n        timeStamp\n      );\n    }\n\n    const newestDataTimestamp = data.at(data.length - 1).t;\n\n    return [\n      blendedData,\n      startOfTrack,\n      endOfTrack,\n      newestDataTimestamp,\n      velocityVec,\n    ];\n  };\n\n  getFallbackData = () => {\n    return [\n      DataGens.fallbackData(this.flightInfos),\n      false,\n      true,\n      parseTime(this.flightInfos.lastFix.timestamp),\n      null,\n    ];\n  };\n\n  computeTrack = (data, cache, timestamp) => {\n    if (data.length < 1) return null;\n\n    const oldestTimestamp = timestamp - this.settings.trackLengthMinutes * 60;\n\n    let track = cache.mapsPath;\n\n    // Append new data\n    while (\n      cache.mapsPathNewestPos < data.length &&\n      data.at(cache.mapsPathNewestPos).t < timestamp\n    ) {\n      const elem = data.at(cache.mapsPathNewestPos);\n      track.push({\n        lat: elem.pos.lat,\n        lng: elem.pos.lng,\n        timestamp: elem.t,\n        altitude: elem.gpsAlt !== null ? elem.gpsAlt : elem.baroAlt,\n        elevation: elem.elevation,\n      });\n      cache.mapsPathNewestPos += 1;\n    }\n\n    // Delete old data\n    if (this.settings.limitTracks) {\n      const removeChunkSize = 32;\n      let numRemove = 0;\n      while (\n        numRemove + removeChunkSize - 1 < track.length &&\n        track[numRemove + removeChunkSize - 1].timestamp < oldestTimestamp\n      ) {\n        numRemove += removeChunkSize;\n      }\n      if (numRemove > 0) {\n        track = track.slice(numRemove);\n        cache.mapsPath = track;\n      }\n    }\n\n    return track;\n  };\n\n  updateAnimation = (animationTimeMillis) => {\n    const animationTimeSeconds = this.settings.lowLatencyMode\n      ? animationTimeMillis / 1000\n      : animationTimeMillis / 1000 - this.settings.timeOffsetSeconds;\n\n    let animationResult = this.getInterpolatedData(\n      this.liveData,\n      this.liveDataCache,\n      animationTimeSeconds\n    );\n    if (!animationResult) {\n      animationResult = this.getInterpolatedData(\n        this.flightInfoData,\n        this.flightInfoDataCache,\n        animationTimeSeconds\n      );\n    }\n    if (!animationResult) {\n      animationResult = this.getFallbackData();\n    }\n\n    let track = this.computeTrack(\n      this.liveData,\n      this.liveDataCache,\n      animationTimeSeconds\n    );\n    if (!track) {\n      track = this.computeTrack(\n        this.flightInfoData,\n        this.flightInfoDataCache,\n        animationTimeSeconds\n      );\n    }\n    if (!track) {\n      track = [];\n    }\n\n    let [\n      blendedData,\n      startOfTrack,\n      endOfTrack,\n      newestDataTimestamp,\n      velocityVec,\n    ] = animationResult;\n\n    // Special case for endOfTrack for lowLatencyMode\n    if (this.settings.lowLatencyMode) {\n      if (this.landed) {\n        // If 'landed' got signalled, immediately also end the track,\n        // as the 'landed' signal comes simultaneously to the last track message\n        endOfTrack = true;\n      } else {\n        // Otherwise, determine by how long ago we last heard from the pilot whether\n        // the track is broken or not.\n        // Has to be treated different than the default case, because in lowLatencyMode we\n        // are always at the end of the track.\n        endOfTrack = newestDataTimestamp < animationTimeSeconds - 80;\n      }\n    }\n\n    // Compute last potential air time.\n    // Used for computation of flight duration.\n    let lastPotentialAirtime = animationTimeSeconds;\n    if (this.landed) {\n      lastPotentialAirtime = Math.min(\n        newestDataTimestamp,\n        animationTimeSeconds\n      );\n    }\n\n    const result = {\n      ...blendedData,\n      startOfTrack: startOfTrack,\n      endOfTrack: endOfTrack,\n      landed: this.landed,\n      name: this.flightInfos.info.user.fullname,\n      newestDataTimestamp: newestDataTimestamp,\n      track: track,\n      velocityVec: velocityVec,\n      lastPotentialAirTime: Math.round(lastPotentialAirtime),\n    };\n\n    return result;\n  };\n\n  getNewestTimestamp = () => this.liveData.getNewestTimestamp();\n}\n\nexport default FlightAnimation;\n","class HighPrecisionTimeSync {\n  // Tolerance should be larger than the duration of one animation frame.\n  // Most animations are 60Hz, meaning 16ms, so 20ms is fine.\n  constructor(tolerance = 20) {\n    this.offset = 0.0;\n    this.tolerance = tolerance;\n  }\n\n  get = (currentHighPrecisionTime, currentTime) => {\n    let estimatedTime = currentHighPrecisionTime + this.offset;\n    const offBy = estimatedTime - currentTime;\n\n    if (offBy > this.tolerance || offBy < -this.tolerance) {\n      this.offset -= offBy;\n      estimatedTime = currentHighPrecisionTime + this.offset;\n    }\n\n    return estimatedTime;\n  };\n}\n\nexport default HighPrecisionTimeSync;\n","import {\n  getChosenPilots,\n  getChosenPilotsObject\n} from \"../../common/PersistentState/ChosenPilots\";\nimport FlightAnimation from \"./FlightAnimation\";\nimport HighPrecisionTimeSync from \"../../util/HighPrecisionTimeSync\";\nimport { Settings, getSetting } from \"../../common/PersistentState/Settings\";\n\nfunction eqSet(as, bs) {\n  if (as.size !== bs.size) return false;\n  for (const a of as) if (!bs.has(a)) return false;\n  return true;\n}\n\nexport default class XContestAnimation {\n  constructor(setSubscribedFlights) {\n    this._currentAnimationData = {};\n    this._callbacks = [];\n    this._subscribedPilots = getChosenPilots();\n    this._subscribedFlights = new Set();\n    this._pilotInfos = {};\n    this._flightAnimations = {};\n    this._highPrecisionTimeSync = new HighPrecisionTimeSync();\n    const settings_limitFps = getSetting(Settings.FPS_LIMIT);\n    const settings_fps = getSetting(Settings.FPS_RATE);\n\n    // Cached settings values for performance improvements. Not sure if actually worth\n    this._setting_limitFps = settings_limitFps.getValue();\n    this._setting_fps = settings_fps.getValue();\n    settings_limitFps.registerCallback(value => {\n      this._setting_limitFps = value;\n    });\n    settings_fps.registerCallback(value => {\n      this._setting_fps = value;\n    });\n\n    this._setSubscribedFlightsCallback = flights => {\n      setSubscribedFlights(Array.from(flights));\n    };\n    getChosenPilotsObject().registerCallback(this.setSubscribedPilots);\n    requestAnimationFrame(this.animationLoop);\n  }\n\n  // Animation loop\n  _nextUpdate = Date.now();\n  animationLoop = () => {\n    // Can't use time of function parameter, because we need absolute time\n    const absTime = Date.now();\n\n    const frameTimeDelta = 1000.0 / this._setting_fps;\n\n    if (!this._setting_limitFps || absTime >= this._nextUpdate) {\n      if (this._setting_limitFps) {\n        this._nextUpdate += frameTimeDelta;\n        if (absTime > this._nextUpdate) {\n          this._nextUpdate = absTime;\n        }\n      }\n\n      const newAnimationData = {};\n      Object.keys(this._subscribedPilots).forEach(pilot => {\n        if (pilot in this._pilotInfos) {\n          const flightId = this._pilotInfos[pilot].flightId;\n          if (flightId in this._flightAnimations) {\n            const flightAnim = this._flightAnimations[flightId];\n            newAnimationData[pilot] = flightAnim.updateAnimation(absTime);\n          }\n        }\n      });\n      this._submitAnimationFrame(newAnimationData);\n    }\n    requestAnimationFrame(this.animationLoop);\n  };\n\n  _submitAnimationFrame = data => {\n    this._currentAnimationData = data;\n    for (const cb of this._callbacks) {\n      cb(data);\n    }\n  };\n\n  // External\n  setSubscribedPilots = subscribedPilots => {\n    this._subscribedPilots = subscribedPilots;\n    this._updateImportantFlights();\n  };\n\n  pushNewInfo = pilotInfo => {\n    console.log(\"newInfo: \", pilotInfo);\n    this._pilotInfos = pilotInfo;\n    this._updateImportantFlights();\n\n    // Update flight info in flightAnimations\n    Object.values(pilotInfo).forEach(flightInfo => {\n      const flightId = flightInfo.flightId;\n      if (flightId in this._flightAnimations) {\n        this._flightAnimations[flightId].updateInfos(flightInfo);\n      }\n    });\n  };\n\n  pushNewData = (trackId, trackData) => {\n    console.log(\"newTrackdata: \", trackId, trackData);\n    if (trackId in this._flightAnimations)\n      this._flightAnimations[trackId].updateData(trackData);\n  };\n\n  pushFlightLanded = flightId => {\n    if (flightId in this._flightAnimations)\n      this._flightAnimations[flightId].updateLanded();\n  };\n\n  // callback gets called every frame with new data\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n    cb(this._currentAnimationData);\n  };\n\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n  };\n\n  getData = () => {\n    return this._currentAnimationData;\n  };\n\n  // Internal\n  _updateImportantFlights = () => {\n    // Filter important flights\n    let importantFlights = {};\n    Object.values(this._pilotInfos)\n      .filter(val => val.info.user.username in this._subscribedPilots)\n      .forEach(val => {\n        importantFlights[val.flightId] = val;\n      });\n\n    let importantFlightSet = new Set(Object.keys(importantFlights));\n\n    // Cleanup old entries of _flightAnimations\n    {\n      const toRemove = [];\n      for (const flightId in this._flightAnimations) {\n        if (!(flightId in importantFlights)) {\n          toRemove.push(flightId);\n        }\n      }\n      for (const flightId of toRemove) {\n        console.log(\"Removing flightAnimation of '\" + flightId + \"' ...\");\n        this._flightAnimations[flightId].destroy();\n        delete this._flightAnimations[flightId];\n      }\n    }\n\n    // Add new flightAnimations\n    Object.entries(importantFlights).forEach(([flightId, flightInfo]) => {\n      if (!(flightId in this._flightAnimations)) {\n        this._flightAnimations[flightId] = new FlightAnimation(flightInfo);\n      }\n    });\n\n    // Send subscription change to socket\n    if (!eqSet(importantFlightSet, this._subscribedFlights)) {\n      this._subscribedFlights = importantFlightSet;\n\n      // Get the timestamp of the newest track element, to prevent loading the same data multiple times\n      let flightsWithTimestamps = [];\n      console.log(this._flightAnimations);\n      importantFlightSet.forEach(flightId => {\n        console.log(flightId, this._flightAnimations[flightId]);\n        flightsWithTimestamps.push([\n          flightId,\n          this._flightAnimations[flightId].getNewestTimestamp()\n        ]);\n      });\n\n      console.log(\n        \"Changing flight subscribtion: \",\n        this._subscribedFlights,\n        importantFlightSet\n      );\n      this._setSubscribedFlightsCallback(flightsWithTimestamps);\n    }\n  };\n}\n","import { useState, useEffect } from \"react\";\n\nclass EventfulState {\n  constructor(initialValue) {\n    this._callbacks = [];\n    this._callbackData = initialValue;\n  }\n\n  set = value => {\n    this._callbackData = value;\n    for (const cb of this._callbacks) {\n      cb(value);\n    }\n  };\n\n  getValue = () => this._callbackData;\n\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n  };\n\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n  };\n\n  use = () => {\n    const [value, setValue] = useState(this._callbackData);\n\n    useEffect(() => {\n      // trigger component update on change\n      this.registerCallback(setValue);\n      return () => this.unregisterCallback(setValue);\n    }, []);\n\n    return value;\n  };\n}\n\nexport default EventfulState;\n","import XContestSocket from \"./XContestSocket\";\nimport XContestAnimation from \"./XContestAnimation\";\nimport EventfulState from \"../../util/EventfulState\";\nimport { setChosenPilotsAndUpdateNames } from \"../../common/PersistentState/ChosenPilots\";\n\nexport const ConnectionState = {\n  CONNECTING: \"connecting\", //orange\n  ERROR: \"error\", //red\n  ESTABLISHED: \"established\", //yellow\n  ACTIVE: \"active\", //green\n  INACTIVE: \"inactive\", //orange\n  NO_CONNECTION: \"no connection\", //red\n  NO_INFORMATION: \"no information\" //gray\n};\n\nclass XContestInterface {\n  constructor() {\n    this.pilots = [];\n    this.connectionState = new EventfulState(ConnectionState.NO_INFORMATION);\n    this.pilotInfos = new EventfulState([]);\n    this.socket = new XContestSocket(\n      this.onConnectionStateChanged,\n      this.onInfoMessageReceived,\n      this.onTracklogMessageReceived,\n      this.onFlightLandedMessageReceived\n    );\n    this.animation = new XContestAnimation(this.setSubscribedFlights);\n  }\n\n  setSubscribedFlights = flights => {\n    this.socket.setSubscribedFlights(flights);\n  };\n\n  getPilotInfos = () => this.pilots;\n\n  onConnectionStateChanged = state => {\n    this.connectionState.set(state);\n  };\n\n  onInfoMessageReceived = msg => {\n    this.pilots = {};\n    for (const [trackId, track] of msg) {\n      // Skip if we have a newer track of the same person\n      if (track.overriden) continue;\n\n      track.flightId = trackId;\n\n      this.pilots[track.info.user.username] = track;\n    }\n    this.animation.pushNewInfo(this.pilots);\n    this.pilotInfos.set(this.pilots);\n\n    // Set pilot names if available\n    setChosenPilotsAndUpdateNames();\n  };\n\n  onTracklogMessageReceived = msg => {\n    this.animation.pushNewData(msg.flightUuid, msg.trackChunk);\n  };\n\n  onFlightLandedMessageReceived = flightId => {\n    this.animation.pushFlightLanded(flightId);\n  };\n}\n\n// Singleton stuff\nlet _instance = null;\nexport const getXContestInterface = () => {\n  if (!_instance) {\n    _instance = new XContestInterface();\n  }\n  return _instance;\n};\n\nexport const useXContestPilots = () => getXContestInterface().pilotInfos.use();\nexport const useXContestConnectionState = () =>\n  getXContestInterface().connectionState.use();\n","// seed\nfunction xmur3(str) {\n  for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++) {\n    h = Math.imul(h ^ str.charCodeAt(i), 3432918353);\n    h = (h << 13) | (h >>> 19);\n  }\n  return function() {\n    h = Math.imul(h ^ (h >>> 16), 2246822507);\n    h = Math.imul(h ^ (h >>> 13), 3266489909);\n    return (h ^= h >>> 16) >>> 0;\n  };\n}\n\n// rng\nfunction sfc32(a, b, c, d) {\n  return function() {\n    a >>>= 0;\n    b >>>= 0;\n    c >>>= 0;\n    d >>>= 0;\n    var t = (a + b) | 0;\n    a = b ^ (b >>> 9);\n    b = (c + (c << 3)) | 0;\n    c = (c << 21) | (c >>> 11);\n    d = (d + 1) | 0;\n    t = (t + d) | 0;\n    c = (c + t) | 0;\n    return (t >>> 0) / 4294967296;\n  };\n}\n\nexport default function createRng(seedString) {\n  // Create xmur3 state:\n  const seed = xmur3(seedString);\n  // Output four 32-bit hashes to provide the seed for sfc32.\n  const rand = sfc32(seed(), seed(), seed(), seed());\n  return rand;\n}\n","import createRng from \"./rng\";\nimport convert from \"color-convert\";\n\nexport default function string2color(str, lightness) {\n  const rand = createRng(str);\n\n  const colorHue = Math.min(Math.max(rand() * 360, 0), 360);\n  const hexColor = \"#\" + convert.hsl.hex(colorHue, 100, lightness);\n  return hexColor;\n}\n","import { getRhumbLineBearing } from \"geolib\";\nimport string2color from \"../util/string2color\";\n\n//const path_questionmark =\n//  \"m 12.747342,2.0001932 c -0.254753,-0.0015 -0.513283,0.0061 -0.773833,0.0228 C 8.104865,2.2564442 6.070752,4.4579604 5.904,8.4266554 h 3.901734 c 0.03335,-1.367366 0.834151,-2.401618 2.234867,-2.56837 1.400716,-0.133402 2.734861,0.200232 3.135066,1.134043 0.433555,1.033862 -0.533606,2.234215 -1.000512,2.734471 -0.86711,0.9338106 -2.267826,1.6342986 -3.001534,2.6348096 -0.700358,1.000512 -0.834151,2.301567 -0.900851,3.902386 h 3.43535 c 0.03335,-1.033862 0.09979,-2.001153 0.566695,-2.63481 0.767059,-1.033862 1.900972,-1.500768 2.834783,-2.334527 0.90046,-0.767059 1.867621,-1.7008696 2.001023,-3.1682856 0.531522,-4.033312 -2.54199,-6.1030962 -6.363279,-6.1261792 z M 12.073821,17.730891 A 2.1677748,2.1344245 0 0 0 9.906046,19.865445 2.1677748,2.1344245 0 0 0 12.073821,22 2.1677748,2.1344245 0 0 0 14.241595,19.865445 2.1677748,2.1344245 0 0 0 12.073821,17.730891 Z\";\nconst path_questionmark_min =\n  \"M 12.747,2 C 12.492,1.998 12.234,2.006 11.973,2.023 8.105,2.256 6.071,4.458 5.904,8.427 H 9.806 C 9.839,7.06 10.64,6.025 12.041,5.859 c 1.401,-0.133 2.735,0.2 3.135,1.134 0.434,1.034 -0.534,2.234 -1.001,2.734 -0.867,0.934 -2.268,1.634 -3.002,2.635 -0.7,1.001 -0.834,2.302 -0.901,3.902 h 3.435 c 0.033,-1.034 0.1,-2.001 0.567,-2.635 0.767,-1.034 1.901,-1.501 2.835,-2.335 0.9,-0.767 1.868,-1.701 2.001,-3.168 C 19.642,4.093 16.568,2.023 12.747,2 Z M 12.074,17.731 A 2.168,2.134 0 0 0 9.906,19.865 2.168,2.134 0 0 0 12.074,22 2.168,2.134 0 0 0 14.242,19.865 2.168,2.134 0 0 0 12.074,17.731 Z\";\nconst path_arrow =\n  \"M12.93 4.26l6.15 14.99c.34.83-.51 1.66-1.33 1.29l-5.34-2.36c-.26-.11-.55-.11-.81 0l-5.34 2.36c-.82.36-1.67-.46-1.33-1.29l6.15-14.99c.33-.83 1.51-.83 1.85 0z\";\nconst path_idle =\n  \"M 12,2 C 8.13,2 5,5.13 5,9 c 0,5.25 7,13 7,13 0,0 7,-7.75 7,-13 0,-3.87 -3.13,-7 -7,-7\";\n//const path_landed =\n//  \"M 12.662857,19.784264 19.12,15.167121 C 19.668572,14.77855 20,14.149978 20,13.475692 20,11.772835 18.08,10.789978 16.697143,11.772835 L 12,15.121407 7.302857,11.772835 C 5.92,10.778549 4,11.772835 4,13.475692 c 0,0.674286 0.331429,1.314286 0.88,1.702858 l 6.457143,4.617142 c 0.4,0.274286 0.925714,0.274286 1.325714,-0.01143 z m 0,-8 L 19.12,7.1785496 C 19.668572,6.7785496 20,6.1499781 20,5.4756924 20,3.7728353 18.08,2.7785495 16.697143,3.7728353 L 12,7.1214067 7.302857,3.7728353 C 5.92,2.7785495 4,3.7728353 4,5.4756924 4,6.1499781 4.331429,6.7899782 4.88,7.1785496 l 6.457143,4.6171424 c 0.4,0.274286 0.925714,0.274286 1.325714,-0.01143 z\";\nconst path_landed_min =\n  \"m 12.66,19.78 6.46,-4.61 C 19.67,14.78 20,14.15 20,13.48 20,11.77 18.08,10.79 16.7,11.77 L 12,15.12 7.3,11.77 c -1.38,-0.99 -3.3,0 -3.3,1.71 0,0.67 0.33,1.31 0.88,1.7 l 6.46,4.62 c 0.4,0.27 0.93,0.27 1.33,-0.01 z m 0,-8 6.46,-4.6 C 19.67,6.78 20,6.15 20,5.48 20,3.77 18.08,2.78 16.7,3.77 L 12,7.12 7.3,3.77 C 5.92,2.78 4,3.77 4,5.48 4,6.15 4.33,6.79 4.88,7.18 l 6.46,4.62 c 0.4,0.27 0.93,0.27 1.33,-0.01 z\";\n\nexport const getPilotIconColor = name => string2color(name, 70);\nexport const getPilotTrackColor = name => string2color(name, 40);\n\nexport const pilotIconChanged = (oldPilotIcon, newPilotIcon) => {\n  for (let p in oldPilotIcon) {\n    if (!(p in newPilotIcon)) return true;\n  }\n  for (let p in newPilotIcon) {\n    if (!(p in oldPilotIcon)) return true;\n    // Special cases\n    if (p === \"anchor\") {\n      if (\n        oldPilotIcon[p].x !== newPilotIcon[p].x ||\n        oldPilotIcon[p].y !== newPilotIcon[p].y\n      )\n        return true;\n    } else if (oldPilotIcon[p] !== newPilotIcon[p]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const getPilotIcon = (\n  waitingForStart,\n  endOfTrack,\n  hasLanded,\n  pos,\n  velocityVec,\n  color\n) => {\n  /*\n    Four different symbols:\n      - Flying\n      - Signal lost\n      - Landed\n      - Not yet started (idle)\n  */\n\n  if (endOfTrack) {\n    if (hasLanded) {\n      // LANDED\n      return {\n        path: path_landed_min,\n        fillColor: color,\n        fillOpacity: 1,\n        anchor: { x: 12, y: 20 },\n        strokeWeight: 1,\n        scale: 1.2\n      };\n    } else {\n      // SIGNAL LOST\n      return {\n        path: path_questionmark_min,\n        fillColor: color,\n        fillOpacity: 1,\n        anchor: { x: 12, y: 12 },\n        strokeWeight: 1,\n        scale: 1.2\n      };\n    }\n  }\n\n  if (waitingForStart) {\n    // NOT YET STARTED\n    return {\n      path: path_idle,\n      fillColor: color,\n      fillOpacity: 1,\n      anchor: { x: 12, y: 22 },\n      strokeWeight: 1,\n      scale: 1.2\n    };\n  }\n\n  // Compute direction\n  const bearing =\n    velocityVec === null\n      ? 0\n      : getRhumbLineBearing(pos, {\n          lat: pos.lat + velocityVec.lat,\n          lng: pos.lng + velocityVec.lng\n        });\n\n  // FLYING\n  return {\n    path: path_arrow,\n    fillColor: color,\n    fillOpacity: 1,\n    anchor: { x: 12, y: 12 },\n    strokeWeight: 1,\n    scale: 1.2,\n    rotation: bearing\n  };\n};\n","import { getXContestInterface } from \"../location_provider/XContest/XContestInterface\";\nimport { registerPersistentState } from \"../common/PersistentState/PersistentState\";\n\nclass MapViewportControllerService {\n  constructor() {\n    this.mapControllers = [];\n\n    // The state of the viewport controller service\n    this.state = registerPersistentState(\"viewport-state\", {\n      includeSelf: true,\n      enabled: true,\n      followSinglePilot: null,\n      pilots: {}\n    });\n\n    // Reset state at every new page load.\n    // If this turns out to be intended behaviour, convert the persistent state to\n    // a local class state.\n    this.state.setValue(null);\n\n    // Register for animation frame updates\n    getXContestInterface().animation.registerCallback(this.onAnimationFrame);\n  }\n\n  // Disables the controllers, enables manual mode\n  setFreeMode = () => {\n    this.state.updateValue(oldValue => ({\n      ...oldValue,\n      enabled: false\n    }));\n  };\n\n  // Follows a single pilot\n  setSinglePilotMode = pilotId => {\n    this.state.updateValue(oldValue => ({\n      ...oldValue,\n      enabled: true,\n      followSinglePilot: pilotId\n    }));\n    this._emitZoomToSinglePilot();\n  };\n\n  setFollowMode = () => {\n    this.state.updateValue(oldValue => ({\n      ...oldValue,\n      enabled: true,\n      followSinglePilot: null\n    }));\n  };\n\n  // Sends single pilot mode signal to controllers\n  _emitZoomToSinglePilot = () => {\n    for (const mapController of this.mapControllers) {\n      mapController.zoomToSinglePilot();\n    }\n  };\n\n  // Update this and every registered map controller.\n  onAnimationFrame = pilotInfos => {\n    // Add new pilots, remove old pilots\n    this.state.updateValue(oldState => {\n      const newState = { ...oldState };\n      newState.pilots = { ...newState.pilots };\n\n      // Remove old pilots\n      for (const pilotName in oldState.pilots) {\n        if (!(pilotName in pilotInfos)) {\n          delete newState.pilots[pilotName];\n        }\n      }\n\n      // Add new pilots\n      for (const pilotName in pilotInfos) {\n        if (!(pilotName in newState.pilots)) {\n          newState.pilots[pilotName] = true;\n        }\n      }\n\n      return newState;\n    });\n\n    for (const mapController of this.mapControllers) {\n      mapController.onAnimationFrame(pilotInfos, this.state.getValue());\n    }\n  };\n\n  // All other map controllers register here.\n  registerMapController = controller => {\n    if (!this.mapControllers.includes(controller))\n      this.mapControllers.push(controller);\n  };\n\n  // All other map controllers unregister here.\n  unregisterMapController = controller => {\n    const index = this.mapControllers.indexOf(controller);\n    if (index >= 0) {\n      this.mapControllers.splice(index, 1);\n    }\n  };\n}\n\n// Singleton\nlet _instance = null;\nexport const getMapViewportControllerService = () => {\n  if (!_instance) {\n    _instance = new MapViewportControllerService();\n  }\n  return _instance;\n};\n","import {\n  getPilotIcon,\n  getPilotIconColor,\n  getPilotTrackColor,\n  pilotIconChanged\n} from \"../../common/PilotIcon\";\nimport { getMapViewportControllerService } from \"../../services/MapViewportControllerService\";\n\nexport default class GoogleMapsTrack {\n  constructor(google, map, pilotInfo, initialData, pilotInfoWindow) {\n    this.google = google;\n    this.pilotInfoWindow = pilotInfoWindow;\n    this.pilotColor = getPilotIconColor(pilotInfo.info.user.username);\n    this.trackColor = getPilotTrackColor(pilotInfo.info.user.username);\n\n    this.pilotIcon = getPilotIcon(\n      initialData.startOfTrack,\n      initialData.endOfTrack,\n      initialData.landed,\n      initialData.pos,\n      initialData.velocityVec,\n      this.pilotColor\n    );\n\n    this.marker = new this.google.maps.Marker({\n      map: map,\n      position: initialData.pos,\n      title: pilotInfo.info.user.fullname,\n      icon: this.pilotIcon\n    });\n\n    this.marker.addListener(\"click\", () => {\n      this.pilotInfoWindow.open(\n        this.map,\n        this.marker,\n        pilotInfo.info.user.username\n      );\n    });\n\n    this.marker.addListener(\"dblclick\", () => {\n      getMapViewportControllerService().setSinglePilotMode(\n        pilotInfo.info.user.username\n      );\n    });\n\n    this.track = new this.google.maps.Polyline({\n      map: map,\n      path: [],\n      strokeColor: this.trackColor\n    });\n    this.currentTrackVersion = { startTime: null, endTime: null, length: null };\n    this.newestTrackSegment = new this.google.maps.Polyline({\n      map: map,\n      path: [],\n      strokeColor: this.trackColor\n    });\n    this.newestTrackSegmentData = null;\n  }\n\n  setMap = map => {\n    this.marker.setMap(map);\n    this.track.setMap(map);\n    this.newestTrackSegment.setMap(map);\n  };\n\n  _updateTrack = track => {\n    if (!track || track.length < 1) return;\n\n    // Compute identifiers to reduce the amount if maps updates\n    const length = track.length;\n    const startTime = track[0].timestamp;\n    const endTime = track[length - 1].timestamp;\n    if (\n      startTime === this.currentTrackVersion.startTime &&\n      endTime === this.currentTrackVersion.endTime &&\n      length === this.currentTrackVersion.length\n    ) {\n      return;\n    }\n\n    if (\n      startTime === this.currentTrackVersion.startTime &&\n      length > this.currentTrackVersion.length &&\n      endTime > this.currentTrackVersion.endTime\n    ) {\n      let oldTrack = this.track.getPath();\n      let oldLength = oldTrack.getLength();\n      while (oldLength < length) {\n        const newPoint = track[oldLength];\n        oldLength = oldTrack.push(\n          new this.google.maps.LatLng(newPoint.lat, newPoint.lng)\n        );\n      }\n\n      this.currentTrackVersion.endTime = endTime;\n      this.currentTrackVersion.length = length;\n      return;\n    }\n\n    //console.log(\"Full path update!\");\n\n    // If the start/end time or length changed, update track in map\n    this.currentTrackVersion.startTime = startTime;\n    this.currentTrackVersion.endTime = endTime;\n    this.currentTrackVersion.length = length;\n\n    this.track.setPath(track);\n  };\n\n  _updateNewestSegment = (trackEndPos, currentPos) => {\n    // Initialize if unset\n    if (this.newestTrackSegmentData === null) {\n      this.newestTrackSegment.setPath([trackEndPos, currentPos]);\n      this.newestTrackSegmentData = [trackEndPos, currentPos];\n      //console.log(\"Set newest track segment new\");\n    }\n\n    // Query previous and update previous\n    const [previousTrackEndPos, previousPos] = this.newestTrackSegmentData;\n    this.newestTrackSegmentData = [trackEndPos, currentPos];\n\n    // Get maps polyline\n    const path = this.newestTrackSegment.getPath();\n\n    // Update first piont if necessary\n    if (\n      trackEndPos.lat !== previousTrackEndPos.lat ||\n      trackEndPos.lng !== previousTrackEndPos.lng\n    ) {\n      const point = new this.google.maps.LatLng(\n        trackEndPos.lat,\n        trackEndPos.lng\n      );\n      path.setAt(0, point);\n      //console.log(\"Set trackEndPos\");\n    }\n\n    if (\n      previousPos.lat !== currentPos.lat ||\n      previousPos.lng !== currentPos.lng\n    ) {\n      const point = new this.google.maps.LatLng(currentPos.lat, currentPos.lng);\n      path.setAt(1, point);\n      //console.log(\"Set currentPos\");\n    }\n  };\n\n  updateData = data => {\n    this.marker.setPosition(data.pos);\n\n    // Update Pilot Icon if necessary\n    let pilotIcon = this.marker.getIcon();\n    const newPilotIcon = getPilotIcon(\n      data.startOfTrack,\n      data.endOfTrack,\n      data.landed,\n      data.pos,\n      data.velocityVec,\n      this.pilotColor\n    );\n    if (pilotIconChanged(pilotIcon, newPilotIcon))\n      this.marker.setIcon(newPilotIcon);\n\n    if (data.track.length > 0) {\n      const currentPos = data.track[data.track.length - 1];\n      const trackEndPos = data.pos;\n      this._updateNewestSegment(trackEndPos, currentPos);\n    }\n    this._updateTrack(data.track);\n  };\n}\n","export default class MapPilotInfoWindow {\n  constructor(google) {\n    this.google = google;\n    this.infoWindow = new google.maps.InfoWindow({\n      content: \"- ERROR -\",\n      pixelOffset: new google.maps.Size(0, -5),\n      disableAutoPan: true\n    });\n    this.data = {};\n    this.currentPilot = null;\n  }\n\n  open = (map, anchor, pilotId) => {\n    this.currentPilot = pilotId;\n    this.infoWindow.open(map, anchor);\n    this.updateContent();\n  };\n\n  close = () => {\n    this.infoWindow.close();\n    this.currentPilot = null;\n    this.updateContent();\n  };\n\n  update = data => {\n    this.data = data;\n    this.updateContent();\n  };\n\n  updateContent = () => {\n    // Some sanity checks\n    if (this.infoWindow.anchor == null) {\n      this.currentPilot = null;\n      return;\n    }\n\n    if (this.currentPilot === null) return;\n\n    if (!(this.currentPilot in this.data)) {\n      this.currentPilot = null;\n      this.infoWindow.close();\n      return;\n    }\n\n    const pilotInfo = this.data[this.currentPilot];\n\n    const height =\n      pilotInfo.gpsAlt === null ? pilotInfo.baroAlt : pilotInfo.gpsAlt;\n    const heightGnd = Math.max(height - pilotInfo.elevation, 0);\n\n    // Update content\n    let newContent = \"\";\n    newContent += \"<b>\" + pilotInfo.name + \"</b><br>\";\n    newContent += Math.round(height) + \"m (\";\n    newContent += Math.round(heightGnd) + \"m)<br>\";\n\n    if (pilotInfo.baroVario !== null && !pilotInfo.landed) {\n      const vario = Math.round(pilotInfo.baroVario * 10);\n      let varioAbs = Math.abs(vario);\n      if (varioAbs > 99) varioAbs = 99;\n      const varioStr =\n        (vario >= 0 ? \"&plus;\" : \"&minus;\") +\n        Math.floor(varioAbs / 10) +\n        \".\" +\n        (varioAbs % 10) +\n        \"m/s\";\n      newContent += \"<span>\" + varioStr + \"</span>&nbsp;&nbsp;\";\n    }\n\n    if (pilotInfo.velocity !== null && !pilotInfo.landed) {\n      newContent += Math.round(pilotInfo.velocity * 3.6) + \"km/h\";\n    }\n\n    if (this.infoWindow.getContent() !== newContent) {\n      this.infoWindow.setContent(newContent);\n    }\n  };\n}\n","import { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\nimport GoogleMapsTrack from \"./GoogleMapsTrack\";\nimport MapPilotInfoWindow from \"./MapPilotInfoWindow\";\n\nexport default class MapAnimator {\n  constructor(map, google) {\n    this.map = map;\n    this.google = google;\n    this.tracks = {};\n    this.infoWindow = new MapPilotInfoWindow(google);\n  }\n\n  cleanupOldTracks = data => {\n    const toRemove = [];\n    for (const pilot in this.tracks) {\n      if (!(pilot in data)) {\n        toRemove.push(pilot);\n      }\n    }\n    for (const pilot of toRemove) {\n      this.tracks[pilot].setMap(null);\n      delete this.tracks[pilot];\n    }\n  };\n\n  update = data => {\n    const pilotInfos = getXContestInterface().getPilotInfos();\n\n    // Remove tracks that we unsubscribed from\n    this.cleanupOldTracks(data);\n\n    // Update all pilots\n    Object.entries(data).forEach(([pilot, pilotData]) => {\n      if (!(pilot in pilotInfos)) return;\n      const info = pilotInfos[pilot];\n\n      // Add track if it doesn't exist\n      if (!(pilot in this.tracks)) {\n        this.tracks[pilot] = new GoogleMapsTrack(\n          this.google,\n          this.map,\n          info,\n          pilotData,\n          this.infoWindow\n        );\n      }\n\n      // Update all tracks properties\n      const track = this.tracks[pilot];\n      track.updateData(pilotData);\n    });\n\n    this.infoWindow.update(data);\n  };\n}\n","import { getSetting, Settings } from \"../common/PersistentState/Settings\";\n\nclass GPSProvider {\n  constructor() {\n    this._callbacks = [];\n    this._watchId = null;\n    this._gpsData = null;\n\n    let gpsEnabledSetting = getSetting(Settings.GPS_ENABLED);\n    gpsEnabledSetting.registerCallback(this._updateGPSState);\n    this._updateGPSState();\n  }\n\n  _updateGPSState = () => {\n    let gpssettingEnabled = getSetting(Settings.GPS_ENABLED).getValue();\n    let callbackRegistered = this._callbacks.length > 0;\n\n    let enableGps = gpssettingEnabled && callbackRegistered;\n\n    if (this._watchId === null && enableGps && navigator.geolocation) {\n      this._watchId = navigator.geolocation.watchPosition(\n        this._onNewGPSData,\n        this._onGPSError,\n        { enableHighAccuracy: true }\n      );\n      console.log(\"GPS: On\");\n    }\n\n    if (this._watchId !== null && !enableGps) {\n      navigator.geolocation.clearWatch(this._watchId);\n      this._watchId = null;\n      this._setGPSData(null);\n      console.log(\"GPS: Off\");\n    }\n\n    //console.log(\"UPDATE_GPS_STATE\", enableGps, this._callbacks.length);\n  };\n\n  _setGPSData = data => {\n    console.log(\"GPS DATA:\", data);\n    this._gpsData = data;\n    for (const cb of this._callbacks) {\n      cb(data);\n    }\n  };\n\n  _onNewGPSData = data => {\n    this._setGPSData(data);\n  };\n  _onGPSError = () => {\n    this._setGPSData(null);\n  };\n\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n    this._updateGPSState();\n    cb(this._gpsData);\n  };\n\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n    this._updateGPSState();\n  };\n\n  getData = () => {\n    return this._gpsData;\n  };\n}\n\n// Singleton stuff\nlet _instance = null;\nexport const getGPSProvider = () => {\n  if (!_instance) {\n    _instance = new GPSProvider();\n  }\n  return _instance;\n};\n","import { getMapViewportControllerService } from \"../../services/MapViewportControllerService\";\nimport { getGPSProvider } from \"../../services/GPSProvider\";\n\nexport default class GoogleMapsController {\n  constructor(google, map) {\n    this.google = google;\n    this.map = map;\n    this.lastUpdate = Date.now();\n\n    this.gpsState = getGPSProvider().getData();\n    getGPSProvider().registerCallback(this.onGpsUpdate);\n\n    this.viewportInitialized = false;\n    this.singlePersonMode = false;\n\n    this.userInputListeners = [\n      map.addListener(\"dragstart\", this.onUserInput),\n      map.addListener(\"center_changed\", this.onUserInput)\n    ];\n\n    this.insideMapsApiFunction = false;\n  }\n\n  zoomToSinglePilot = () => {\n    if (this.map.getZoom() < 12) this.map.setZoom(12);\n  };\n\n  shutdown = () => {\n    // Do nothing -- seems broken atm\n    //  for (let userInputListener in this.userInputListeners) {\n    //    userInputListener.remove();\n    //}\n    getGPSProvider().unregisterCallback(this.onGpsUpdate);\n  };\n\n  onGpsUpdate = gpsData => {\n    this.gpsState = gpsData;\n  };\n\n  onUserInput = () => {\n    if (!this.insideMapsApiFunction)\n      getMapViewportControllerService().setFreeMode();\n  };\n\n  updateViewport = watchedCoords => {\n    const previousSinglePersonMode = this.singlePersonMode;\n    this.singlePersonMode = false;\n\n    if (watchedCoords.length === 0) {\n      return;\n    }\n\n    if (watchedCoords.length === 1) {\n      this.insideMapsApiFunction = true;\n      this.map.panTo(watchedCoords[0]);\n      this.insideMapsApiFunction = false;\n\n      if (!previousSinglePersonMode) {\n        this.zoomToSinglePilot();\n      }\n      this.singlePersonMode = true;\n      return;\n    }\n\n    let bounds = new this.google.maps.LatLngBounds(\n      watchedCoords[0],\n      watchedCoords[0]\n    );\n\n    watchedCoords.forEach(coord => bounds.extend(coord));\n\n    this.insideMapsApiFunction = true;\n    this.map.fitBounds(bounds);\n    this.insideMapsApiFunction = false;\n  };\n\n  onAnimationFrame = (pilotInfos, controllerState) => {\n    // Set initial map position after map creations\n    if (!this.viewportInitialized) {\n      let watchedCoords = [];\n\n      for (const [, pilotInfo] of Object.entries(pilotInfos)) {\n        watchedCoords.push(pilotInfo.pos);\n      }\n\n      if (this.gpsState) {\n        watchedCoords.push({\n          lat: this.gpsState.coords.latitude,\n          lng: this.gpsState.coords.longitude\n        });\n      }\n\n      if (watchedCoords.length !== 0) {\n        this.updateViewport(watchedCoords);\n        this.viewportInitialized = true;\n      }\n    }\n\n    // Don't do anything if the controller is disabled\n    if (!controllerState.enabled) {\n      // Run a viewport update anyway, to register that we currently\n      // don't view anyone. Important for registering when we have to\n      // zoom in.\n      this.updateViewport([]);\n      return;\n    }\n\n    // If followSinglePilot is set,\n    if (controllerState.followSinglePilot !== null) {\n      const pilotName = controllerState.followSinglePilot;\n      if (pilotName in pilotInfos) {\n        this.updateViewport([pilotInfos[pilotName].pos]);\n        return;\n      }\n    }\n\n    let watchedCoords = [];\n    if (controllerState.includeSelf) {\n      if (this.gpsState) {\n        watchedCoords.push({\n          lat: this.gpsState.coords.latitude,\n          lng: this.gpsState.coords.longitude\n        });\n      }\n    }\n    for (const [pilotName, enabled] of Object.entries(controllerState.pilots)) {\n      if (enabled && pilotName in pilotInfos) {\n        watchedCoords.push(pilotInfos[pilotName].pos);\n      }\n    }\n    this.updateViewport(watchedCoords);\n  };\n}\n","export const createButtonIcon = (svgPath, viewBox) => {\n  const xmlns = \"http://www.w3.org/2000/svg\";\n\n  let svgEl = document.createElementNS(xmlns, \"svg\");\n  svgEl.setAttribute(\"width\", \"24\");\n  svgEl.setAttribute(\"height\", \"24\");\n  svgEl.setAttribute(\"viewBox\", viewBox);\n\n  let pathEl = document.createElementNS(xmlns, \"path\");\n  pathEl.setAttribute(\"d\", svgPath);\n\n  svgEl.appendChild(pathEl);\n  return svgEl;\n};\n\nexport const createSatelliteIcon = () =>\n  createButtonIcon(\n    \"M8.57 6H6v2.58c1.42 0 2.57-1.16 2.57-2.58zM12 6h-1.71c0 2.36-1.92 4.29-4.29 4.29V12c3.32 0 6-2.69 6-6zm2.14 5.86l-3 3.87L9 13.15 6 17h12z\",\n    \"0 0 24 24\"\n  );\n\nexport const createFocusCameraIcon = () =>\n  createButtonIcon(\n    \"M10 30h-4v8c0 2.21 1.79 4 4 4h8v-4h-8v-8zm0-20h8v-4h-8c-2.21 0-4 1.79-4 4v8h4v-8zm28-4h-8v4h8v8h4v-8c0-2.21-1.79-4-4-4zm0 32h-8v4h8c2.21 0 4-1.79 4-4v-8h-4v8zm-14-22c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 12c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z\",\n    \"-10 -10 68 68\"\n  );\n","import { createSatelliteIcon } from \"./ButtonIcons\";\n\nexport function createSatelliteMapButton(google, map) {\n  // Create a div to hold the control.\n  var controlDiv = document.createElement(\"div\");\n\n  // Set CSS for the control border\n  var controlUI = document.createElement(\"div\");\n  controlUI.classList.add(\"custom-google-maps-button\");\n  controlUI.title = \"Toggle satellite view\";\n  controlUI.appendChild(createSatelliteIcon());\n  controlDiv.appendChild(controlUI);\n\n  controlDiv.onclick = () => {\n    if (map.getMapTypeId() === google.maps.MapTypeId.HYBRID) {\n      map.setMapTypeId(google.maps.MapTypeId.TERRAIN);\n    } else {\n      map.setMapTypeId(google.maps.MapTypeId.HYBRID);\n    }\n  };\n\n  return controlDiv;\n}\n","import { createFocusCameraIcon } from \"./ButtonIcons\";\nimport { getMapViewportControllerService } from \"../../../services/MapViewportControllerService\";\n\nexport function createFocusCameraMapButton(google, map) {\n  // Create a div to hold the control.\n  var controlDiv = document.createElement(\"div\");\n\n  // Set CSS for the control border\n  var controlUI = document.createElement(\"div\");\n  controlUI.classList.add(\"custom-google-maps-button\");\n  controlUI.title = \"Focus camera\";\n  controlUI.appendChild(createFocusCameraIcon());\n  controlDiv.appendChild(controlUI);\n\n  controlDiv.onclick = () => {\n    getMapViewportControllerService().setFollowMode();\n  };\n\n  return controlDiv;\n}\n","import React, { useState, useRef, useLayoutEffect, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport useGoogleMapsApi from \"../../common/GoogleMapsApiLoader\";\nimport { LoadingPage, ErrorPage } from \"../StatusPages\";\nimport mapStyle from \"./MapStyle.json\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\nimport MapAnimator from \"./MapAnimator\";\nimport { pure } from \"recompose\";\nimport \"./gm-style-overrides.css\";\nimport { createGeolocationMarker } from \"../../ext/geolocation-marker\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\nimport { getMapViewportControllerService } from \"../../services/MapViewportControllerService\";\nimport GoogleMapsController from \"./GoogleMapsController\";\n\nimport \"./CustomButtons/CustomButtons.css\";\nimport { createSatelliteMapButton } from \"./CustomButtons/SatelliteMapButton\";\nimport { createFocusCameraMapButton } from \"./CustomButtons/FocusCameraMapButton\";\n\nconst LiveMap = () => {\n  const [mapReady, mapError, google] = useGoogleMapsApi();\n  const mapsRef = useRef();\n  const [map, setMap] = useState(null);\n\n  // Initialize Map\n  useLayoutEffect(() => {\n    if (mapReady && !map) {\n      setMap(\n        new google.maps.Map(mapsRef.current, {\n          center: { lat: 46.509012, lng: 11.827984 },\n          mapTypeId: \"terrain\",\n          zoom: 5,\n          maxZoom: 15,\n          disableDefaultUI: true,\n          zoomControl: true,\n          scaleControl: true,\n          fullscreenControl: true,\n          styles: mapStyle,\n        })\n      );\n    }\n  }, [mapReady, map, google, mapsRef]);\n\n  // Additional maps callbacks to influence maps behaviour\n  useEffect(() => {\n    if (map && google) {\n      // Register map type callback\n      map.addListener(\"maptypeid_changed\", () => {\n        if (map.getMapTypeId() === google.maps.MapTypeId.TERRAIN) {\n          map.setOptions({ maxZoom: 15 });\n        } else {\n          map.setOptions({ maxZoom: 50 });\n        }\n      });\n\n      // Add custom map controls\n      map.controls[google.maps.ControlPosition.TOP_LEFT].push(\n        createSatelliteMapButton(google, map)\n      );\n      map.controls[google.maps.ControlPosition.TOP_LEFT].push(\n        createFocusCameraMapButton(google, map)\n      );\n    }\n  }, [map, google]);\n\n  // Register map for updates\n  useEffect(() => {\n    if (map && google) {\n      const mapAnimator = new MapAnimator(map, google);\n      const mapAnimatorUpdateCallback = mapAnimator.update;\n      getXContestInterface().animation.registerCallback(\n        mapAnimatorUpdateCallback\n      );\n\n      const geolocationMarker = createGeolocationMarker(google, null);\n      geolocationMarker.setPositionOptions({ enableHighAccuracy: true });\n\n      // enable/disable geolocation marker on change\n      if (getSetting(Settings.GPS_ENABLED).getValue()) {\n        geolocationMarker.setMap(map);\n      }\n      const geolocationMarkerStateUpdater = (enabled) => {\n        if (enabled) {\n          geolocationMarker.setMap(map);\n        } else {\n          geolocationMarker.setMap(null);\n        }\n      };\n      getSetting(Settings.GPS_ENABLED).registerCallback(\n        geolocationMarkerStateUpdater\n      );\n\n      // Register Map Controller\n      let mapController = new GoogleMapsController(google, map);\n      getMapViewportControllerService().registerMapController(mapController);\n\n      return () => {\n        // Unregister Map Controller\n        getMapViewportControllerService().unregisterMapController(\n          mapController\n        );\n\n        // Shutdown mapController\n        mapController.shutdown();\n\n        // Stop animation\n        getXContestInterface().animation.unregisterCallback(\n          mapAnimatorUpdateCallback\n        );\n\n        // Unregister connection between GPS_ENABLED setting and geolocationMarker\n        getSetting(Settings.GPS_ENABLED).unregisterCallback(\n          geolocationMarkerStateUpdater\n        );\n\n        // Disable geolocationMarker\n        geolocationMarker.setMap(null);\n      };\n    }\n  }, [map, google]);\n\n  return (\n    <React.Fragment>\n      <Box\n        width=\"100%\"\n        height=\"100%\"\n        display={mapReady ? \"block\" : \"none\"}\n        ref={mapsRef}\n      ></Box>\n      <LoadingPage\n        message=\"Loading Maps ...\"\n        hideIf={mapReady || mapError}\n      ></LoadingPage>\n      <ErrorPage message=\"Unable to load map!\" hideIf={!mapError}></ErrorPage>\n    </React.Fragment>\n  );\n};\n\nexport default pure(LiveMap);\n","/**\n * @license geolocation-marker\n * @copyright 2012, 2015 Chad Killingsworth\n * @see https://github.com/ChadKillingsworth/geolocation-marker/blob/master/LICENSE.txt\n */\n\n/**\n * @name GeolocationMarker for Google Maps v3\n * @version version 1.1\n * @author Chad Killingsworth [chadkillingsworth at gmail.com]\n * Copyright 2012\n * @fileoverview\n * This library uses geolocation to add a marker and accuracy circle to a map.\n * The marker position is automatically updated as the user position changes.\n */\n\nexport function createGeolocationMarker(google, map) {\n  class GeolocationMarker extends google.maps.MVCObject {\n    /**\n     * @param {google.maps.Map=} opt_map\n     * @param {(google.maps.MarkerOptions|Object.<string>)=} opt_outerMarkerOpts\n     * @param {(google.maps.MarkerOptions|Object.<string>)=} opt_markerOpts\n     * @param {(google.maps.CircleOptions|Object.<string>)=} opt_circleOpts\n     */\n    constructor(opt_map, opt_outerMarkerOpts, opt_markerOpts, opt_circleOpts) {\n      super();\n\n      /**\n       * @private\n       * @type {google.maps.Marker}\n       */\n      this.outerMarker_ = null;\n\n      /**\n       * @private\n       * @type {google.maps.Marker}\n       */\n      this.marker_ = null;\n\n      /**\n       * @private\n       * @type {google.maps.Circle}\n       */\n      this.circle_ = null;\n\n      /**\n       * @private\n       * @type {number}\n       */\n      this.watchId_ = -1;\n\n      var outerMarkerOpts = {\n        clickable: false,\n        cursor: \"pointer\",\n        draggable: false,\n        flat: true,\n        icon: {\n          path: google.maps.SymbolPath.CIRCLE,\n          fillColor: \"#C8D6EC\",\n          fillOpacity: 0.7,\n          scale: 12,\n          strokeWeight: 0\n        },\n        position: new google.maps.LatLng(0, 0),\n        title: \"Current location\",\n        zIndex: 2\n      };\n\n      var markerOpts = {\n        clickable: false,\n        cursor: \"pointer\",\n        draggable: false,\n        flat: true,\n        icon: {\n          path: google.maps.SymbolPath.CIRCLE,\n          fillColor: \"#4285F4\",\n          fillOpacity: 1,\n          scale: 6,\n          strokeColor: \"white\",\n          strokeWeight: 2\n        },\n        // This marker may move frequently - don't force canvas tile redraw\n        optimized: false,\n        position: new google.maps.LatLng(0, 0),\n        title: \"Current location\",\n        zIndex: 3\n      };\n\n      if (opt_outerMarkerOpts) {\n        outerMarkerOpts = this.copyOptions_(\n          outerMarkerOpts,\n          opt_outerMarkerOpts\n        );\n      }\n\n      if (opt_markerOpts) {\n        markerOpts = this.copyOptions_(markerOpts, opt_markerOpts);\n      }\n\n      var circleOpts = {\n        clickable: false,\n        radius: 0,\n        strokeColor: \"1bb6ff\",\n        strokeOpacity: 0.4,\n        fillColor: \"61a0bf\",\n        fillOpacity: 0.4,\n        strokeWeight: 1,\n        zIndex: 1\n      };\n\n      if (opt_circleOpts) {\n        circleOpts = this.copyOptions_(circleOpts, opt_circleOpts);\n      }\n\n      this.outerMarker_ = new google.maps.Marker(outerMarkerOpts);\n      this.marker_ = new google.maps.Marker(markerOpts);\n      this.circle_ = new google.maps.Circle(circleOpts);\n\n      google.maps.MVCObject.prototype.set.call(this, \"accuracy\", null);\n      google.maps.MVCObject.prototype.set.call(this, \"position\", null);\n      google.maps.MVCObject.prototype.set.call(this, \"map\", null);\n\n      this.set(\"minimum_accuracy\", null);\n\n      this.set(\"position_options\" /** GeolocationPositionOptions */, {\n        enableHighAccuracy: true,\n        maximumAge: 1000\n      });\n\n      this.circle_.bindTo(\"map\", this.outerMarker_);\n      this.circle_.bindTo(\"map\", this.marker_);\n\n      if (opt_map) {\n        this.setMap(opt_map);\n      }\n    }\n\n    /**\n     * @override\n     * @param {string} key\n     * @param {*} value\n     */\n    set(key, value) {\n      if (GeolocationMarker.invalidPropertiesExpr_.test(key)) {\n        throw new Error(\"'\" + key + \"' is a read-only property.\");\n      } else if (key === \"map\") {\n        this.setMap(/** @type {google.maps.Map} */ (value));\n      } else {\n        google.maps.MVCObject.prototype.set.call(this, key, value);\n      }\n    }\n\n    /** @return {google.maps.Map} */\n    getMap() {\n      return /** @type {google.maps.Map|null} */ (this.get(\"map\"));\n    }\n\n    /** @return {GeolocationPositionOptions} */\n    getPositionOptions() {\n      return /** @type {GeolocationPositionOptions} */ (this.get(\n        \"position_options\"\n      ));\n    }\n\n    /** @param {!GeolocationPositionOptions|!Object.<string, *>} positionOpts */\n    setPositionOptions(positionOpts) {\n      this.set(\"position_options\", positionOpts);\n    }\n\n    /** @return {google.maps.LatLng|null} */\n    getPosition() {\n      return /** @type {google.maps.LatLng|null} */ (this.get(\"position\"));\n    }\n\n    /** @return {google.maps.LatLngBounds?} */\n    getBounds() {\n      if (this.get(\"position\")) {\n        return this.circle_.getBounds();\n      } else {\n        return null;\n      }\n    }\n\n    /** @return {number|null} */\n    getAccuracy() {\n      return /** @type {number|null} */ (this.get(\"accuracy\"));\n    }\n\n    /** @return {number|null} */\n    getMinimumAccuracy() {\n      return /** @type {number|null} */ (this.get(\"minimum_accuracy\"));\n    }\n\n    /** @param {number|null} accuracy */\n    setMinimumAccuracy(accuracy) {\n      this.set(\"minimum_accuracy\", accuracy);\n    }\n\n    /** @param {google.maps.Map|null} map */\n    setMap(map) {\n      google.maps.MVCObject.prototype.set.call(this, \"map\", map);\n      if (map) {\n        this.watchPosition_();\n      } else {\n        this.outerMarker_.unbind(\"position\");\n        this.marker_.unbind(\"position\");\n        this.circle_.unbind(\"center\");\n        this.circle_.unbind(\"radius\");\n        google.maps.MVCObject.prototype.set.call(this, \"accuracy\", null);\n        google.maps.MVCObject.prototype.set.call(this, \"position\", null);\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = -1;\n        this.outerMarker_.setMap(map);\n        this.marker_.setMap(map);\n      }\n    }\n\n    /** @param {google.maps.MarkerOptions|Object.<string>} outerMarkerOpts */\n    setOuterMarkerOptions(outerMarkerOpts) {\n      this.outerMarker_.setOptions(this.copyOptions_({}, outerMarkerOpts));\n    }\n\n    /** @param {google.maps.MarkerOptions|Object.<string>} markerOpts */\n    setMarkerOptions(markerOpts) {\n      this.marker_.setOptions(this.copyOptions_({}, markerOpts));\n    }\n\n    /** @param {google.maps.CircleOptions|Object.<string>} circleOpts */\n    setCircleOptions(circleOpts) {\n      this.circle_.setOptions(this.copyOptions_({}, circleOpts));\n    }\n\n    /**\n     * @private\n     * @param {GeolocationPosition} position\n     */\n    updatePosition_(position) {\n      var newPosition = new google.maps.LatLng(\n          position.coords.latitude,\n          position.coords.longitude\n        ),\n        mapNotSet = this.marker_.getMap() == null;\n\n      if (mapNotSet) {\n        if (\n          this.getMinimumAccuracy() != null &&\n          position.coords.accuracy > this.getMinimumAccuracy()\n        ) {\n          return;\n        }\n        this.outerMarker_.setMap(this.getMap());\n        this.marker_.setMap(this.getMap());\n        this.outerMarker_.bindTo(\"position\", this);\n        this.marker_.bindTo(\"position\", this);\n        this.circle_.bindTo(\"center\", this, \"position\");\n        this.circle_.bindTo(\"radius\", this, \"accuracy\");\n      }\n\n      if (this.getAccuracy() !== position.coords.accuracy) {\n        // The local set method does not allow accuracy to be updated\n        google.maps.MVCObject.prototype.set.call(\n          this,\n          \"accuracy\",\n          position.coords.accuracy\n        );\n      }\n\n      if (\n        mapNotSet ||\n        this.getPosition() == null ||\n        !this.getPosition().equals(newPosition)\n      ) {\n        // The local set method does not allow position to be updated\n        google.maps.MVCObject.prototype.set.call(this, \"position\", newPosition);\n      }\n    }\n\n    /**\n     * @private\n     */\n    watchPosition_() {\n      if (navigator.geolocation) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.updatePosition_.bind(this),\n          this.geolocationError_.bind(this),\n          this.getPositionOptions()\n        );\n      }\n    }\n\n    /**\n     * @private\n     * @param {GeolocationPositionError} data\n     */\n    geolocationError_(data) {\n      google.maps.event.trigger(this, \"geolocation_error\", data);\n    }\n\n    /**\n     * @private\n     * @param {Object.<string,*>} target\n     * @param {Object.<string,*>} source\n     * @return {Object.<string,*>}\n     */\n    copyOptions_(target, source) {\n      for (var opt in source) {\n        if (GeolocationMarker.DISALLOWED_OPTIONS[opt] !== true) {\n          target[opt] = source[opt];\n        }\n      }\n      return target;\n    }\n  }\n\n  /**\n   * @const\n   * @type {Object.<string, boolean>}\n   */\n  GeolocationMarker.DISALLOWED_OPTIONS = {\n    map: true,\n    position: true,\n    radius: true\n  };\n\n  /**\n   * @private\n   * @const\n   */\n  GeolocationMarker.invalidPropertiesExpr_ = /^(?:position|accuracy)$/i;\n\n  //export default GeolocationMarker;\n  return new GeolocationMarker(map);\n}\n","const ourHistory = [];\n\nwindow.addEventListener(\n  \"popstate\",\n  () => {\n    if (ourHistory.length === 0) {\n      console.warn(\"History was already 0!\");\n    }\n    const callback = ourHistory.pop();\n    console.debug(\"- History size:\", ourHistory.length);\n    if (ourHistory.length > 0) window.history.pushState({}, \"\");\n    if (callback) callback();\n  },\n  { passive: true }\n);\n\nexport const useHistory = () => {\n  const pushFunction = cb => {\n    const histSize = ourHistory.length;\n    ourHistory.push(cb);\n    console.debug(\"+ History size:\", ourHistory.length);\n    if (histSize === 0) {\n      window.history.pushState({}, \"\");\n    }\n  };\n\n  const popFunction = () => {\n    //console.log(\"window.history.back()\", window.history.length);\n    window.history.back();\n  };\n\n  return { push: pushFunction, pop: popFunction };\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Dialog } from \"@material-ui/core\";\nimport { useHistory } from \"../common/History\";\n\n// The difficult here is to fire exactly one history.back() for any case.\n// Cases:\n// - \"open\" changes to 'false'\n// - \"Dialog.onClose()\" => same as previous, as can be forwarded\n// - History gets reverted\n\nconst SubWindow = props => {\n  const [open, _setOpen] = useState(false);\n  const [historyOpen, _setHistoryOpen] = useState(false);\n  const history = useHistory();\n\n  const openWindow = () => {\n    // TODO create history entry\n    history.push(() => {\n      _setOpen(false);\n      props.onClose();\n    });\n    _setOpen(true);\n    _setHistoryOpen(true);\n  };\n\n  // If we should be open, initiate a window opening.\n  // Special case: if we just closed the window, don't immediately re-open it,\n  // but signal the parent class to close instead.\n  if (props.open && !open) {\n    if (historyOpen) {\n      // This creates an endless feedback loop if props.onClose doesn't set\n      // props.open to false. Therefore we require props.onClose to do so.\n      props.onClose();\n\n      // To further prevent the feedback loop, we now set the history open state.\n      // Now, if props.onClose failed to set props.open to false, the window\n      // will immediately re-open.\n      // Currently commented out, because it proved unstable and caused state\n      // fluctuations.\n      //_setHistoryOpen(false);\n    } else {\n      openWindow();\n    }\n  }\n\n  // If both the external and internal state agree that the window is now close,\n  // reset the history state. The history state prevents the window\n  // from immediately re-opening if the external and internal states disagree.\n  if (historyOpen && !open && !props.open) {\n    _setHistoryOpen(false);\n  }\n\n  // If we are open, the history entry still exists.\n  // Therefore, go back in history if we get signalled to close.\n  if (open && !props.open) {\n    history.pop();\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => {\n        props.onClose();\n      }}\n      fullScreen={props.fullScreen}\n      maxWidth={props.maxWidth}\n      fullWidth={props.fullWidth}\n      classes={props.classes}\n    >\n      {props.children}\n    </Dialog>\n  );\n};\n\nexport default SubWindow;\n","export const getRotationStyle = bearing => {\n  const transform = \"rotate(\" + bearing.toString() + \"deg)\";\n\n  const rotationStyle = {\n    transform: transform,\n\n    /* Safari */\n    WebkitTransform: transform,\n\n    /* Firefox */\n    MozTransform: transform,\n\n    /* IE */\n    msTransform: transform,\n\n    /* Opera */\n    OTransform: transform\n  };\n  return rotationStyle;\n};\n","import React from \"react\";\nimport { getGPSProvider } from \"../services/GPSProvider\";\nimport { getDistance, getRhumbLineBearing } from \"geolib\";\nimport { getRotationStyle } from \"./Rotation\";\n\nfunction formatTimeDiff(millis) {\n  let negative = \"\";\n\n  if (millis < 0) {\n    millis = -millis;\n    negative = \"-\";\n  }\n\n  let secs = Math.floor(millis / 1000);\n  if (secs < 90) {\n    return negative + secs + \" sec\";\n  }\n\n  let mins = Math.floor(secs / 60);\n  if (mins < 60) {\n    return negative + mins + \" min\";\n  }\n\n  let hours = Math.floor(mins / 60);\n  mins = mins - hours * 60;\n  if (hours < 24) {\n    return negative + hours + \":\" + mins.toString().padStart(2, \"0\") + \" h\";\n  }\n\n  let days = Math.floor(hours / 24);\n  hours = hours - days * 24;\n  return (\n    negative +\n    days +\n    \"d \" +\n    hours +\n    \":\" +\n    mins.toString().padStart(2, \"0\") +\n    \" h\"\n  );\n}\n\nfunction timestampToTimeString(timestamp) {\n  let time = new Date(timestamp);\n  return time.toLocaleTimeString();\n}\n\nexport class LastFixState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.msgRef = React.createRef();\n  }\n\n  getMessage = ({ timestamp, endOfTrack, landed, relative, showLastFix }) => {\n    if (timestamp == null) {\n      return [\"\", \"never\"];\n    }\n    let time_diff = new Date(timestamp).getTime() - Date.now();\n\n    let timeStr = \"\";\n    if (relative) timeStr = formatTimeDiff(time_diff);\n    else timeStr = timestampToTimeString(timestamp);\n\n    if (endOfTrack && landed) {\n      return [\"#346B8F\", \"\\u2714 \" + timeStr];\n    }\n\n    if (-time_diff < 120000 && !endOfTrack) {\n      if (relative)\n        if (showLastFix) return [\"green\", \"\\u26ab LIVE (\" + timeStr + \")\"];\n        else return [\"green\", \"\\u26ab LIVE\"];\n      else return [\"green\", \"\\u26ab \" + timeStr];\n    }\n\n    if (relative) return [\"red\", \"! LIVE (\" + timeStr + \")\"];\n    else return [\"red\", \"! \" + timeStr];\n  };\n\n  shallowRerender = props => {\n    if (this.msgRef.current !== null) {\n      const msgSpan = this.msgRef.current;\n      const [color, message] = this.getMessage(props);\n      Object.assign(msgSpan.style, { color: color });\n\n      if (msgSpan.innerHTML !== message) {\n        msgSpan.innerHTML = message;\n      }\n    }\n  };\n\n  render() {\n    const [color, message] = this.getMessage(this.props);\n    return (\n      <span style={{ color: color }} ref={this.msgRef}>\n        {message}\n      </span>\n    );\n  }\n}\n\nexport class LastFixArrow extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.gpsData = getGPSProvider().getData();\n\n    this.distanceRef = React.createRef();\n    this.arrowRef = React.createRef();\n    this.lastFix = this.props.lastFix;\n  }\n\n  onNewGPSDataReceived = gpsData => {\n    this.gpsData = gpsData;\n\n    // Directly update through the refs\n    this.updateThroughRef();\n  };\n\n  componentDidMount() {\n    getGPSProvider().registerCallback(this.onNewGPSDataReceived);\n  }\n  componentWillUnmount() {\n    getGPSProvider().unregisterCallback(this.onNewGPSDataReceived);\n  }\n\n  setFix = newFix => {\n    this.lastFix = newFix;\n\n    // Directly update through the refs\n    this.updateThroughRef();\n  };\n\n  updateThroughRef = () => {\n    if (this.arrowRef.current) {\n      const arrowStyle = LastFixArrow.getArrowRotationStyle(\n        this.gpsData,\n        this.lastFix\n      );\n      Object.assign(this.arrowRef.current.style, arrowStyle);\n    }\n    if (this.distanceRef.current) {\n      const newDistance = LastFixArrow.getDistance(this.gpsData, this.lastFix);\n      if (newDistance !== this.distanceRef.current.innerHTML)\n        this.distanceRef.current.innerHTML = newDistance;\n    }\n  };\n\n  static getDistance(myPosition, pilotFix) {\n    if (myPosition === null || pilotFix === null) return \"--km\";\n\n    const distance = getDistance(\n      { lat: myPosition.coords.latitude, lng: myPosition.coords.longitude },\n      pilotFix\n    );\n    return (Math.round(distance / 100) / 10).toString() + \"km\";\n  }\n\n  static getArrowRotationStyle(myPosition, pilotFix) {\n    if (myPosition === null || pilotFix === null) return getRotationStyle(0);\n    const bearing = getRhumbLineBearing(\n      { lat: myPosition.coords.latitude, lng: myPosition.coords.longitude },\n      pilotFix\n    );\n    return getRotationStyle(bearing);\n  }\n\n  render() {\n    this.lastFix = this.props.lastFix;\n    return (\n      <React.Fragment>\n        <span ref={this.distanceRef}>\n          {LastFixArrow.getDistance(this.gpsData, this.lastFix)}\n        </span>{\" \"}\n        <div\n          ref={this.arrowRef}\n          style={{\n            display: \"inline-block\",\n            ...LastFixArrow.getArrowRotationStyle(this.gpsData, this.lastFix)\n          }}\n        >\n          ↑\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { TableCell, Typography, Box } from \"@material-ui/core\";\nimport { LastFixState, LastFixArrow } from \"../../util/LastFixState\";\n\nexport const headerHeight = 37;\nexport const rowHeight = 57;\n\nexport const TableHeader = () => {\n  return (\n    <TableCell\n      component=\"div\"\n      variant=\"head\"\n      className=\"MuiTableCell-stickyHeader\"\n      style={{\n        height: headerHeight,\n        display: \"flex\",\n        alignItems: \"center\",\n        boxSizing: \"border-box\"\n      }}\n    >\n      <div style={{ flex: \"1\" }}>Name</div>\n      <div style={{ width: \"25%\", textAlign: \"right\" }}>State</div>\n      <div style={{ width: \"27%\", textAlign: \"right\" }}>Country</div>\n    </TableCell>\n  );\n};\n\nclass PilotSelectorListRow extends React.PureComponent {\n  render() {\n    const {\n      fullname,\n      username,\n      lastFix,\n      timestamp,\n      landed,\n      iso,\n      disabled\n    } = this.props;\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          boxSizing: \"border-box\",\n          filter: disabled ? \"grayscale(100%) opacity(30%)\" : undefined\n        }}\n      >\n        <Box flex=\"1\" paddingLeft={1} paddingTop={1} paddingBottom={1}>\n          <Typography variant=\"body2\">{fullname}</Typography>\n          <Typography\n            variant=\"caption\"\n            color=\"textSecondary\"\n            style={{ paddingLeft: \".5em\" }}\n          >\n            [{username}]\n          </Typography>\n        </Box>\n        <div style={{ width: \"25%\", textAlign: \"right\" }}>\n          <div>\n            <Typography variant=\"caption\">\n              <LastFixState\n                timestamp={timestamp}\n                landed={landed}\n                endOfTrack={landed}\n                relative\n              />\n            </Typography>\n          </div>\n          <div>\n            <Typography variant=\"caption\">\n              <LastFixArrow lastFix={lastFix} />\n            </Typography>\n          </div>\n        </div>\n        <div style={{ width: \"27%\", textAlign: \"right\" }}>\n          <Box paddingRight={1} paddingLeft={1}>\n            {iso}\n            <Box\n              fontSize=\"large\"\n              marginLeft=\"4px\"\n              boxShadow={1}\n              style={{ verticalAlign: \"middle\" }}\n              className={\"flag-icon flag-icon-\" + iso.toLowerCase()}\n            ></Box>\n          </Box>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const renderRow = ({ data, index, style }) => {\n  const pilotId = data.keys[index];\n  const pilotData = data.data[pilotId];\n\n  const fullname = pilotData ? pilotData.info.user.fullname : \"Offline User\";\n  const username = pilotData ? pilotData.info.user.username : pilotId;\n  const lastFix = pilotData ? pilotData.lastFix : null;\n  const timestamp = pilotData ? pilotData.lastFix.timestamp : null;\n  const landed = pilotData ? pilotData.landed : null;\n  const iso = pilotData ? pilotData.info.user.nationality.iso : \"--\";\n  const selected = data.selected.indexOf(pilotId) !== -1;\n  const disabled = data.alreadyAdded.indexOf(pilotId) !== -1;\n\n  return (\n    <TableCell\n      component=\"div\"\n      variant=\"body\"\n      padding=\"none\"\n      style={{\n        ...style,\n        backgroundColor:\n          selected && !disabled ? \"rgba(0, 0, 0, 0.04)\" : undefined\n      }}\n      onClick={() => {\n        if (!disabled) data.onPilotClicked(pilotId);\n      }}\n    >\n      <PilotSelectorListRow\n        fullname={fullname}\n        username={username}\n        lastFix={lastFix}\n        timestamp={timestamp}\n        landed={landed}\n        iso={iso}\n        disabled={disabled}\n      />\n    </TableCell>\n  );\n};\n","import React from \"react\";\n\nimport { CircularProgress } from \"@material-ui/core\";\n\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\n\nimport { arraysEqual } from \"../../util/CompareArrays\";\nimport { getGPSProvider } from \"../../services/GPSProvider\";\nimport { getDistance } from \"geolib\";\nimport { renderRow, TableHeader, rowHeight } from \"./PilotSelectorListRenderer\";\nimport { FixedSizeList } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nconst filterPilotList = (pilotList, pilotInfos, search) => {\n  const matchesSearch = name => {\n    if (search === \"\") {\n      return true;\n    }\n    return name.toLowerCase().includes(search.toLowerCase());\n  };\n\n  // Create virtual pilot if nobody found\n  let filteredPilots = pilotList.filter(pilotId => {\n    return (\n      matchesSearch(pilotInfos[pilotId].info.user.username) ||\n      matchesSearch(pilotInfos[pilotId].info.user.fullname)\n    );\n  });\n\n  // Add dummy pilot if list is empty and search string is valid\n  if (filteredPilots.length === 0 && !/\\s/.test(search) && search.length > 0) {\n    filteredPilots.push(search);\n  }\n\n  return filteredPilots;\n};\n\nconst sortPilotList = (pilotInfos, gps) => {\n  if (gps) {\n    // If gps, sort by distance\n    const myPos = { lat: gps.coords.latitude, lng: gps.coords.longitude };\n    let distances = Object.entries(pilotInfos).map(([pilotId, data]) => {\n      const distance = getDistance(myPos, data.lastFix);\n      return [pilotId, distance];\n    });\n    distances.sort((el1, el2) => el1[1] - el2[1]);\n    const pilotIds = distances.map(el => el[0]);\n    return pilotIds;\n  } else {\n    // Else, sort by name\n    let pilotIds = Object.keys(pilotInfos);\n    pilotIds.sort();\n    return pilotIds;\n  }\n};\n\n// The list content\nexport default class PilotSelectorList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { didMount: false };\n    this.gpsData = getGPSProvider().getData();\n    const pilotInfos = getXContestInterface().pilotInfos.getValue();\n    this.state = {\n      pilotInfos: pilotInfos,\n      sortedPilotList: sortPilotList(pilotInfos, this.gpsData)\n    };\n  }\n\n  startRendering = () => {\n    this.setState(state => ({ ...state, didMount: true }));\n  };\n\n  componentDidMount() {\n    getXContestInterface().pilotInfos.registerCallback(this.onNewPilotInfos);\n    getGPSProvider().registerCallback(this.onNewGpsData);\n\n    // This starts the actual rendering, as it can take quite a while.\n    // setTimeout forces the browser to present before loading the table.\n    // without setTimeout, the waiting symbol would never be shown.\n    setTimeout(this.startRendering);\n  }\n\n  componentWillUnmount() {\n    getXContestInterface().pilotInfos.unregisterCallback(this.onNewPilotInfos);\n    getGPSProvider().unregisterCallback(this.onNewGpsData);\n  }\n\n  updatePilotListIfNecessary = () => {\n    const newPilotList = sortPilotList(this.state.pilotInfos, this.gpsData);\n\n    if (!arraysEqual(this.state.sortedPilotList, newPilotList))\n      this.setState(state => ({ ...state, sortedPilotList: newPilotList }));\n  };\n\n  onNewGpsData = gpsData => {\n    // update only if gps position changed pilot list\n    this.gpsData = gpsData;\n    this.updatePilotListIfNecessary();\n  };\n\n  onNewPilotInfos = pilotInfos => {\n    // Always update on new pilot infos\n    this.setState(state => ({\n      ...state,\n      pilotInfos: pilotInfos,\n      sortedPilotList: sortPilotList(pilotInfos, this.gpsData)\n    }));\n  };\n\n  onPilotClicked = pilotId => {\n    if (this.props.onPilotClicked) this.props.onPilotClicked(pilotId);\n  };\n\n  render() {\n    if (!this.state.didMount) {\n      return (\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            overflow: \"hidden\"\n          }}\n        >\n          <CircularProgress disableShrink style={{ margin: \"2em\" }} />\n        </div>\n      );\n    }\n\n    const displayedPilots = filterPilotList(\n      this.state.sortedPilotList,\n      this.state.pilotInfos,\n      this.props.search\n    );\n\n    return (\n      <React.Fragment>\n        <TableHeader />\n        <div style={{ flex: \"1\" }}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <FixedSizeList\n                width={width}\n                height={height}\n                itemCount={displayedPilots.length}\n                itemSize={rowHeight}\n                itemData={{\n                  keys: displayedPilots,\n                  data: this.state.pilotInfos,\n                  selected: this.props.selected,\n                  alreadyAdded: this.props.alreadyAdded,\n                  onPilotClicked: this.onPilotClicked\n                }}\n                itemKey={(index, { keys }) => keys[index]}\n              >\n                {renderRow}\n              </FixedSizeList>\n            )}\n          </AutoSizer>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","// attach the .equals method to Array's prototype to call it on any array\nexport function arraysEqual(array1, array2) {\n  // if the other array is a falsy value, return\n  if (!array1 || !array2) return false;\n\n  // compare lengths - can save a lot of time\n  if (array1.length !== array2.length) return false;\n\n  for (var i = 0, l = array1.length; i < l; i++) {\n    /*// Check if we have nested arrays\n    if (array1[i] instanceof Array && array2[i] instanceof Array) {\n      // recurse into the nested arrays\n      if (!array1[i].equals(array2[i])) return false;\n    } else */\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","import React from \"react\";\nimport {\n  Box,\n  useMediaQuery,\n  useTheme,\n  Typography,\n  Toolbar\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport { Button, DialogActions, TextField } from \"@material-ui/core\";\n\nimport SubWindow from \"../../util/SubWindow\";\nimport PilotSelectorList from \"./PilotSelectorList\";\nimport { pure } from \"recompose\";\n\nconst useStyles = makeStyles({\n  fullHeightWindow: {\n    height: \"100%\"\n  }\n});\n\n// Base window, without the table\nconst PilotSelector = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  // State\n  const [selected, setSelected] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const numSelected = selected.length;\n\n  const closeWindow = () => {\n    // Reset state\n    setSearch(\"\");\n    setSelected([]);\n    props.onClose();\n  };\n\n  const pilotClicked = name => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  return (\n    <SubWindow\n      open={props.open}\n      onClose={closeWindow}\n      fullScreen={fullScreen}\n      maxWidth=\"xs\"\n      fullWidth={true}\n      classes={{ paper: classes.fullHeightWindow }}\n    >\n      <Toolbar\n        style={\n          numSelected === 0\n            ? {}\n            : theme.palette.type === \"light\"\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark\n              }\n        }\n      >\n        {numSelected > 0 ? (\n          <Typography component=\"div\" color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography component=\"div\" variant=\"h6\" id=\"tableTitle\">\n            Add new pilots:\n          </Typography>\n        )}\n      </Toolbar>\n      <Box paddingLeft=\"1em\" paddingRight=\"1em\" paddingTop=\"4px\">\n        <TextField\n          //autoFocus\n          margin=\"dense\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n          id=\"search_field\"\n          label=\"Search\"\n          type=\"search\"\n          fullWidth\n          onChange={event => setSearch(event.target.value)}\n        />\n      </Box>\n      <Box\n        flex=\"1 1 auto\"\n        marginY=\"8px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"stretch\"\n      >\n        <PilotSelectorList\n          alreadyAdded={props.alreadyAdded}\n          selected={selected}\n          onPilotClicked={pilotClicked}\n          search={search}\n        />\n      </Box>\n      <DialogActions>\n        <Button onClick={closeWindow} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          disabled={numSelected === 0}\n          onClick={() => {\n            props.onAddPilots(selected);\n            closeWindow();\n          }}\n          color=\"primary\"\n        >\n          Add\n        </Button>\n      </DialogActions>\n    </SubWindow>\n  );\n};\n\nexport default pure(PilotSelector);\n","const longPressDuration =\n  navigator.platform.indexOf(\"iPhone\") !== -1 ||\n  navigator.platform.indexOf(\"iPad\") !== -1 ||\n  navigator.platform.indexOf(\"iPod\") !== -1\n    ? 400\n    : 1000;\n\nexport default class ContextMenuHandler {\n  constructor(callback) {\n    this.callback = callback;\n    this.longPressCountdown = null;\n    this.contextMenuPossible = false;\n  }\n\n  onTouchStart = e => {\n    console.log(this.toString(), \"onTouchStart\");\n    this.contextMenuPossible = true;\n\n    const touch = e.touches[0];\n\n    this.longPressCountdown = setTimeout(() => {\n      this.contextMenuPossible = false;\n      this.callback(touch);\n      console.log(this.toString(), \"CONTEXT_MENU\");\n    }, longPressDuration);\n  };\n\n  onTouchMove = e => {\n    console.log(this.toString(), \"onTouchMove\");\n    clearTimeout(this.longPressCountdown);\n  };\n\n  onTouchCancel = e => {\n    console.log(this.toString(), \"onTouchCancel\");\n    this.contextMenuPossible = false;\n    clearTimeout(this.longPressCountdown);\n  };\n\n  onTouchEnd = e => {\n    console.log(this.toString(), \"onTouchEnd\");\n    this.contextMenuPossible = false;\n    clearTimeout(this.longPressCountdown);\n  };\n\n  onContextMenu = e => {\n    console.log(this.toString(), \"onContextMenu\");\n    this.contextMenuPossible = false;\n\n    clearTimeout(this.longPressCountdown);\n\n    this.callback(e);\n    e.preventDefault();\n  };\n}\n","import React from \"react\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\n\nexport class ElevationHistogram extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.maxValueRef = React.createRef();\n    this.minValueRef = React.createRef();\n\n    this.HEIGHT_MARGIN = 50;\n    this.HEIGHT_STEPS = 100;\n    this.COLOR_SKY = \"#aac7ff\";\n    //this.COLOR_GROUND = \"#f2b485\";\n    this.COLOR_GROUND = \"#92b465\";\n    this.COLOR_PILOT = \"#e11\";\n\n    this.lastRenderedTimestamp = 0;\n  }\n\n  prepareCanvasAndComputeLimits = (canvas, pilotData) => {\n    const dpr = window.devicePixelRatio || 1;\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n\n    // If landed, display the elevation histogram of the entire flight\n    if (pilotData.landed && pilotData.track.length > 0) {\n      const finalTimestamp = pilotData.lastPotentialAirTime;\n      const beginningTimestamp = pilotData.track[0].timestamp;\n      return Math.max(1, finalTimestamp - beginningTimestamp);\n    }\n\n    // Return number of minutes to be included in the histogram\n    return 15 * 60;\n  };\n\n  renderCanvas = (\n    canvas,\n    track,\n    minValue,\n    maxValue,\n    timeFrame,\n    currentTime,\n    currentElevation\n  ) => {\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width;\n    const height = canvas.height;\n\n    const getCoord = (time, elevation) => {\n      const x = width * (1 - (currentTime - time) / timeFrame);\n      const y = height * (1 - (elevation - minValue) / (maxValue - minValue));\n      return [x, y];\n    };\n\n    const [, lastKnownElevationY] = getCoord(0, currentElevation);\n\n    let ctx = canvas.getContext(\"2d\", {\n      alpha: false,\n    });\n\n    // paint ground\n    ctx.fillStyle = this.COLOR_GROUND;\n    ctx.fillRect(0, 0, width, height);\n\n    // paint sky\n    ctx.fillStyle = this.COLOR_SKY;\n    ctx.strokeStyle = this.COLOR_PILOT;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(width, 0);\n    ctx.lineTo(width, lastKnownElevationY);\n    let currentY = lastKnownElevationY;\n    for (let i = track.length - 1; i >= 0; i--) {\n      const data = track[i];\n      if (data.timestamp < currentTime - timeFrame) break;\n\n      const [x, y] = getCoord(data.timestamp, data.elevation);\n      ctx.lineTo(x, y);\n\n      currentY = y;\n    }\n    ctx.lineTo(0, currentY);\n    ctx.fill();\n\n    // paint path\n    ctx.lineWidth = 2 * dpr;\n    ctx.lineJoin = \"round\";\n    ctx.lineCap = \"round\";\n    ctx.beginPath();\n    for (let i = track.length - 1; i >= 0; i--) {\n      const data = track[i];\n      if (data.timestamp < currentTime - timeFrame) break;\n\n      const [x, y] = getCoord(data.timestamp, data.altitude);\n      if (i === track.length - 1) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.stroke();\n  };\n\n  shallowRerender = (data) => {\n    if (!(this.props.pilot in data)) return;\n    if (this.canvasRef.current === null) return;\n    const canvas = this.canvasRef.current;\n\n    // Perpare data\n    const pilotData = data[this.props.pilot];\n    const track = pilotData.track;\n    const currentElevation = pilotData.elevation;\n    const currentTime = pilotData.lastPotentialAirTime;\n\n    // Only update once per second\n    if (this.lastRenderedTimestamp === currentTime) return;\n    this.lastRenderedTimestamp = currentTime;\n\n    // Get current height, as a starting point\n    const currentHeight =\n      pilotData.gpsAlt !== null ? pilotData.gpsAlt : pilotData.baroAlt;\n    if (currentHeight === null) return;\n\n    // Prepare canvas and compute timeframe\n    const timeFrame = this.prepareCanvasAndComputeLimits(canvas, pilotData);\n\n    // Compute max/min value\n    let minValue = currentElevation;\n    let maxValue = currentHeight;\n    for (let i = track.length - 1; i >= 0; i--) {\n      const data = track[i];\n      if (data.timestamp < currentTime - timeFrame) break;\n\n      minValue = Math.min(minValue, data.elevation);\n      maxValue = Math.max(maxValue, data.altitude);\n    }\n    maxValue += this.HEIGHT_MARGIN;\n    minValue -= this.HEIGHT_MARGIN;\n    maxValue = this.HEIGHT_STEPS * Math.ceil(maxValue / this.HEIGHT_STEPS);\n    minValue = this.HEIGHT_STEPS * Math.floor(minValue / this.HEIGHT_STEPS);\n\n    // Render canvas\n    this.renderCanvas(\n      canvas,\n      track,\n      minValue,\n      maxValue,\n      timeFrame,\n      currentTime,\n      currentElevation\n    );\n\n    // Update numbers\n    if (this.maxValueRef.current !== null) {\n      this.maxValueRef.current.textContent = maxValue.toString();\n    }\n    if (this.minValueRef.current !== null) {\n      this.minValueRef.current.textContent = minValue.toString();\n    }\n  };\n\n  onNewAnimationData = (data) => {\n    this.shallowRerender(data);\n  };\n\n  componentDidMount = () => {\n    this.shallowRerender(getXContestInterface().animation.getData());\n    getXContestInterface().animation.registerCallback(this.onNewAnimationData);\n  };\n  componentDidUpdate = () => {\n    this.shallowRerender(getXContestInterface().animation.getData());\n  };\n  componentWillUnmount() {\n    getXContestInterface().animation.unregisterCallback(\n      this.onNewAnimationData\n    );\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          alignItems: \"stretch\",\n        }}\n      >\n        <div\n          style={{\n            flex: \"0 0 auto\",\n            width: \"4em\",\n            paddingRight: \".2em\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n            alignItems: \"flex-end\",\n          }}\n        >\n          <div\n            ref={this.maxValueRef}\n            style={{ fontSize: \".8em\", marginTop: \"-.7em\" }}\n          />\n          <div\n            ref={this.minValueRef}\n            style={{ fontSize: \".8em\", marginBottom: \"-.75em\" }}\n          />\n        </div>\n        <div\n          style={{\n            flex: \"1 1 0\",\n            overflow: \"hidden\",\n            position: \"relative\",\n          }}\n          ref={this.canvasParentRef}\n        >\n          <canvas\n            ref={this.canvasRef}\n            style={{\n              position: \"absolute\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          ></canvas>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  Typography,\n  ExpansionPanelDetails,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\nimport { getGPSProvider } from \"../../services/GPSProvider\";\nimport { LastFixState, LastFixArrow } from \"../../util/LastFixState\";\nimport { getPilotIcon, getPilotIconColor } from \"../../common/PilotIcon\";\nimport { styled, withStyles } from \"@material-ui/styles\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\nimport FlagIcon from \"@material-ui/icons/Flag\";\nimport { getRotationStyle } from \"../../util/Rotation\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\nimport ContextMenuHandler from \"../../util/ContextMenuHandler\";\nimport { parseTime } from \"../../location_provider/XContest/FlightAnimationData\";\nimport { ElevationHistogram } from \"./ElevationHistogram\";\n\nconst FirstRowLeft = styled(Typography)({ overflow: \"hidden\", flex: \"1\" });\n\nconst FirstRowRight = styled(Typography)({\n  marginRight: \".2em\",\n  marginLeft: \".5em\",\n});\n\nconst SecondRow = styled(Typography)({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  paddingLeft: \".5em\",\n});\n\nconst PilotExpansionPanelSummary = withStyles({\n  root: {\n    paddingLeft: \"12px\",\n  },\n  content: {\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    whiteSpace: \"nowrap\",\n  },\n})(ExpansionPanelSummary);\n\nconst PilotExpansionPanelDetails = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"stretch\",\n    justifyContent: \"space-between\",\n    MozUserSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    msUserSelect: \"none\",\n  },\n})(ExpansionPanelDetails);\n\nconst DetailsStats = styled(Typography)({\n  flex: \"1 0 0\",\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  flexDirection: \"column\",\n  alignItems: \"flex-start\",\n  paddingRight: \"1em\",\n});\n\nconst DetailsGraph = styled(Typography)({\n  flex: \"2 1 0\",\n  display: \"flex\",\n});\n\nconst DetailsRow = styled(Typography)({\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"center\",\n  whiteSpace: \"nowrap\",\n});\n\nconst DetailTimerIcon = withStyles({\n  root: {\n    paddingRight: \".2em\",\n    width: \".6em\",\n    height: \".6em\",\n  },\n})(TimerIcon);\nconst DetailDistanceIcon = withStyles({\n  root: {\n    paddingRight: \".2em\",\n    width: \".6em\",\n    height: \".6em\",\n  },\n})(DoubleArrowIcon);\nconst DetailLaunchIcon = withStyles({\n  root: {\n    paddingRight: \".2em\",\n    width: \".6em\",\n    height: \".6em\",\n  },\n})(FlagIcon);\n\nclass AnimatedPilotListEntry extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    // Get initial data\n    this.gpsData = getGPSProvider().getData();\n    this.pilotColor = getPilotIconColor(this.props.pilotId);\n\n    // Get initial pilotinfo\n    this.state = {\n      launchSite: null,\n      launchTime: null,\n      scoreDistance: null,\n      scoreType: null,\n    };\n    Object.assign(\n      this.state,\n      this.stateChangesFromPilotInfos(\n        this.state,\n        getXContestInterface().getPilotInfos()\n      )\n    );\n\n    // References\n    this.lastFixRef = React.createRef();\n    this.heightRef = React.createRef();\n    this.liveStateRef = React.createRef();\n    this.iconRef = React.createRef();\n    this.flightDurationRef = React.createRef();\n\n    this.contextMenuHandler = new ContextMenuHandler((e) => {\n      this.props.onContextMenuHandler(\n        this.props.pilotId,\n        {\n          left: e.pageX,\n          top: e.pageY,\n        },\n        this.pilotProps\n      );\n    });\n  }\n\n  //////////////////////////////////////////////////////////////\n  /// BOILERPLATE CODE FOR UPDATING THE COMPONENT\n  ///\n  extractImportantProps = (pilotInfo) => {\n    return {\n      height: pilotInfo.gpsAlt !== null ? pilotInfo.gpsAlt : pilotInfo.baroAlt,\n      elevation: pilotInfo.elevation,\n      vario: pilotInfo.baroVario,\n      startOfTrack: pilotInfo.startOfTrack,\n      endOfTrack: pilotInfo.endOfTrack,\n      landed: pilotInfo.landed,\n      newestDataTimestamp: pilotInfo.newestDataTimestamp,\n      lat: pilotInfo.pos.lat,\n      lng: pilotInfo.pos.lng,\n      velocityLat:\n        pilotInfo.velocityVec === null ? null : pilotInfo.velocityVec.lat,\n      velocityLng:\n        pilotInfo.velocityVec === null ? null : pilotInfo.velocityVec.lng,\n      velocity: pilotInfo.velocity,\n      lastPotentialAirTime: pilotInfo.lastPotentialAirTime,\n    };\n  };\n\n  propsChanged = (newProps) => {\n    const oldProps = this.pilotProps;\n    for (let p in oldProps) {\n      if (!(p in newProps)) return true;\n    }\n    for (let p in newProps) {\n      if (!(p in oldProps)) return true;\n      if (oldProps[p] !== newProps[p]) return true;\n    }\n    return false;\n  };\n\n  onNewGPSDataReceived = (gpsData) => {\n    this.gpsData = gpsData;\n  };\n\n  onNewDataReceived = (pilotData) => {\n    if (!(this.props.pilotId in pilotData)) return;\n\n    const pilotInfo = pilotData[this.props.pilotId];\n    const newPilotProps = this.extractImportantProps(pilotInfo);\n\n    // Run shallow update without touching React\n    if (this.propsChanged(newPilotProps)) {\n      this.pilotProps = newPilotProps;\n      this.shallowRerender(true);\n    } else {\n      // If props didn't change, rerender anyways to update time stamps and time-dependent data\n      this.shallowRerender(false);\n    }\n  };\n\n  onNewPilotInfos = (infos) => {\n    const stateChanges = this.stateChangesFromPilotInfos(this.state, infos);\n    if (Object.keys(stateChanges).length !== 0) {\n      this.setState(stateChanges);\n    }\n  };\n\n  stateChangesFromPilotInfos = (oldState, allInfos) => {\n    const stateChanges = {};\n\n    const processInfo = (name, value) => {\n      if (name in oldState && oldState[name] === value) {\n        return;\n      }\n      stateChanges[name] = value;\n    };\n\n    if (this.props.pilotId in allInfos) {\n      const infos = allInfos[this.props.pilotId];\n\n      processInfo(\"launchSite\", infos.info.launch);\n      processInfo(\"launchTime\", parseTime(infos.info.launchPoint.timestamp));\n\n      if (\"contest\" in infos && \"score\" in infos.contest) {\n        const score = infos.contest.score;\n        if (score.distance != null)\n          processInfo(\"scoreDistance\", score.distance.toFixed(1));\n        if (\"type\" in score) {\n          processInfo(\"scoreType\", score.type.tag);\n        }\n      }\n    }\n    return stateChanges;\n  };\n\n  shallowRerender = (propsChanged) => {\n    // Update height\n    if (this.heightRef.current !== null && propsChanged) {\n      const newHeight = AnimatedPilotListEntry.renderHeight(this.pilotProps);\n      if (newHeight !== this.heightRef.current.innerHTML)\n        this.heightRef.current.innerHTML = newHeight;\n    }\n\n    // Update distance and direction\n    if (this.lastFixRef.current !== null && propsChanged) {\n      this.lastFixRef.current.setFix({\n        lat: this.pilotProps.lat,\n        lng: this.pilotProps.lng,\n      });\n    }\n\n    // Update Pilot Icon\n    if (this.iconRef.current !== null && propsChanged) {\n      let icon = this.iconRef.current;\n\n      const newPilotIcon = getPilotIcon(\n        this.pilotProps.startOfTrack,\n        this.pilotProps.endOfTrack,\n        this.pilotProps.landed,\n        { lat: this.pilotProps.lat, lng: this.pilotProps.lng },\n        { lat: this.pilotProps.velocityLat, lng: this.pilotProps.velocityLng }\n      );\n\n      // Update svg path if necessary\n      if (icon.childNodes.length > 0) {\n        const path = icon.childNodes[0];\n        const oldPath = path.getAttribute(\"d\");\n        if (oldPath !== newPilotIcon.path) {\n          path.setAttribute(\"d\", newPilotIcon.path);\n        }\n      }\n\n      // Update rotation if necessary\n      const rotation =\n        newPilotIcon.rotation === undefined ? 0 : newPilotIcon.rotation;\n      Object.assign(icon.style, getRotationStyle(rotation));\n    }\n\n    // Update Live State\n    if (this.liveStateRef.current !== null) {\n      this.liveStateRef.current.shallowRerender({\n        timestamp: this.pilotProps.newestDataTimestamp * 1000,\n        landed: this.pilotProps.landed,\n        endOfTrack: this.pilotProps.endOfTrack,\n        relative: true,\n        showLastFix: getSetting(Settings.LOW_LATENCY).getValue(),\n      });\n    }\n\n    // Update Flight Duration\n    if (this.flightDurationRef.current !== null && propsChanged) {\n      const newFlightDuration = AnimatedPilotListEntry.renderFlightDuration(\n        this.state.launchTime,\n        this.pilotProps.lastPotentialAirTime\n      );\n      if (newFlightDuration !== this.flightDurationRef.current.innerHTML)\n        this.flightDurationRef.current.innerHTML = newFlightDuration;\n    }\n  };\n\n  componentDidMount() {\n    getXContestInterface().animation.registerCallback(this.onNewDataReceived);\n    getXContestInterface().pilotInfos.registerCallback(this.onNewPilotInfos);\n    getGPSProvider().registerCallback(this.onNewGPSDataReceived);\n  }\n\n  componentWillUnmount() {\n    getXContestInterface().animation.unregisterCallback(this.onNewDataReceived);\n    getXContestInterface().pilotInfos.unregisterCallback(this.onNewPilotInfos);\n    getGPSProvider().unregisterCallback(this.onNewGPSDataReceived);\n  }\n  ///\n  /////////////////////////////////////////////////////////////////\n\n  /////////////////////////////////////////////////////////////////\n  /// LAYOUT\n  ///\n\n  static renderHeight(pilotProps) {\n    const height = pilotProps.height;\n\n    return (\n      Math.round(height) +\n      \"m (\" +\n      Math.round(Math.max(0, height - pilotProps.elevation)) +\n      \"m)\"\n    );\n  }\n\n  static renderFlightDuration(launchTime, currentTime) {\n    if (launchTime == null || currentTime == null) return \"-:-- h\";\n\n    const duration = Math.round((currentTime - launchTime) / 60);\n    const durationMinutes = (duration % 60).toString().padStart(2, \"0\");\n    const durationHours = Math.floor(duration / 60);\n    return durationHours + \":\" + durationMinutes + \" h\";\n  }\n\n  static scoreTypes = {\n    FlatTriangle: \" (flat)\",\n    FaiTriangle: \" (fai)\",\n    FreeFlight: \" (free)\",\n  };\n\n  static renderScore(scoreDistance, scoreType) {\n    const scoreTypeStr =\n      scoreType in AnimatedPilotListEntry.scoreTypes\n        ? AnimatedPilotListEntry.scoreTypes[scoreType]\n        : scoreType;\n    return scoreDistance + \" km \" + scoreTypeStr;\n  }\n\n  render() {\n    {\n      const pilotData = getXContestInterface().animation.getData();\n      const pilotInfo =\n        this.props.pilotId in pilotData ? pilotData[this.props.pilotId] : null;\n      this.pilotProps = this.extractImportantProps(pilotInfo);\n    }\n\n    console.log(\n      \"RENDER \",\n      this.props.pilotId,\n      this.state,\n      this.props,\n      this.pilotProps\n    );\n\n    const pilotIcon = getPilotIcon(\n      this.pilotProps.startOfTrack,\n      this.pilotProps.endOfTrack,\n      this.pilotProps.landed,\n      { lat: this.pilotProps.lat, lng: this.pilotProps.lng },\n      { lat: this.pilotProps.velocityLat, lng: this.pilotProps.velocityLng }\n    );\n    const pilotIconRotation =\n      pilotIcon.rotation === undefined ? 0 : pilotIcon.rotation;\n\n    return (\n      <ExpansionPanel\n        TransitionProps={{ unmountOnExit: true }}\n        onContextMenu={this.contextMenuHandler.onContextMenu}\n        onTouchStart={this.contextMenuHandler.onTouchStart}\n        onTouchCancel={this.contextMenuHandler.onTouchCancel}\n        onTouchEnd={this.contextMenuHandler.onTouchEnd}\n        onTouchMove={this.contextMenuHandler.onTouchMove}\n      >\n        <PilotExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <svg\n            width=\"30px\"\n            height=\"30px\"\n            viewBox=\"0 0 24 24\"\n            display=\"block\"\n            style={{\n              flex: \"0 0 auto\",\n              ...getRotationStyle(pilotIconRotation),\n            }}\n            ref={this.iconRef}\n          >\n            <path d={pilotIcon.path} fill={this.pilotColor} stroke=\"black\" />\n          </svg>\n          <div\n            style={{\n              flex: \"1 1 auto\",\n              overflow: \"hidden\",\n              marginLeft: \"10px\",\n            }}\n          >\n            <div\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                overflow: \"hidden\",\n              }}\n            >\n              <FirstRowLeft variant=\"body2\">\n                {this.props.pilotName}\n              </FirstRowLeft>\n              <FirstRowRight variant=\"caption\">\n                <LastFixArrow\n                  ref={this.lastFixRef}\n                  lastFix={{\n                    lat: this.pilotProps.lat,\n                    lng: this.pilotProps.lng,\n                  }}\n                />\n              </FirstRowRight>\n            </div>\n            <SecondRow variant=\"caption\">\n              <LastFixState\n                timestamp={this.pilotProps.newestDataTimestamp * 1000}\n                landed={this.pilotProps.landed}\n                endOfTrack={this.pilotProps.endOfTrack}\n                relative\n                ref={this.liveStateRef}\n                showLastFix={getSetting(Settings.LOW_LATENCY).getValue()}\n              />\n              <span ref={this.heightRef}>\n                {AnimatedPilotListEntry.renderHeight(this.pilotProps)}\n              </span>\n            </SecondRow>\n          </div>\n        </PilotExpansionPanelSummary>\n        <PilotExpansionPanelDetails>\n          <DetailsStats>\n            <DetailsRow variant=\"caption\">\n              <DetailTimerIcon />\n              <span ref={this.flightDurationRef}>\n                {AnimatedPilotListEntry.renderFlightDuration(\n                  this.state.launchTime,\n                  this.pilotProps.lastPotentialAirTime\n                )}\n              </span>\n            </DetailsRow>\n            <DetailsRow variant=\"caption\">\n              <DetailDistanceIcon />\n              {AnimatedPilotListEntry.renderScore(\n                this.state.scoreDistance,\n                this.state.scoreType\n              )}\n            </DetailsRow>\n            <DetailsRow variant=\"caption\">\n              <DetailLaunchIcon /> {this.state.launchSite}\n            </DetailsRow>\n          </DetailsStats>\n          <DetailsGraph variant=\"caption\">\n            <ElevationHistogram pilot={this.props.pilotId} />\n          </DetailsGraph>\n        </PilotExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n  }\n}\n\nexport default AnimatedPilotListEntry;\n","import { registerPersistentState } from \"./PersistentState\";\n\nconst TabID = registerPersistentState(\"global.tab_id\", 1);\nconst switchToMap = () => {\n  TabID.setValue(0);\n};\n\nexport default {\n  TabID,\n  switchToMap\n};\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  Popover,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n} from \"@material-ui/core\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\nimport AnimatedPilotListEntry from \"./AnimatedPilotListEntry\";\nimport { getGPSProvider } from \"../../services/GPSProvider\";\nimport { getDistance } from \"geolib\";\n\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DirectionsIcon from \"@material-ui/icons/Directions\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport { navigateTo } from \"../../util/MapLinks\";\nimport PageState from \"../../common/PersistentState/PageState\";\nimport { getMapViewportControllerService } from \"../../services/MapViewportControllerService\";\n\nclass AnimatedPilotList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      onlinePilots: [],\n      contextMenu: null,\n    };\n    this.gpsData = getGPSProvider().getData();\n  }\n\n  getSortedPilotList = (pilotData) => {\n    // If we have GPS, return pilot list in whatever order\n    if (this.gpsData === null) return Object.keys(pilotData);\n\n    // Get own position\n    const myPos = {\n      lat: this.gpsData.coords.latitude,\n      lng: this.gpsData.coords.longitude,\n    };\n\n    // Get distances to pilots\n    let pilotsAndDistances = Object.entries(pilotData).map(([name, data]) => [\n      name,\n      getDistance(myPos, data.pos),\n    ]);\n\n    // Sort\n    pilotsAndDistances.sort((el1, el2) => el1[1] - el2[1]);\n\n    // Return the sorted pilot names\n    return pilotsAndDistances.map((el) => el[0]);\n  };\n\n  onAnimationFrame = (pilotData) => {\n    // Sort\n    const sortedPilotList = this.getSortedPilotList(pilotData);\n\n    // Split pilots by landed and not landed\n    const landedPilotList = sortedPilotList.filter(\n      (name) => pilotData[name].endOfTrack && pilotData[name].landed\n    );\n    const notLandedPilotList = sortedPilotList.filter(\n      (name) => !(pilotData[name].endOfTrack && pilotData[name].landed)\n    );\n\n    // Show landed pilots at the end of the list\n    const pilotList = notLandedPilotList.concat(landedPilotList);\n\n    // Check if the pilot list changed\n    let pilotListChanged = false;\n    if (pilotList.length === this.state.onlinePilots.length) {\n      for (let i = 0; i < pilotList.length; i++) {\n        if (pilotList[i] !== this.state.onlinePilots[i]) {\n          pilotListChanged = true;\n          break;\n        }\n      }\n    } else {\n      pilotListChanged = true;\n    }\n\n    // If it changed, run a component update\n    if (pilotListChanged) {\n      this.setState((state) => ({ ...state, onlinePilots: pilotList }));\n    }\n  };\n\n  onNewGPSDataReceived = (gpsData) => {\n    this.gpsData = gpsData;\n  };\n\n  componentDidMount() {\n    getXContestInterface().animation.registerCallback(this.onAnimationFrame);\n    getGPSProvider().registerCallback(this.onNewGPSDataReceived);\n  }\n  componentWillUnmount() {\n    getXContestInterface().animation.unregisterCallback(this.onAnimationFrame);\n    getGPSProvider().unregisterCallback(this.onNewGPSDataReceived);\n  }\n\n  removePilot = (pilotId) => {\n    this.props.removePilots([pilotId]);\n  };\n\n  showContextMenu = (pilotId, mousePos, pilotProps) => {\n    this.setState((oldState) => ({\n      ...oldState,\n      contextMenu: { pilotId: pilotId, pos: mousePos, props: pilotProps },\n    }));\n  };\n\n  hideContextMenu = () => {\n    this.setState((oldState) => ({ ...oldState, contextMenu: null }));\n  };\n\n  contextMenu_delete = () => {\n    if (this.state.contextMenu !== null)\n      this.removePilot(this.state.contextMenu.pilotId);\n    this.hideContextMenu();\n  };\n\n  contextMenu_navigateTo = () => {\n    if (this.state.contextMenu !== null) {\n      const pilotProps = this.state.contextMenu.props;\n      navigateTo({ lat: pilotProps.lat, lng: pilotProps.lng });\n    }\n    this.hideContextMenu();\n  };\n\n  contextMenu_showOnMap = () => {\n    if (this.state.contextMenu !== null) {\n      const pilotId = this.state.contextMenu.pilotId;\n      PageState.switchToMap();\n      getMapViewportControllerService().setSinglePilotMode(pilotId);\n    }\n    this.hideContextMenu();\n  };\n\n  render() {\n    let pilotIsOnline = new Set(this.state.onlinePilots);\n\n    // Show online pilots first\n    const onlinePilots = this.state.onlinePilots.filter(\n      (pilotId) => pilotId in this.props.pilots\n    );\n\n    const offlinePilots = Object.keys(this.props.pilots).filter(\n      (pilotId) => !pilotIsOnline.has(pilotId)\n    );\n\n    const getPilotName = (pilotId) => {\n      const pilotData = this.props.pilots[pilotId];\n      if (pilotData === undefined || pilotData === null) return pilotId;\n      return pilotData.name;\n    };\n\n    return (\n      <Box height=\"100%\" bgcolor=\"#eeeef5\" overflow=\"auto\">\n        <Box margin={1}>\n          {onlinePilots.map((pilotId) => (\n            <AnimatedPilotListEntry\n              key={pilotId}\n              pilotId={pilotId}\n              pilotName={getPilotName(pilotId)}\n              removePilot={this.removePilot}\n              onContextMenuHandler={this.showContextMenu}\n            />\n          ))}\n        </Box>\n        <Box margin={1}>\n          {offlinePilots.map((pilotId) => (\n            <Box\n              key={pilotId}\n              onClick={() => {\n                this.removePilot(pilotId);\n              }}\n              display=\"flex\"\n            >\n              <Typography variant=\"body2\">{getPilotName(pilotId)}</Typography>\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                style={{ paddingLeft: \".5em\" }}\n              >\n                [{pilotId}]\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n        <Popover\n          open={this.state.contextMenu !== null}\n          anchorReference=\"anchorPosition\"\n          anchorPosition={\n            this.state.contextMenu === null ? null : this.state.contextMenu.pos\n          }\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\",\n          }}\n          onClose={this.hideContextMenu}\n        >\n          <List component=\"nav\" dense>\n            <ListItem button onClick={this.contextMenu_showOnMap}>\n              <ListItemIcon>\n                <PlayArrowIcon />\n              </ListItemIcon>\n              <ListItemText>Show Pilot on Map</ListItemText>\n            </ListItem>\n            <ListItem button disabled>\n              <ListItemIcon>\n                <DirectionsIcon />\n              </ListItemIcon>\n              <ListItemText>Live Navigation</ListItemText>\n            </ListItem>\n            <ListItem button onClick={this.contextMenu_navigateTo}>\n              <ListItemIcon>\n                <RoomIcon />\n              </ListItemIcon>\n              <ListItemText>Open in Maps</ListItemText>\n            </ListItem>\n            <ListItem button onClick={this.contextMenu_delete}>\n              <ListItemIcon>\n                <DeleteIcon />\n              </ListItemIcon>\n              <ListItemText>Remove Pilot</ListItemText>\n            </ListItem>\n          </List>\n        </Popover>\n      </Box>\n    );\n  }\n}\n\nexport default AnimatedPilotList;\n","export function navigateTo(pos) {\n  if (\n    /* if we're on iOS, open in Apple Maps */\n    navigator.platform.indexOf(\"iPhone\") !== -1 ||\n    navigator.platform.indexOf(\"iPad\") !== -1 ||\n    navigator.platform.indexOf(\"iPod\") !== -1\n  )\n    window.open(\n      \"https://maps.apple.com/maps?q=\" +\n        pos.lat.toString() +\n        \",\" +\n        pos.lng.toString()\n    );\n  /* else use Google */ else\n    window.open(\n      \"https://maps.google.com/maps?q=\" +\n        pos.lat.toString() +\n        \",\" +\n        pos.lng.toString()\n    );\n}\n","import React from \"react\";\nimport { Fab } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Box from \"@material-ui/core/Box\";\nimport PilotSelector from \"../PilotSelector/PilotSelector\";\nimport {\n  getChosenPilots,\n  addPilots,\n  removePilots,\n  getChosenPilotsObject\n} from \"../../common/PersistentState/ChosenPilots\";\nimport AnimatedPilotList from \"./AnimatedPilotList\";\n\nclass Pilots extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { pilotSelectorOpen: false, chosenPilots: getChosenPilots() };\n  }\n\n  openPilotSelector = () => {\n    if (this.state.pilotSelectorOpen === false)\n      this.setState(state => ({ ...state, pilotSelectorOpen: true }));\n  };\n\n  closePilotSelector = () => {\n    if (this.state.pilotSelectorOpen === true)\n      this.setState(state => ({ ...state, pilotSelectorOpen: false }));\n  };\n\n  chosenPilotsChanged = newChosenPilots => {\n    this.setState(state => ({\n      ...state,\n      chosenPilots: newChosenPilots\n    }));\n  };\n\n  componentDidMount() {\n    getChosenPilotsObject().registerCallback(this.chosenPilotsChanged);\n  }\n  componentWillUnmount() {\n    getChosenPilotsObject().unregisterCallback(this.chosenPilotsChanged);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <AnimatedPilotList\n          pilots={this.state.chosenPilots}\n          removePilots={removePilots}\n        ></AnimatedPilotList>\n\n        <Box position=\"absolute\" bottom=\"16px\" right=\"16px\">\n          <Fab size=\"small\" color=\"primary\" onClick={this.openPilotSelector}>\n            <AddIcon />\n          </Fab>\n        </Box>\n        <PilotSelector\n          open={this.state.pilotSelectorOpen}\n          onClose={this.closePilotSelector}\n          onAddPilots={addPilots}\n          alreadyAdded={Object.keys(this.state.chosenPilots)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Pilots;\n","import React from \"react\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\n\nexport default class NumberInput extends React.PureComponent {\n  state = {\n    internalUpdate: false,\n    value: null\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const resultState = { ...state, internalUpdate: false };\n\n    // Overwrite with external value if we got an update from the parent element\n    if (!state.internalUpdate) {\n      resultState.value = props.value;\n    }\n\n    return resultState;\n  }\n\n  render() {\n    return (\n      <TextField\n        onChange={event => {\n          const value = event.target.value;\n          // If the value is too small, send the smallest possible value to the parent,\n          // but keep the incorrect value in the text field.\n          // If the value is too large, send the largest possible value to the parent,\n          // and also set the text field to the largest possible value.\n          // Otherwise, just update.\n\n          if (value < this.props.min) {\n            // If those two messages get delivered out of order, this entire trick will stop working.\n            // But I think setting states will never be done in an incorrect order, that would really break things.\n            this.props.onChange(this.props.min);\n            this.setState(state => ({\n              ...state,\n              internalUpdate: true,\n              value: value\n            }));\n          } else if (value > this.props.max) {\n            this.props.onChange(this.props.max);\n          } else {\n            this.props.onChange(value);\n          }\n        }}\n        variant=\"outlined\"\n        disabled={this.props.disabled}\n        margin=\"dense\"\n        hiddenLabel\n        type=\"number\"\n        value={this.state.value}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">{this.props.unit}</InputAdornment>\n          )\n        }}\n        inputProps={{\n          min: this.props.min,\n          max: this.props.max\n        }}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { getSetting } from \"../../common/PersistentState/Settings\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch\n} from \"@material-ui/core\";\nimport NumberInput from \"../../util/NumberInput\";\nimport { pure } from \"recompose\";\n\nexport const BooleanSetting = pure(props => {\n  const [settingValue, setSettingValue] = getSetting(props.setting).use();\n  const flipSetting = () => setSettingValue(!settingValue);\n\n  return (\n    <ListItem button onClick={flipSetting}>\n      <ListItemText\n        primary={props.primaryText}\n        secondary={props.secondaryText}\n      />\n      <ListItemSecondaryAction>\n        <Switch edge=\"end\" onChange={flipSetting} checked={settingValue} />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n});\n\nexport const NumberSetting = pure(props => {\n  const [settingValue, setSettingValue] = getSetting(props.setting).use();\n\n  return (\n    <ListItem disabled={props.disabled}>\n      <ListItemText\n        primary={props.primaryText}\n        secondary={props.secondaryText}\n      />\n      <ListItemSecondaryAction>\n        <NumberInput\n          value={settingValue}\n          onChange={setSettingValue}\n          disabled={props.disabled}\n          unit={props.unit}\n          min={props.min}\n          max={props.max}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n});\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Box,\n  Typography,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SubWindow from \"../../util/SubWindow\";\nimport { resetAllSettings } from \"../../common/PersistentState/Settings\";\nimport { pure } from \"recompose\";\n\nconst SettingsPageTitleBar = pure(props => {\n  const [resetAllSettingsDialogOpen, setResetAllSettingsDialogOpen] = useState(\n    false\n  );\n\n  return (\n    <React.Fragment>\n      <AppBar style={{ position: \"static\" }}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={props.onClose}>\n            <ArrowBackIcon />\n          </IconButton>\n\n          <Box marginLeft={2} flexGrow={1}>\n            <Typography variant=\"h6\">Settings</Typography>\n          </Box>\n\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={() => setResetAllSettingsDialogOpen(true)}\n          >\n            <UndoIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      {/* RESET ALL SETTINGS DIALOG */}\n      <SubWindow\n        open={resetAllSettingsDialogOpen}\n        onClose={() => setResetAllSettingsDialogOpen(false)}\n      >\n        <DialogTitle>{\"Reset all settings?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This sets all settings to their default values.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              resetAllSettings();\n              setResetAllSettingsDialogOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Yes\n          </Button>\n          <Button\n            onClick={() => setResetAllSettingsDialogOpen(false)}\n            color=\"primary\"\n            autoFocus\n          >\n            No\n          </Button>\n        </DialogActions>\n      </SubWindow>\n    </React.Fragment>\n  );\n});\n\nexport default SettingsPageTitleBar;\n","import React from \"react\";\n\nimport { List, Divider } from \"@material-ui/core\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\nimport SubWindow from \"../../util/SubWindow\";\nimport { BooleanSetting, NumberSetting } from \"./SettingsPageEntries\";\nimport SettingsPageTitleBar from \"./SettingsPageTitleBar\";\n\nconst SettingsPage = props => {\n  // Retreive the settings that enable/disable other settings\n  const [settingLimitPaths] = getSetting(Settings.LIMIT_PATHS).use();\n  const [settingFpsLimit] = getSetting(Settings.FPS_LIMIT).use();\n  //const [settingLowLatency] = getSetting(Settings.LOW_LATENCY).use();\n\n  return (\n    <SubWindow fullScreen open={props.open} onClose={props.onClose}>\n      <SettingsPageTitleBar onClose={props.onClose} />\n\n      <List>\n        {/* ANIMATION DELAY */}\n        <BooleanSetting\n          setting={Settings.LOW_LATENCY}\n          primaryText=\"Low Latency Mode\"\n          secondaryText=\"disables animations\"\n        />\n        {/*<NumberSetting\n          primaryText=\"Animation Delay\"\n          secondaryText=\"70-120 sec (default: 80)\"\n          setting={Settings.ANIMATION_DELAY}\n          disabled={settingLowLatency}\n          unit=\"sec\"\n          min={70}\n          max={120}\n        />*/}\n\n        {/* TRACK LENGTH */}\n        <Divider />\n        <BooleanSetting\n          setting={Settings.LIMIT_PATHS}\n          primaryText=\"Limit Track Length\"\n          secondaryText=\"prevents map clutter\"\n        />\n        <NumberSetting\n          primaryText=\"Track Length\"\n          secondaryText=\"Valid: 1-999 min\"\n          setting={Settings.PATH_LENGTH}\n          disabled={!settingLimitPaths}\n          unit=\"min\"\n          min={1}\n          max={999}\n        />\n\n        {/* FRAMERATE */}\n        <Divider />\n        <BooleanSetting\n          setting={Settings.FPS_LIMIT}\n          primaryText=\"Limit Framerate\"\n          secondaryText=\"reduces energy consumption\"\n        />\n        <NumberSetting\n          primaryText=\"Framerate\"\n          secondaryText=\"Valid: 1-60 fps\"\n          setting={Settings.FPS_RATE}\n          disabled={!settingFpsLimit}\n          unit=\"fps\"\n          min={1}\n          max={60}\n        />\n\n        {/* GPS */}\n        <Divider />\n        <BooleanSetting\n          setting={Settings.GPS_ENABLED}\n          primaryText=\"Enable GPS\"\n          secondaryText=\"required for advanced features\"\n        />\n      </List>\n    </SubWindow>\n  );\n};\n\nexport default SettingsPage;\n","import React, { useState } from \"react\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Box,\n  Typography,\n  Toolbar,\n  useTheme\n} from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport SettingsPage from \"./SettingsPage/SettingsPage\";\n\nconst MainMenu = props => {\n  const theme = useTheme();\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  return (\n    <React.Fragment>\n      <SwipeableDrawer\n        disableSwipeToOpen\n        open={props.open}\n        onOpen={() => {}}\n        onClose={props.onClose}\n      >\n        <Toolbar\n          style={{\n            backgroundColor: theme.palette.primary.light,\n            minWidth: \"200px\"\n          }}\n          onClick={props.onClose}\n        >\n          <Box flexGrow={1} clone>\n            <Typography variant=\"h6\">Menu</Typography>\n          </Box>\n          <IconButton edge=\"end\" color=\"inherit\">\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n\n        <List>\n          <ListItem\n            button\n            onClick={() => {\n              props.onClose();\n              setSettingsOpen(true);\n            }}\n          >\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n      <SettingsPage\n        open={settingsOpen}\n        onClose={() => setSettingsOpen(false)}\n      ></SettingsPage>\n    </React.Fragment>\n  );\n};\n\nexport default MainMenu;\n","import React from \"react\";\nimport { useState } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ErrorIcon from \"@material-ui/icons/ErrorRounded\";\nimport SignalCellular4BarIcon from \"@material-ui/icons/SignalCellular4Bar\";\nimport SignalCellularConnectedNoInternet4BarIcon from \"@material-ui/icons/SignalCellularConnectedNoInternet4Bar\";\nimport SignalCellularNullIcon from \"@material-ui/icons/SignalCellularNull\";\n\nimport { useXContestConnectionState } from \"../location_provider/XContest/XContestInterface\";\nimport { ConnectionState } from \"../location_provider/XContest/XContestInterface\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport MainMenu from \"./MainMenu\";\nimport { pure } from \"recompose\";\n\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    padding: theme.spacing(1),\n    align: \"right\"\n  }\n}));\n\nconst LoadingBadge = props => {\n  return (\n    <Badge\n      //overlap=\"circle\"\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      }}\n      badgeContent={\n        <CircularProgress\n          disableShrink={props.disableShrink}\n          color=\"secondary\"\n          size={15}\n          thickness={10}\n        />\n      }\n    >\n      {props.children}\n    </Badge>\n  );\n};\n\nconst TitleBar = () => {\n  const classes = useStyles();\n  const connectionState = useXContestConnectionState();\n\n  const popoverActions = React.useRef();\n  const [connectionPopAnchor, setConnectionPopAnchor] = useState(null);\n\n  const [mainMenuOpen, setMainMenuOpen] = useState(false);\n\n  React.useLayoutEffect(() => {\n    if (popoverActions.current) {\n      popoverActions.current.updatePosition();\n    }\n  }, [connectionState, connectionPopAnchor]);\n\n  const renderConnectionIcon = () => {\n    switch (connectionState) {\n      case ConnectionState.ACTIVE:\n        return <SignalCellular4BarIcon />;\n      case ConnectionState.CONNECTING:\n        return (\n          <LoadingBadge>\n            <SignalCellularNullIcon />\n          </LoadingBadge>\n        );\n      case ConnectionState.ERROR:\n        return <ErrorIcon color=\"error\" />;\n      case ConnectionState.ESTABLISHED:\n        return (\n          <LoadingBadge disableShrink>\n            <SignalCellularNullIcon />\n          </LoadingBadge>\n        );\n      case ConnectionState.INACTIVE:\n        return <SignalCellularConnectedNoInternet4BarIcon />;\n      case ConnectionState.NO_CONNECTION:\n        return <SignalCellularNullIcon />;\n      default:\n        return <SignalCellularNullIcon />;\n    }\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => setMainMenuOpen(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Box marginLeft={2} flexGrow={1}>\n            <Typography variant=\"h6\">XC Live Viewer</Typography>\n          </Box>\n\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={event => setConnectionPopAnchor(event.currentTarget)}\n          >\n            {renderConnectionIcon()}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Popover\n        open={Boolean(connectionPopAnchor)}\n        anchorEl={connectionPopAnchor}\n        onClose={() => setConnectionPopAnchor(null)}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        action={popoverActions}\n      >\n        <Box className={classes.popover}>\n          <Typography>{connectionState}</Typography>\n        </Box>\n      </Popover>\n      <MainMenu\n        open={mainMenuOpen}\n        onClose={() => setMainMenuOpen(false)}\n      ></MainMenu>\n    </div>\n  );\n};\n\nexport default pure(TitleBar);\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\n\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport MapIcon from \"@material-ui/icons/Map\";\n\nimport \"./MainPage.css\";\n\n// TODO import LazyLoading from \"./util/LazyLoading\";\n\nimport LiveMap from \"./pages/GoogleMapsPage/LiveMap\";\nimport Pilots from \"./pages/PilotList/Pilots\";\nimport TitleBar from \"./pages/TitleBar\";\n\nimport PageState from \"./common/PersistentState/PageState\";\n\nconst MainPage = () => {\n  const [tabId, setTabId] = PageState.TabID.use();\n  const [windowHeight, setWindowHeight] = React.useState(0);\n  const theme = useTheme();\n  const isSmartphone = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  // Workaround for mobile screens reporting an incorrect window height\n  const updateWindowHeight = () => {\n    setWindowHeight(window.innerHeight);\n  };\n  React.useLayoutEffect(() => {\n    updateWindowHeight();\n    window.addEventListener(\"resize\", updateWindowHeight);\n    return () => window.removeEventListener(\"resize\", updateWindowHeight);\n  }, []);\n\n  // Callbacks for changing the current page\n  const handleNavigationButton = (_event, newValue) => setTabId(newValue);\n\n  const content = isSmartphone ? (\n    <React.Fragment>\n      <Box flexGrow={1} clone display=\"flex\">\n        <SwipeableViews disabled index={tabId}>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            <LiveMap></LiveMap>\n          </Box>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            <Pilots></Pilots>\n          </Box>\n        </SwipeableViews>\n      </Box>\n      <Box zIndex={100} boxShadow={3}>\n        <BottomNavigation\n          value={tabId}\n          onChange={handleNavigationButton}\n          showLabels\n        >\n          <BottomNavigationAction label=\"Map\" icon={<MapIcon />} />\n          <BottomNavigationAction label=\"Pilots\" icon={<PeopleIcon />} />\n        </BottomNavigation>\n      </Box>\n    </React.Fragment>\n  ) : (\n    <Box width=\"100%\" flexGrow={1} display=\"flex\" overflow=\"hidden\">\n      <Box flexGrow={1} height=\"100%\">\n        <LiveMap></LiveMap>\n      </Box>\n      <Box width=\"450px\" height=\"100%\" zIndex={50} boxShadow={3}>\n        <Pilots></Pilots>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <Box\n      height={windowHeight}\n      display=\"flex\"\n      flexDirection=\"column\"\n      overflow=\"hidden\"\n    >\n      <Box zIndex={100}>\n        <TitleBar></TitleBar>\n      </Box>\n\n      {content}\n    </Box>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport MainPage from \"./MainPage\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport resolveBreakingChanges from \"./common/PersistentState/BreakingChanges\";\n\nimport \"flag-icon-css/css/flag-icon.min.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Read the .env file\nrequire(\"dotenv\").config();\n\n// Update breaking changes\nresolveBreakingChanges();\n\n// Render the page\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { getChosenPilotsObject, defaultPilotEntry } from \"./ChosenPilots\";\n\nfunction fixChosenPilots() {\n  let chosenPilotsObject = getChosenPilotsObject();\n  let chosenPilots = { ...chosenPilotsObject.getValue() };\n\n  let changed = false;\n  for (let pilotId of [...Object.keys(chosenPilots)]) {\n    let chosenPilot = chosenPilots[pilotId];\n    // if chosenPilot is not an object\n    if (chosenPilot !== Object(chosenPilot)) {\n      if (typeof chosenPilot == \"string\") {\n        chosenPilots[pilotId] = defaultPilotEntry(chosenPilot);\n        changed = true;\n      } else {\n        chosenPilots[pilotId] = defaultPilotEntry(pilotId);\n        changed = true;\n      }\n    }\n  }\n\n  if (changed) {\n    chosenPilotsObject.setValue(chosenPilots);\n  }\n}\n\nexport default function resolveBreakingChanges() {\n  console.log(\"Bla!\");\n  fixChosenPilots();\n}\n"],"sourceRoot":""}