{"version":3,"sources":["common/GoogleMapsApiLoader.js","pages/StatusPages.jsx","common/PersistentState/PersistentState.js","common/PersistentState/Settings.js","location_provider/XContest/XContestSocket.js","common/PersistentState/ChosenPilots.js","util/Interpolation.js","util/RunningDerivation.js","util/FindBisect.js","location_provider/XContest/FlightAnimationData.js","location_provider/XContest/FlightAnimation.js","util/HighPrecisionTimeSync.js","location_provider/XContest/XContestAnimation.js","util/EventfulState.js","location_provider/XContest/XContestInterface.js","util/rng.js","util/string2color.js","pages/GoogleMapsPage/GoogleMapsTrack.js","common/PilotIcon.js","pages/GoogleMapsPage/MapAnimator.js","pages/GoogleMapsPage/LiveMap.jsx","common/History.js","util/SubWindow.jsx","common/GPSProvider.js","util/LastFixState.jsx","pages/PilotSelector/PilotSelectorListRenderer.jsx","pages/PilotSelector/PilotSelectorList.jsx","util/CompareArrays.js","pages/PilotSelector/PilotSelector.jsx","pages/PilotList/AnimatedPilotListEntry.jsx","pages/PilotList/AnimatedPilotList.jsx","pages/PilotList/Pilots.jsx","util/NumberInput.jsx","pages/SettingsPage/SettingsPageEntries.jsx","pages/SettingsPage/SettingsPageTitleBar.jsx","pages/SettingsPage/SettingsPage.jsx","pages/MainMenu.jsx","pages/TitleBar.jsx","MainPage.jsx","App.jsx","serviceWorker.jsx","index.js"],"names":["googleMapsApiPromise","useGoogleMapsApi","useState","ready","error","state","setState","useEffect","Promise","resolve","_reject","console","log","script","document","createElement","src","async","addEventListener","body","appendChild","then","success","window","google","useStyles","makeStyles","theme","progress","margin","spacing","LoadingPage","message","hideIf","subRef","classes","Box","width","height","display","alignItems","justifyContent","ref","textAlign","CircularProgress","className","Typography","ErrorPage","fontSize","color","PersistentState","key","initialValue","getValue","jsonValue","localStorage","getItem","locallyCachedJson","locallyCachedValue","JSON","parse","value","_notifyAll","callbacks","cb","registerCallback","includes","push","unregisterCallback","index","indexOf","splice","setValue","removeItem","setItem","stringify","use","newValue","this","registerPersistentState","name","Settings","PATH_LENGTH","LIMIT_PATHS","LOW_LATENCY","ANIMATION_DELAY","FPS_LIMIT","FPS_RATE","GPS_ENABLED","createSetting","settingsObjects","getSetting","XContestSocket","onStateChanged","onInfoMessage","onTracklogMessage","onFlightLanded","formatSubscribedFlights","subscribedFlights","map","flightId","startTimestamp","flightUuid","start","Date","toISOString","refreshSubscribedFlights","sock","readyState","WebSocket","OPEN","connected","formattedSubscribedFlights","send","tag","contents","setSubscribedFlights","flights","onOpen","handleReset","debug","setConnectionState","ConnectionState","ESTABLISHED","area","lat","lon","onMessage","evt","ACTIVE","msg","data","clearTimeout","watchdog","setTimeout","INACTIVE","processMessage","onClose","NO_CONNECTION","connect","bind","onError","dispatchInfoMessage","dispatchTracklogMessage","dispatchFlightLandedMessage","warn","CONNECTING","onopen","onmessage","onclose","onerror","ERROR","alert","persistentChosenPilots","getChosenPilots","setChosenPilots","setChosenPilotsAndUpdateNames","chosenPilots","pilotList","getXContestInterface","getPilotInfos","chosenPilotsUpdated","pilotId","currentName","info","user","fullname","addPilots","pilotIds","newPilotState","changed","removePilots","lerp","val1","val2","pct","spline","p0","t0","p1","t1","p2","t2","p3","t3","t","A1","A2","A3","B1","B2","splineDerivative","A1d","A2d","A3d","B1d","B2d","RunningDerivation","smoothingFactor","derivation_func","a","b","invalid_func","computeDiff","isInvalid","old_val","old_t","running_avg","new_val","new_t","dt","deriv","weight","Math","pow","findBisect","targetValue","length","dataFn","minIndex","maxIndex","currentIndex","parseTime","isoStr","round","FlightAnimationData","at","timestamp","pos","findForwardSwipe","startPos","getNewestTimestamp","counter_gpsVario","counter_baroVarion","counter_velocity","end","getDistance","elem","lng","baroAlt","gpsAlt","gpsVario","update","baroVario","velocity","newElem","elevation","clear","append","newElements","oldElements","oldPos","newPos","oldEl","newEl","reset","FlightAnimationDataCache","currentArrayPos","mapsPath","mapsPathNewestPos","DataGens","data1","data2","timeStamp","data0","data3","dT","d0","d1","d2","d3","fallbackData","flightInfos","lastFix","FlightAnimation","destroy","updateSettings","settings","timeOffsetSeconds","lowLatencyMode","trackLengthMinutes","limitTracks","liveDataCache","flightInfoDataCache","updateInfos","infos","landed","flightInfoData","replace","track","updateData","data_start_time","liveData","isAfterLastElement","insert","updateLanded","getInterpolatedData","cache","blendedData","endOfTrack","startOfTrack","velocityVec","takeData","computeLinearVelocity","blendDataSpline","computeSplineVelocity","getFallbackData","computeTrack","oldestTimestamp","numRemove","slice","updateAnimation","animationTimeMillis","animationTimeSeconds","animationResult","newestDataTimestamp","HighPrecisionTimeSync","tolerance","get","currentHighPrecisionTime","currentTime","estimatedTime","offset","offBy","XContestAnimation","_nextUpdate","now","animationLoop","absTime","frameTimeDelta","_setting_fps","_setting_limitFps","newAnimationData","Object","keys","_subscribedPilots","forEach","pilot","_pilotInfos","_flightAnimations","flightAnim","_submitAnimationFrame","requestAnimationFrame","_currentAnimationData","_callbacks","setSubscribedPilots","subscribedPilots","_updateImportantFlights","pushNewInfo","pilotInfo","values","flightInfo","pushNewData","trackId","trackData","pushFlightLanded","getData","importantFlights","filter","val","username","importantFlightSet","Set","toRemove","entries","as","bs","size","has","eqSet","_subscribedFlights","flightsWithTimestamps","_setSubscribedFlightsCallback","_highPrecisionTimeSync","settings_limitFps","settings_fps","Array","from","EventfulState","set","_callbackData","NO_INFORMATION","XContestInterface","socket","pilots","onConnectionStateChanged","connectionState","onInfoMessageReceived","overriden","animation","pilotInfos","onTracklogMessageReceived","trackChunk","onFlightLandedMessageReceived","_instance","createRng","seedString","c","d","seed","str","i","h","imul","charCodeAt","xmur3","string2color","lightness","rand","colorHue","min","max","convert","hsl","hex","GoogleMapsTrack","initialData","setMap","marker","newestTrackSegment","_updateTrack","startTime","endTime","currentTrackVersion","setPath","setPosition","setIcon","waitingForStart","hasLanded","path","fillColor","fillOpacity","anchor","maps","Point","strokeWeight","scale","bearing","getRhumbLineBearing","rotation","getPilotIcon","pilotColor","trackColor","Marker","position","title","Polyline","strokeColor","MapAnimator","cleanupOldTracks","tracks","pilotData","pure","mapReady","mapError","mapsRef","useRef","useLayoutEffect","Map","current","center","mapTypeId","zoom","maxZoom","disableDefaultUI","scaleControl","fullscreenControl","styles","mapStyle","mapAnimatorUpdateCallback","Fragment","ourHistory","callback","pop","history","pushState","SubWindow","props","open","_setOpen","historyOpen","_setHistoryOpen","histSize","back","Dialog","fullScreen","maxWidth","fullWidth","children","GPSProvider","_updateGPSState","gpssettingEnabled","callbackRegistered","enableGps","_watchId","navigator","geolocation","watchPosition","_onNewGPSData","_onGPSError","enableHighAccuracy","clearWatch","_setGPSData","_gpsData","getGPSProvider","LastFixState","relative","time_diff","timeStr","millis","negative","secs","floor","mins","hours","toString","padStart","days","formatTimeDiff","toLocaleTimeString","timestampToTimeString","style","role","aria-hidden","LastFixArrow","onNewGPSDataReceived","gpsData","updateThroughRef","arrowRef","arrowStyle","getArrowRotationStyle","assign","distanceRef","innerHTML","React","createRef","myPosition","pilotFix","distance","coords","latitude","longitude","transform","WebkitTransform","MozTransform","msTransform","OTransform","Component","TableHeader","TableCell","component","variant","boxSizing","flex","PilotSelectorListRow","iso","disabled","undefined","paddingLeft","paddingTop","paddingBottom","paddingRight","marginLeft","boxShadow","verticalAlign","toLowerCase","PureComponent","renderRow","nationality","selected","alreadyAdded","padding","backgroundColor","onClick","onPilotClicked","sortPilotList","gps","myPos","distances","sort","el1","el2","el","PilotSelectorList","startRendering","didMount","updatePilotListIfNecessary","newPilotList","array1","array2","l","arraysEqual","sortedPilotList","onNewGpsData","onNewPilotInfos","overflow","disableShrink","displayedPilots","search","matchesSearch","filteredPilots","test","filterPilotList","itemCount","itemSize","itemData","itemKey","fullHeightWindow","PilotSelector","useTheme","useMediaQuery","breakpoints","down","setSelected","setSearch","numSelected","closeWindow","paper","Toolbar","palette","type","secondary","main","lighten","light","text","primary","dark","id","TextField","autoComplete","label","onChange","event","target","marginY","flexDirection","selectedIndex","newSelected","concat","DialogActions","Button","onAddPilots","AnimatedPilotListEntry","hasGps","forceUpdate","onNewDataReceived","hasPilotInfo","online","ExpansionPanel","TransitionProps","unmountOnExit","ExpansionPanelSummary","expandIcon","pilotName","ExpansionPanelDetails","AnimatedPilotList","pilotListChanged","onlinePilots","removePilot","pilotIsOnline","offlinePilots","getPilotName","bgcolor","Pilots","pilotSelectorOpen","openPilotSelector","closePilotSelector","bottom","right","Fab","NumberInput","internalUpdate","hiddenLabel","InputProps","endAdornment","InputAdornment","unit","inputProps","resultState","BooleanSetting","setting","settingValue","setSettingValue","flipSetting","ListItem","button","ListItemText","primaryText","secondaryText","ListItemSecondaryAction","Switch","edge","checked","NumberSetting","SettingsPageTitleBar","resetAllSettingsDialogOpen","setResetAllSettingsDialogOpen","AppBar","IconButton","flexGrow","DialogTitle","DialogContent","DialogContentText","settingsObj","autoFocus","SettingsPage","settingLimitPaths","settingFpsLimit","List","Divider","MainMenu","settingsOpen","setSettingsOpen","SwipeableDrawer","disableSwipeToOpen","minWidth","clone","ListItemIcon","popover","align","LoadingBadge","Badge","anchorOrigin","vertical","horizontal","badgeContent","thickness","TitleBar","popoverActions","connectionPopAnchor","setConnectionPopAnchor","mainMenuOpen","setMainMenuOpen","updatePosition","currentTarget","renderConnectionIcon","Popover","Boolean","anchorEl","transformOrigin","action","MainPage","tabId","setTabId","windowHeight","setWindowHeight","updateWindowHeight","innerHeight","removeEventListener","zIndex","BottomNavigation","_event","showLabels","BottomNavigationAction","icon","App","location","hostname","match","require","config","ReactDOM","render","getElementById","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.8e9887cc.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\n// Hook\nlet googleMapsApiPromise = null;\nfunction useGoogleMapsApi() {\n  // Keeping track of script loaded and error state\n  const [state, setState] = useState({\n    ready: false,\n    error: false\n  });\n\n  useEffect(\n    () => {\n      if (googleMapsApiPromise === null) {\n        googleMapsApiPromise = new Promise((resolve, _reject) => {\n          console.log(\"Loading Google Maps API ...\");\n          // Create script\n          let script = document.createElement(\"script\");\n          script.src =\n            \"https://maps.googleapis.com/maps/api/js?key=\" +\n            process.env.REACT_APP_GAPI_KEY;\n          script.async = true;\n\n          script.addEventListener(\"load\", () => resolve(true));\n          script.addEventListener(\"error\", () => resolve(false));\n\n          // Add script to document body\n          document.body.appendChild(script);\n        });\n      }\n\n      googleMapsApiPromise.then(success => {\n        if (success) {\n          console.log(\"Google Maps API loaded.\");\n          setState({\n            ready: true,\n            error: false\n          });\n        } else {\n          console.log(\"Error: Cannot load Google Maps API.\");\n          setState({\n            ready: false,\n            error: true\n          });\n        }\n      });\n    },\n    [] // Don't re-run\n  );\n\n  return [state.ready, state.error, state.ready ? window.google : null];\n}\n\nexport default useGoogleMapsApi;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2)\n  }\n}));\n\nexport const LoadingPage = ({ message, hideIf, subRef }) => {\n  const classes = useStyles();\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      display={hideIf ? \"none\" : \"flex\"}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      ref={subRef}\n    >\n      <Box textAlign=\"center\">\n        <CircularProgress className={classes.progress} />\n        <Typography>{message}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport const ErrorPage = ({ message, hideIf }) => {\n  const classes = useStyles();\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      display={hideIf ? \"none\" : \"flex\"}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box textAlign=\"center\">\n        <ErrorIcon\n          fontSize=\"large\"\n          color=\"error\"\n          className={classes.progress}\n        />\n        <Typography color=\"error\">{message}</Typography>\n      </Box>\n    </Box>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nclass PersistentState {\n  constructor(key, initialValue) {\n    this.key = key;\n    this.initialValue = initialValue;\n    this.callbacks = [];\n\n    this.locallyCachedJson = null;\n    this.locallyCachedValue = null;\n  }\n\n  getValue = () => {\n    const jsonValue = localStorage.getItem(this.key);\n\n    // Caching, to reduce the amount of times the value !== itself.\n    // This is a performance optimization for PureComponents.\n    if (this.locallyCachedJson !== jsonValue) {\n      this.locallyCachedJson = jsonValue;\n      this.locallyCachedValue = JSON.parse(jsonValue);\n    }\n\n    const value = this.locallyCachedValue;\n    if (value === null) return this.initialValue;\n    return value;\n  };\n\n  _notifyAll = () => {\n    const value = this.getValue();\n    for (const cb of this.callbacks) {\n      cb(value);\n    }\n  };\n\n  registerCallback = cb => {\n    if (!this.callbacks.includes(cb)) this.callbacks.push(cb);\n  };\n\n  unregisterCallback = cb => {\n    const index = this.callbacks.indexOf(cb);\n    if (index >= 0) {\n      this.callbacks.splice(index, 1);\n    }\n  };\n\n  setValue = value => {\n    if (value == null) {\n      localStorage.removeItem(this.key);\n    } else {\n      localStorage.setItem(this.key, JSON.stringify(value));\n    }\n\n    this._notifyAll();\n  };\n\n  use = () => {\n    const [value, setValue] = useState(this.getValue);\n\n    useEffect(() => {\n      const cb = newValue => {\n        // trigger component update on change\n        setValue(newValue);\n      };\n\n      this.registerCallback(cb);\n      return () => this.unregisterCallback(cb);\n    }, []);\n\n    return [value, this.setValue];\n  };\n}\n\nexport const registerPersistentState = (name, initialValue) => {\n  return new PersistentState(name, initialValue);\n};\n","import { registerPersistentState } from \"./PersistentState\";\n\n// Keys\nexport const Settings = {\n  PATH_LENGTH: \"PATH_LENGTH\",\n  LIMIT_PATHS: \"LIMIT_PATHS\",\n  LOW_LATENCY: \"LOW_LATENCY\",\n  ANIMATION_DELAY: \"ANIMATION_DELAY\",\n  FPS_LIMIT: \"FPS_LIMIT\",\n  FPS_RATE: \"FPS_RATE\",\n  GPS_ENABLED: \"GPS_ENABLED\"\n};\n\n// Wrapper for simplification\nconst createSetting = (key, value) =>\n  registerPersistentState(\"SETTINGS_\" + key, value);\n\n// Settings objects\nconst settingsObjects = {\n  PATH_LENGTH: createSetting(Settings.PATH_LENGTH, 15),\n  LIMIT_PATHS: createSetting(Settings.LIMIT_PATHS, false),\n  LOW_LATENCY: createSetting(Settings.LOW_LATENCY, false),\n  ANIMATION_DELAY: createSetting(Settings.ANIMATION_DELAY, 80),\n  FPS_LIMIT: createSetting(Settings.FPS_LIMIT, true),\n  FPS_RATE: createSetting(Settings.FPS_RATE, 10),\n  GPS_ENABLED: createSetting(Settings.GPS_ENABLED, true)\n};\n\nexport const getSetting = key => settingsObjects[key];\n\nexport const resetAllSettings = () => {\n  Object.values(settingsObjects).forEach(settingsObj =>\n    settingsObj.setValue(null)\n  );\n};\n","import { ConnectionState } from \"./XContestInterface\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\n\nexport default class XContestSocket {\n  constructor(\n    onStateChanged,\n    onInfoMessage,\n    onTracklogMessage,\n    onFlightLanded\n  ) {\n    this.setConnectionState = onStateChanged;\n    this.dispatchInfoMessage = onInfoMessage;\n    this.dispatchTracklogMessage = onTracklogMessage;\n    this.dispatchFlightLandedMessage = onFlightLanded;\n    this.subscribedFlights = [];\n    this.connect();\n    this.connected = false;\n\n    // Register hooks, so we get notified when these settings change\n    getSetting(Settings.PATH_LENGTH).registerCallback(\n      this.refreshSubscribedFlights\n    );\n    getSetting(Settings.LIMIT_PATHS).registerCallback(\n      this.refreshSubscribedFlights\n    );\n  }\n\n  connect() {\n    if (\"WebSocket\" in window) {\n      this.connected = false;\n      this.setConnectionState(ConnectionState.CONNECTING);\n      this.sock = new WebSocket(\"wss://live.xcontest.org/websock/webclient\");\n      this.sock.onopen = this.onOpen;\n      this.sock.onmessage = this.onMessage;\n      this.sock.onclose = this.onClose;\n      this.sock.onerror = this.onError;\n    } else {\n      this.setConnectionState(ConnectionState.ERROR);\n      // The browser doesn't support WebSocket\n      alert(\"WebSocket NOT supported by your Browser!\");\n    }\n  }\n\n  formatSubscribedFlights = () => {\n    const formattedFlights = this.subscribedFlights.map(\n      ([flightId, startTimestamp]) => {\n        const startIsoTime =\n          startTimestamp === null\n            ? null\n            : new Date(1000 * startTimestamp).toISOString();\n        return { flightUuid: flightId, start: startIsoTime };\n      }\n    );\n\n    return formattedFlights;\n  };\n\n  refreshSubscribedFlights = () => {\n    if (this.sock.readyState === WebSocket.OPEN && this.connected) {\n      const formattedSubscribedFlights = this.formatSubscribedFlights();\n\n      this.sock.send(\n        JSON.stringify({\n          tag: \"WebFollow\",\n          contents: formattedSubscribedFlights\n        })\n      );\n    }\n  };\n\n  setSubscribedFlights = flights => {\n    this.subscribedFlights = flights;\n    this.refreshSubscribedFlights();\n  };\n\n  onOpen = () => {\n    this.handleReset();\n    console.debug(\"WebSocket: Open!\");\n    this.setConnectionState(ConnectionState.ESTABLISHED);\n    this.connected = true;\n\n    // Set area filter to the entire world\n    this.sock.send(\n      JSON.stringify({\n        tag: \"WebFilterArea\",\n        area: [{ lat: -90, lon: -180 }, { lat: 90, lon: 180 }]\n      })\n    );\n\n    // Use current 'fake' contest that is valid for the current alpha phase.\n    // Primarily sent to match the messages from their reverse engineered websocket\n    this.sock.send(\n      JSON.stringify({ tag: \"WebFilterContest\", contents: \"alpha9999\" })\n    );\n\n    // Tell the webserver which flights we want in more detail. TODO.\n    const formattedSubscribedFlights = this.formatSubscribedFlights();\n    this.sock.send(\n      JSON.stringify({\n        tag: \"WebFollow\",\n        contents: formattedSubscribedFlights\n      })\n    );\n  };\n\n  onMessage = evt => {\n    console.debug(\"WebSocket: Message!\");\n    this.setConnectionState(ConnectionState.ACTIVE);\n\n    let msg = JSON.parse(evt.data);\n\n    // Expect the next message in 60 seconds. If not, change the status message.\n    clearTimeout(this.watchdog);\n    this.watchdog = setTimeout(() => {\n      this.setConnectionState(ConnectionState.INACTIVE);\n    }, 70000);\n\n    // Process the message\n    this.processMessage(msg);\n  };\n\n  onClose = evt => {\n    this.connected = false;\n    console.debug(\"WebSocket: Close!\");\n    this.setConnectionState(ConnectionState.NO_CONNECTION);\n    // websocket is closed.\n    setTimeout(this.connect.bind(this), 1000);\n  };\n\n  onError = evt => {\n    this.connected = false;\n    console.debug(\"WebSocket: Error!\");\n  };\n\n  // Message Processing\n  handleReset = () => {\n    console.log(\"TODO: handle reset!\");\n  };\n  processMessage = msg => {\n    if (!(\"tag\" in msg)) {\n      console.warn(\"Warning: Invalid message format!\", msg);\n      return;\n    }\n    switch (msg.tag) {\n      case \"LiveFlightInfos\":\n        this.dispatchInfoMessage(msg.contents);\n        break;\n      case \"LiveFlightChunk\":\n        this.dispatchTracklogMessage(msg);\n        break;\n      case \"LiveFlightLanded\":\n        this.dispatchFlightLandedMessage(msg.flightUuid);\n        break;\n      default:\n        console.warn(`Warning: Unknown message tag '${msg.tag}'!`, msg);\n    }\n  };\n}\n","import { registerPersistentState } from \"./PersistentState\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\n\nconst persistentChosenPilots = registerPersistentState(\"chosen-pilots\", {});\n\nexport const getChosenPilotsObject = () => persistentChosenPilots;\n\nexport function getChosenPilots() {\n  return persistentChosenPilots.getValue();\n}\n\nexport function setChosenPilots(newValue) {\n  console.log(\"Selected pilots updated: \", newValue);\n  return persistentChosenPilots.setValue(newValue);\n}\n\n// Sets new chosen pilots and also looks up their names.\n// When used without argument, just updates the names of the existing pilots.\nexport function setChosenPilotsAndUpdateNames(chosenPilots = null) {\n  if (chosenPilots === null) chosenPilots = { ...getChosenPilots() };\n\n  const pilotList = getXContestInterface().getPilotInfos();\n  let chosenPilotsUpdated = false;\n  for (const pilotId in chosenPilots) {\n    if (pilotId in pilotList) {\n      // Get new name\n      const currentName = pilotList[pilotId].info.user.fullname;\n      // Get stored name\n      const previousName = chosenPilots[pilotId];\n\n      // If new name is different, update\n      if (currentName !== previousName) {\n        chosenPilots[pilotId] = currentName;\n        chosenPilotsUpdated = true;\n      }\n    }\n  }\n\n  // If anything updated, set new list. This will trigger events.\n  if (chosenPilotsUpdated) {\n    setChosenPilots(chosenPilots);\n  }\n}\n\n// Add new pilots\nexport const addPilots = pilotIds => {\n  const newPilotState = { ...getChosenPilots() };\n\n  let changed = false;\n  for (const pilotId of pilotIds) {\n    if (!(pilotId in newPilotState)) {\n      newPilotState[pilotId] = null;\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    setChosenPilotsAndUpdateNames(newPilotState);\n  }\n};\n\n// Remove pilots\nexport const removePilots = pilotIds => {\n  const newPilotState = { ...getChosenPilots() };\n\n  let changed = false;\n  for (const pilotId of pilotIds) {\n    if (pilotId in newPilotState) {\n      delete newPilotState[pilotId];\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    setChosenPilots(newPilotState);\n  }\n};\n\nexport function useChosenPilots() {\n  const [chosenPilots] = persistentChosenPilots.use();\n\n  return [chosenPilots, addPilots, removePilots];\n}\n","export const lerp = (val1, val2, pct) => {\n  if (val2 === null) {\n    return val1;\n  }\n  if (val1 === null) {\n    return val2;\n  }\n  return (1.0 - pct) * val1 + pct * val2;\n};\n\n// Important:\n// t0<t1<t2<t3 and t1<=t<=t2\nexport const spline = (p0, t0, p1, t1, p2, t2, p3, t3, t) => {\n  // Make timestamps relative.\n  // This enables us to handle unix timestamps (large numbers)\n  t1 -= t0;\n  t2 -= t0;\n  t3 -= t0;\n  t -= t0;\n  t0 = 0;\n\n  const A1 = ((p1 - p0) * t + p0 * t1 - p1 * t0) / (t1 - t0);\n  const A2 = ((p2 - p1) * t + p1 * t2 - p2 * t1) / (t2 - t1);\n  const A3 = ((p3 - p2) * t + p2 * t3 - p3 * t2) / (t3 - t2);\n\n  const B1 = ((A2 - A1) * t + A1 * t2 - A2 * t0) / (t2 - t0);\n  const B2 = ((A3 - A2) * t + A2 * t3 - A3 * t1) / (t3 - t1);\n\n  const C = ((B2 - B1) * t + B1 * t2 - B2 * t1) / (t2 - t1);\n\n  return C;\n};\n\nexport const splineDerivative = (p0, t0, p1, t1, p2, t2, p3, t3, t) => {\n  // Make timestamps relative.\n  // This enables us to handle unix timestamps (large numbers)\n  t1 -= t0;\n  t2 -= t0;\n  t3 -= t0;\n  t -= t0;\n  t0 = 0;\n\n  const A1 = ((p1 - p0) * t + p0 * t1 - p1 * t0) / (t1 - t0);\n  const A2 = ((p2 - p1) * t + p1 * t2 - p2 * t1) / (t2 - t1);\n  const A3 = ((p3 - p2) * t + p2 * t3 - p3 * t2) / (t3 - t2);\n\n  const A1d = (p1 - p0) / (t1 - t0);\n  const A2d = (p2 - p1) / (t2 - t1);\n  const A3d = (p3 - p2) / (t3 - t2);\n\n  const B1 = ((A2 - A1) * t + A1 * t2 - A2 * t0) / (t2 - t0);\n  const B2 = ((A3 - A2) * t + A2 * t3 - A3 * t1) / (t3 - t1);\n\n  const B1d = (A2d * t + A2 - A1d * t - A1 + A1d * t2 - A2d * t0) / (t2 - t0);\n  const B2d = (A3d * t + A3 - A2d * t - A2 + A2d * t3 - A3d * t1) / (t3 - t1);\n\n  const Cd = (B2d * t + B2 - B1d * t - B1 + B1d * t2 - B2d * t1) / (t2 - t1);\n\n  return Cd;\n};\n\n// Interpolates between points p1 and p2\nexport const uniformspline = (p0, p1, p2, p3, pct) => {\n  //return 0.5*pct*pct*pct*(p3-3*p2+3*p1-p0) + 0.5*pct*pct*(2*p0-5*p1+4*p2-p3) + 0.5*pct*(p2-p0) + p1;\n  return (\n    pct *\n      (pct *\n        (pct * (p3 - 3 * p2 + 3 * p1 - p0) + 2 * p0 - 5 * p1 + 4 * p2 - p3) +\n        p2 -\n        p0) *\n      0.5 +\n    p1\n  );\n};\n\nexport const uniformsplineDerivative = (p0, p1, p2, p3, pct) => {\n  //return 1.5*pct*pct*(p3-3*p2+3*p1-p0) + pct*(2*p0-5*p1+4*p2-p3) + 0.5*(p2-p0);\n  return (\n    0.5 *\n    (pct *\n      (3 * pct * (p3 - 3 * p2 + 3 * p1 - p0) +\n        4 * p0 -\n        10 * p1 +\n        8 * p2 -\n        2 * p3) +\n      p2 -\n      p0)\n  );\n};\n","export default class RunningDerivation {\n  constructor(\n    smoothingFactor,\n    derivation_func = (a, b) => b - a,\n    invalid_func = a => a === null\n  ) {\n    this.computeDiff = derivation_func;\n    this.isInvalid = invalid_func;\n    this.old_val = null;\n    this.old_t = null;\n    this.running_avg = null;\n    this.smoothingFactor = smoothingFactor;\n  }\n\n  update(new_val, new_t) {\n    if (\n      this.old_val === null ||\n      new_val === null ||\n      this.old_t === null ||\n      new_t === null ||\n      this.isInvalid(this.old_val) ||\n      this.isInvalid(new_val) ||\n      this.old_t === this.new_t\n    ) {\n      this.old_val = new_val;\n      this.old_t = new_t;\n      return null;\n    }\n\n    let dt = new_t - this.old_t;\n    let diff = this.computeDiff(this.old_val, new_val);\n    let deriv = diff / dt;\n\n    let weight = Math.pow(this.smoothingFactor, dt);\n    if (this.running_avg === null) {\n      this.running_avg = deriv;\n    } else {\n      this.running_avg = weight * this.running_avg + (1.0 - weight) * deriv;\n    }\n\n    this.old_val = new_val;\n    this.old_t = new_t;\n    return this.running_avg;\n  }\n\n  reset() {\n    this.old_val = null;\n    this.old_t = null;\n    this.running_avg = null;\n  }\n}\n","const findBisect = (targetValue, length, dataFn) => {\n  if (length < 1) return 0;\n\n  let minIndex = -1;\n  let maxIndex = length;\n  let currentIndex = 0;\n  let currentValue = null;\n\n  while (minIndex < maxIndex - 1) {\n    currentIndex = ((minIndex + maxIndex) / 2) | 0;\n    currentValue = dataFn(currentIndex);\n\n    if (currentValue < targetValue) {\n      minIndex = currentIndex;\n    } else {\n      maxIndex = currentIndex;\n    }\n  }\n\n  return maxIndex;\n};\n\nexport default findBisect;\n","import RunningDerivation from \"../../util/RunningDerivation\";\nimport { getDistance } from \"geolib\";\nimport findBisect from \"../../util/FindBisect\";\n\nexport const parseTime = isoStr => {\n  return Math.round(Date.parse(isoStr) / 1000);\n};\n\nexport default class FlightAnimationData {\n  constructor() {\n    this.data = [];\n    this.counter_gpsVario = new RunningDerivation(0.7);\n    this.counter_baroVarion = new RunningDerivation(0.7);\n    this.counter_velocity = new RunningDerivation(\n      0.7,\n      (start, end) => getDistance(start, end, 0.01),\n      () => false\n    );\n  }\n\n  at = index => this.data[index];\n\n  clear() {\n    // reset everything\n    this.data = [];\n    this.counter_gpsVario = new RunningDerivation(0.7);\n    this.counter_baroVarion = new RunningDerivation(0.7);\n    this.counter_velocity = new RunningDerivation(\n      0.7,\n      (start, end) => getDistance(start, end, 0.01),\n      () => false\n    );\n  }\n\n  get length() {\n    return this.data.length;\n  }\n\n  isAfterLastElement(timestamp) {\n    if (this.data.length <= 0) return true;\n    return this.data[this.data.length - 1].t < timestamp;\n  }\n\n  append(data) {\n    for (const elem of data) {\n      const timestamp = parseTime(elem.timestamp);\n      const pos = { lat: elem.lat, lng: elem.lon };\n\n      const baroAlt = elem.baroAlt === 0 ? null : elem.baroAlt;\n      const gpsAlt = elem.gpsAlt === 0 ? null : elem.gpsAlt;\n\n      // Compute new running average values\n      const gpsVario = this.counter_gpsVario.update(gpsAlt, timestamp);\n      const baroVario = this.counter_baroVarion.update(baroAlt, timestamp);\n      const velocity = this.counter_velocity.update(pos, timestamp);\n\n      const newElem = {\n        baroAlt: baroAlt,\n        gpsAlt: gpsAlt,\n        elevation: elem.elevation,\n        pos: pos,\n        gpsVario: gpsVario,\n        baroVario: baroVario,\n        velocity: velocity,\n        t: timestamp\n      };\n      this.data.push(newElem);\n    }\n  }\n\n  replace(data) {\n    this.clear();\n    this.append(data);\n  }\n\n  insert(data) {\n    const newElements = [];\n    for (const elem of data) {\n      const timestamp = parseTime(elem.timestamp);\n      const pos = { lat: elem.lat, lng: elem.lon };\n      const baroAlt = elem.baroAlt === 0 ? null : elem.baroAlt;\n      const gpsAlt = elem.gpsAlt === 0 ? null : elem.gpsAlt;\n\n      const newElem = {\n        baroAlt: baroAlt,\n        gpsAlt: gpsAlt,\n        elevation: elem.elevation,\n        pos: pos,\n        gpsVario: null,\n        baroVario: null,\n        velocity: null,\n        t: timestamp\n      };\n      newElements.push(newElem);\n    }\n\n    // Merge\n    const oldElements = this.data;\n    this.data = [];\n\n    let oldPos = 0;\n    let newPos = 0;\n\n    while (true) {\n      if (oldPos >= oldElements.length && newPos >= newElements.length) break;\n      else if (oldPos >= oldElements.length) {\n        this.data.push(newElements[newPos]);\n        newPos += 1;\n      } else if (newPos >= newElements.length) {\n        this.data.push(oldElements[oldPos]);\n        oldPos += 1;\n      } else {\n        const oldEl = oldElements[oldPos];\n        const newEl = newElements[newPos];\n\n        if (newEl.t < oldEl.t) {\n          this.data.push(newEl);\n          newPos += 1;\n        } else if (oldEl.t < newEl.t) {\n          this.data.push(oldEl);\n          oldPos += 1;\n        } else {\n          this.data.push(newEl);\n          oldPos += 1;\n          newPos += 1;\n        }\n      }\n    }\n\n    // Re-compute derivatives\n    this.counter_gpsVario.reset();\n    this.counter_baroVarion.reset();\n    this.counter_velocity.reset();\n    for (let elem of this.data) {\n      const gpsVario = this.counter_gpsVario.update(elem.gpsAlt, elem.t);\n      const baroVario = this.counter_baroVarion.update(elem.baroAlt, elem.t);\n      const velocity = this.counter_velocity.update(elem.pos, elem.t);\n\n      elem.gpsVario = gpsVario;\n      elem.baroVario = baroVario;\n      elem.velocity = velocity;\n    }\n  }\n\n  findBisect = timestamp => {\n    return findBisect(timestamp, this.data.length, pos => this.data[pos].t);\n  };\n\n  findForwardSwipe = (timestamp, startPos) => {\n    let pos = startPos;\n    while (pos < this.data.length && this.data[pos].t < timestamp) {\n      pos += 1;\n    }\n    return pos;\n  };\n\n  getNewestTimestamp = () => {\n    if (this.data.length < 1) return null;\n    return this.data[this.data.length - 1].t;\n  };\n}\n","import { lerp, splineDerivative, spline } from \"../../util/Interpolation\";\nimport FlightAnimationData, { parseTime } from \"./FlightAnimationData\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\n\nclass FlightAnimationDataCache {\n  // IMPORTANT ASSUMPTION IN THIS ENTIRE FILE:\n  // While the cache exists, new data gets only appended. Whenever existing data changes, the cache\n  // will be invalidated.\n  // I.E., chache invariants:\n  //    - existing data entries don't change, indices always point to the same data\n  //    - data timestamps are monotonic rising, meaning, to get newer data the data array only\n  //      needs to be traversed in forward direction, never backwards.\n  // This enables efficient caching and O(1) lookup times.\n  constructor() {\n    this.currentArrayPos = null;\n    this.mapsPath = [];\n    this.mapsPathNewestPos = 0;\n  }\n\n  reset = () => {\n    this.currentArrayPos = null;\n    this.mapsPath = [];\n    this.mapsPathNewestPos = 0;\n  };\n}\n\nclass DataGens {\n  static fallbackData = flightInfos => {\n    return {\n      baroAlt: flightInfos.lastFix.baroAlt,\n      gpsAlt: flightInfos.lastFix.gpsAlt,\n      elevation: flightInfos.lastFix.elevation,\n      pos: {\n        lat: flightInfos.lastFix.lat,\n        lng: flightInfos.lastFix.lon\n      },\n      gpsVario: null,\n      baroVario: null,\n      velocity: null\n    };\n  };\n\n  static takeData(data) {\n    return {\n      baroAlt: data.baroAlt,\n      gpsAlt: data.gpsAlt,\n      elevation: data.elevation,\n      pos: {\n        lat: data.pos.lat,\n        lng: data.pos.lng\n      },\n      gpsVario: data.gpsVario,\n      baroVario: data.baroVario,\n      velocity: data.velocity\n    };\n  }\n\n  static blendData(data1, data2, timeStamp) {\n    const pct = (timeStamp - data1.t) / (data2.t - data1.t);\n    return {\n      baroAlt: lerp(data1.baroAlt, data2.baroAlt, pct),\n      gpsAlt: lerp(data1.gpsAlt, data2.gpsAlt, pct),\n      elevation: lerp(data1.elevation, data2.elevation, pct),\n      pos: {\n        lat: lerp(data1.pos.lat, data2.pos.lat, pct),\n        lng: lerp(data1.pos.lng, data2.pos.lng, pct)\n      },\n      gpsVario: lerp(data1.gpsVario, data2.gpsVario, pct),\n      baroVario: lerp(data1.baroVario, data2.baroVario, pct),\n      velocity: lerp(data1.velocity, data2.velocity, pct)\n    };\n  }\n\n  static blendDataSpline(data0, data1, data2, data3, timeStamp) {\n    const pct = (timeStamp - data1.t) / (data2.t - data1.t);\n    return {\n      baroAlt: lerp(data1.baroAlt, data2.baroAlt, pct),\n      gpsAlt: lerp(data1.gpsAlt, data2.gpsAlt, pct),\n      elevation: lerp(data1.elevation, data2.elevation, pct),\n      pos: {\n        lat: spline(\n          data0.pos.lat,\n          data0.t,\n          data1.pos.lat,\n          data1.t,\n          data2.pos.lat,\n          data2.t,\n          data3.pos.lat,\n          data3.t,\n          timeStamp\n        ),\n        lng: spline(\n          data0.pos.lng,\n          data0.t,\n          data1.pos.lng,\n          data1.t,\n          data2.pos.lng,\n          data2.t,\n          data3.pos.lng,\n          data3.t,\n          timeStamp\n        )\n      },\n      gpsVario: lerp(data1.gpsVario, data2.gpsVario, pct),\n      baroVario: lerp(data1.baroVario, data2.baroVario, pct),\n      velocity: lerp(data1.velocity, data2.velocity, pct)\n    };\n  }\n\n  static computeLinearVelocity(data1, data2) {\n    const t1 = data1.t;\n    const t2 = data2.t;\n    if (t1 === t2) return null;\n\n    const dT = t2 - t1;\n\n    const p1 = data1.pos;\n    const p2 = data2.pos;\n\n    const vLat = (p2.lat - p1.lat) / dT;\n    const vLng = (p2.lng - p1.lng) / dT;\n    return { lat: vLat, lng: vLng };\n  }\n\n  static computeSplineVelocity(d0, d1, d2, d3, t) {\n    const t0 = d0.t;\n    const t1 = d1.t;\n    const t2 = d2.t;\n    const t3 = d3.t;\n\n    const p0 = d0.pos;\n    const p1 = d1.pos;\n    const p2 = d2.pos;\n    const p3 = d3.pos;\n\n    const vLat = splineDerivative(\n      p0.lat,\n      t0,\n      p1.lat,\n      t1,\n      p2.lat,\n      t2,\n      p3.lat,\n      t3,\n      t\n    );\n\n    const vLng = splineDerivative(\n      p0.lng,\n      t0,\n      p1.lng,\n      t1,\n      p2.lng,\n      t2,\n      p3.lng,\n      t3,\n      t\n    );\n\n    return { lat: vLat, lng: vLng };\n  }\n}\n\nclass FlightAnimation {\n  constructor(flightInfos) {\n    // Live data\n    this.liveData = new FlightAnimationData();\n    this.liveDataCache = new FlightAnimationDataCache();\n\n    // Data from flight infos, used as fallback\n    this.flightInfos = null;\n    this.flightInfoData = new FlightAnimationData();\n    this.flightInfoDataCache = new FlightAnimationDataCache();\n\n    // 'landed' state\n    this.landed = flightInfos.landed;\n\n    // Set flight infos\n    this.updateInfos(flightInfos);\n\n    this.settings = {};\n    this.updateSettings();\n\n    // register settings hooks\n    getSetting(Settings.ANIMATION_DELAY).registerCallback(this.updateSettings);\n    getSetting(Settings.LOW_LATENCY).registerCallback(this.updateSettings);\n    getSetting(Settings.PATH_LENGTH).registerCallback(this.updateSettings);\n    getSetting(Settings.LIMIT_PATHS).registerCallback(this.updateSettings);\n  }\n\n  destroy = () => {\n    getSetting(Settings.ANIMATION_DELAY).unregisterCallback(\n      this.updateSettings\n    );\n    getSetting(Settings.LOW_LATENCY).unregisterCallback(this.updateSettings);\n    getSetting(Settings.PATH_LENGTH).unregisterCallback(this.updateSettings);\n    getSetting(Settings.LIMIT_PATHS).unregisterCallback(this.updateSettings);\n  };\n\n  updateSettings = () => {\n    this.settings = {\n      timeOffsetSeconds: getSetting(Settings.ANIMATION_DELAY).getValue(),\n      lowLatencyMode: getSetting(Settings.LOW_LATENCY).getValue(),\n      trackLengthMinutes: getSetting(Settings.PATH_LENGTH).getValue(),\n      limitTracks: getSetting(Settings.LIMIT_PATHS).getValue()\n    };\n    this.liveDataCache.reset();\n    this.flightInfoDataCache.reset();\n  };\n\n  updateInfos = infos => {\n    this.landed |= infos.landed;\n    this.flightInfos = infos;\n    this.flightInfoData.replace(infos.track);\n    this.flightInfoDataCache.reset();\n  };\n\n  updateData = data => {\n    if (data.length < 1) return;\n\n    // Compute start time\n    const data_start_time = parseTime(data[0].timestamp);\n    if (this.liveData.isAfterLastElement(data_start_time)) {\n      // If the new data is newer than everything in the existing data, append\n      this.liveData.append(data);\n    } else {\n      // Otherwise, merge\n      this.liveData.insert(data);\n\n      // Reset animation\n      this.liveDataCache.reset();\n    }\n  };\n\n  updateLanded = () => {\n    console.log(\"Received flight landed message!\");\n    this.landed = true;\n  };\n\n  getInterpolatedData = (data, cache, timeStamp) => {\n    if (data.length < 1) return null;\n\n    if (cache.currentArrayPos === null) {\n      cache.currentArrayPos = data.findBisect(timeStamp);\n    } else {\n      // Optimization because we assume that time runs forward and the next value is after the current value\n      cache.currentArrayPos = data.findForwardSwipe(\n        timeStamp,\n        cache.currentArrayPos\n      );\n    }\n\n    // Compute\n    let blendedData = null;\n    let endOfTrack = false;\n    let startOfTrack = false;\n    let velocityVec = null;\n    if (cache.currentArrayPos <= 0) {\n      // If the timestamp is before our track, return first element\n      blendedData = DataGens.takeData(data.at(0));\n      if (data.length >= 2) {\n        velocityVec = DataGens.computeLinearVelocity(data.at(0), data.at(1));\n      }\n      startOfTrack = true;\n    } else if (cache.currentArrayPos >= data.length) {\n      // If the timestamp is after our track, return last element\n      blendedData = DataGens.takeData(data.at(data.length - 1));\n      if (data.length >= 2) {\n        velocityVec = DataGens.computeLinearVelocity(\n          data.at(data.length - 2),\n          data.at(data.length - 1)\n        );\n      }\n      endOfTrack = true;\n    } else {\n      const data1 = data.at(cache.currentArrayPos - 1);\n      const data2 = data.at(cache.currentArrayPos);\n\n      const data0 =\n        cache.currentArrayPos - 2 >= 0\n          ? data.at(cache.currentArrayPos - 2)\n          : {\n              ...data1,\n              t: data1.t - 1\n            };\n\n      const data3 =\n        cache.currentArrayPos + 1 < data.length\n          ? data.at(cache.currentArrayPos + 1)\n          : {\n              ...data2,\n              t: data2.t + 1\n            };\n\n      // Blend via spline\n      blendedData = DataGens.blendDataSpline(\n        data0,\n        data1,\n        data2,\n        data3,\n        timeStamp\n      );\n      velocityVec = DataGens.computeSplineVelocity(\n        data0,\n        data1,\n        data2,\n        data3,\n        timeStamp\n      );\n    }\n\n    const newestDataTimestamp = data.at(data.length - 1).t;\n\n    return [\n      blendedData,\n      startOfTrack,\n      endOfTrack,\n      newestDataTimestamp,\n      velocityVec\n    ];\n  };\n\n  getFallbackData = () => {\n    return [\n      DataGens.fallbackData(this.flightInfos),\n      false,\n      this.flightInfos.landed,\n      parseTime(this.flightInfos.lastFix.timestamp),\n      null\n    ];\n  };\n\n  computeTrack = (data, cache, timestamp) => {\n    if (data.length < 1) return null;\n\n    const oldestTimestamp = timestamp - this.settings.trackLengthMinutes * 60;\n\n    let track = cache.mapsPath;\n\n    // Append new data\n    while (\n      cache.mapsPathNewestPos < data.length &&\n      data.at(cache.mapsPathNewestPos).t < timestamp\n    ) {\n      const elem = data.at(cache.mapsPathNewestPos);\n      track.push({\n        lat: elem.pos.lat,\n        lng: elem.pos.lng,\n        timestamp: elem.t,\n        elevation: elem.gpsAlt\n      });\n      cache.mapsPathNewestPos += 1;\n    }\n\n    // Delete old data\n    if (this.settings.limitTracks) {\n      const removeChunkSize = 32;\n      let numRemove = 0;\n      while (\n        numRemove + removeChunkSize - 1 < track.length &&\n        track[numRemove + removeChunkSize - 1].timestamp < oldestTimestamp\n      ) {\n        numRemove += removeChunkSize;\n      }\n      if (numRemove > 0) {\n        track = track.slice(numRemove);\n        cache.mapsPath = track;\n      }\n    }\n\n    return track;\n  };\n\n  updateAnimation = animationTimeMillis => {\n    const animationTimeSeconds = this.settings.lowLatencyMode\n      ? animationTimeMillis / 1000\n      : animationTimeMillis / 1000 - this.settings.timeOffsetSeconds;\n\n    let animationResult = this.getInterpolatedData(\n      this.liveData,\n      this.liveDataCache,\n      animationTimeSeconds\n    );\n    if (!animationResult) {\n      animationResult = this.getInterpolatedData(\n        this.flightInfoData,\n        this.flightInfoDataCache,\n        animationTimeSeconds\n      );\n    }\n    if (!animationResult) {\n      animationResult = this.getFallbackData();\n    }\n\n    let track = this.computeTrack(\n      this.liveData,\n      this.liveDataCache,\n      animationTimeSeconds\n    );\n    if (!track) {\n      track = this.computeTrack(\n        this.flightInfoData,\n        this.flightInfoDataCache,\n        animationTimeSeconds\n      );\n    }\n    if (!track) {\n      track = [];\n    }\n\n    let [\n      blendedData,\n      startOfTrack,\n      endOfTrack,\n      newestDataTimestamp,\n      velocityVec\n    ] = animationResult;\n\n    // Special case for endOfTrack for lowLatencyMode\n    if (this.settings.lowLatencyMode) {\n      if (this.landed) {\n        // If 'landed' got signalled, immediately also end the track,\n        // as the 'landed' signal comes simultaneously to the last track message\n        endOfTrack = true;\n      } else {\n        // Otherwise, determine by how long ago we last heard from the pilot whether\n        // the track is broken or not.\n        // Has to be treated different than the default case, because in lowLatencyMode we\n        // are always at the end of the track.\n        endOfTrack = newestDataTimestamp < animationTimeSeconds - 80;\n      }\n    }\n\n    const result = {\n      ...blendedData,\n      startOfTrack: startOfTrack,\n      endOfTrack: endOfTrack,\n      landed: this.landed,\n      newestDataTimestamp: newestDataTimestamp,\n      track: track,\n      velocityVec: velocityVec\n    };\n\n    return result;\n  };\n\n  getNewestTimestamp = () => this.liveData.getNewestTimestamp();\n}\n\nexport default FlightAnimation;\n","class HighPrecisionTimeSync {\n  // Tolerance should be larger than the duration of one animation frame.\n  // Most animations are 60Hz, meaning 16ms, so 20ms is fine.\n  constructor(tolerance = 20) {\n    this.offset = 0.0;\n    this.tolerance = tolerance;\n  }\n\n  get = (currentHighPrecisionTime, currentTime) => {\n    let estimatedTime = currentHighPrecisionTime + this.offset;\n    const offBy = estimatedTime - currentTime;\n\n    if (offBy > this.tolerance || offBy < -this.tolerance) {\n      this.offset -= offBy;\n      estimatedTime = currentHighPrecisionTime + this.offset;\n    }\n\n    return estimatedTime;\n  };\n}\n\nexport default HighPrecisionTimeSync;\n","import {\n  getChosenPilots,\n  getChosenPilotsObject\n} from \"../../common/PersistentState/ChosenPilots\";\nimport FlightAnimation from \"./FlightAnimation\";\nimport HighPrecisionTimeSync from \"../../util/HighPrecisionTimeSync\";\nimport { Settings, getSetting } from \"../../common/PersistentState/Settings\";\n\nfunction eqSet(as, bs) {\n  if (as.size !== bs.size) return false;\n  for (const a of as) if (!bs.has(a)) return false;\n  return true;\n}\n\nexport default class XContestAnimation {\n  constructor(setSubscribedFlights) {\n    this._currentAnimationData = {};\n    this._callbacks = [];\n    this._subscribedPilots = getChosenPilots();\n    this._subscribedFlights = new Set();\n    this._pilotInfos = {};\n    this._flightAnimations = {};\n    this._highPrecisionTimeSync = new HighPrecisionTimeSync();\n    const settings_limitFps = getSetting(Settings.FPS_LIMIT);\n    const settings_fps = getSetting(Settings.FPS_RATE);\n\n    // Cached settings values for performance improvements. Not sure if actually worth\n    this._setting_limitFps = settings_limitFps.getValue();\n    this._setting_fps = settings_fps.getValue();\n    settings_limitFps.registerCallback(value => {\n      this._setting_limitFps = value;\n    });\n    settings_fps.registerCallback(value => {\n      this._setting_fps = value;\n    });\n\n    this._setSubscribedFlightsCallback = flights => {\n      setSubscribedFlights(Array.from(flights));\n    };\n    getChosenPilotsObject().registerCallback(this.setSubscribedPilots);\n    requestAnimationFrame(this.animationLoop);\n  }\n\n  // Animation loop\n  _nextUpdate = Date.now();\n  animationLoop = () => {\n    // Can't use time of function parameter, because we need absolute time\n    const absTime = Date.now();\n\n    const frameTimeDelta = 1000.0 / this._setting_fps;\n\n    if (!this._setting_limitFps || absTime >= this._nextUpdate) {\n      if (this._setting_limitFps) {\n        this._nextUpdate += frameTimeDelta;\n        if (absTime > this._nextUpdate) {\n          this._nextUpdate = absTime;\n        }\n      }\n\n      const newAnimationData = {};\n      Object.keys(this._subscribedPilots).forEach(pilot => {\n        if (pilot in this._pilotInfos) {\n          const flightId = this._pilotInfos[pilot].flightId;\n          if (flightId in this._flightAnimations) {\n            const flightAnim = this._flightAnimations[flightId];\n            newAnimationData[pilot] = flightAnim.updateAnimation(absTime);\n          }\n        }\n      });\n      this._submitAnimationFrame(newAnimationData);\n    }\n    requestAnimationFrame(this.animationLoop);\n  };\n\n  _submitAnimationFrame = data => {\n    this._currentAnimationData = data;\n    for (const cb of this._callbacks) {\n      cb(data);\n    }\n  };\n\n  // External\n  setSubscribedPilots = subscribedPilots => {\n    this._subscribedPilots = subscribedPilots;\n    this._updateImportantFlights();\n  };\n\n  pushNewInfo = pilotInfo => {\n    console.log(\"newInfo: \", pilotInfo);\n    this._pilotInfos = pilotInfo;\n    this._updateImportantFlights();\n\n    // Update flight info in flightAnimations\n    Object.values(pilotInfo).forEach(flightInfo => {\n      const flightId = flightInfo.flightId;\n      if (flightId in this._flightAnimations) {\n        this._flightAnimations[flightId].updateInfos(flightInfo);\n      }\n    });\n  };\n\n  pushNewData = (trackId, trackData) => {\n    console.log(\"newTrackdata: \", trackId, trackData);\n    if (trackId in this._flightAnimations)\n      this._flightAnimations[trackId].updateData(trackData);\n  };\n\n  pushFlightLanded = flightId => {\n    if (flightId in this._flightAnimations)\n      this._flightAnimations[flightId].updateLanded();\n  };\n\n  // callback gets called every frame with new data\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n    cb(this._currentAnimationData);\n  };\n\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n  };\n\n  getData = () => {\n    return this._currentAnimationData;\n  };\n\n  // Internal\n  _updateImportantFlights = () => {\n    // Filter important flights\n    let importantFlights = {};\n    Object.values(this._pilotInfos)\n      .filter(val => val.info.user.username in this._subscribedPilots)\n      .forEach(val => {\n        importantFlights[val.flightId] = val;\n      });\n\n    let importantFlightSet = new Set(Object.keys(importantFlights));\n\n    // Cleanup old entries of _flightAnimations\n    {\n      const toRemove = [];\n      for (const flightId in this._flightAnimations) {\n        if (!(flightId in importantFlights)) {\n          toRemove.push(flightId);\n        }\n      }\n      for (const flightId of toRemove) {\n        console.log(\"Removing flightAnimation of '\" + flightId + \"' ...\");\n        this._flightAnimations[flightId].destroy();\n        delete this._flightAnimations[flightId];\n      }\n    }\n\n    // Add new flightAnimations\n    Object.entries(importantFlights).forEach(([flightId, flightInfo]) => {\n      if (!(flightId in this._flightAnimations)) {\n        this._flightAnimations[flightId] = new FlightAnimation(flightInfo);\n      }\n    });\n\n    // Send subscription change to socket\n    if (!eqSet(importantFlightSet, this._subscribedFlights)) {\n      this._subscribedFlights = importantFlightSet;\n\n      // Get the timestamp of the newest track element, to prevent loading the same data multiple times\n      let flightsWithTimestamps = [];\n      console.log(this._flightAnimations);\n      importantFlightSet.forEach(flightId => {\n        console.log(flightId, this._flightAnimations[flightId]);\n        flightsWithTimestamps.push([\n          flightId,\n          this._flightAnimations[flightId].getNewestTimestamp()\n        ]);\n      });\n\n      console.log(\n        \"Changing flight subscribtion: \",\n        this._subscribedFlights,\n        importantFlightSet\n      );\n      this._setSubscribedFlightsCallback(flightsWithTimestamps);\n    }\n  };\n}\n","import { useState, useEffect } from \"react\";\n\nclass EventfulState {\n  constructor(initialValue) {\n    this._callbacks = [];\n    this._callbackData = initialValue;\n  }\n\n  set = value => {\n    this._callbackData = value;\n    for (const cb of this._callbacks) {\n      cb(value);\n    }\n  };\n\n  getValue = () => this._callbackData;\n\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n  };\n\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n  };\n\n  use = () => {\n    const [value, setValue] = useState(this._callbackData);\n\n    useEffect(() => {\n      // trigger component update on change\n      this.registerCallback(setValue);\n      return () => this.unregisterCallback(setValue);\n    }, []);\n\n    return value;\n  };\n}\n\nexport default EventfulState;\n","import XContestSocket from \"./XContestSocket\";\nimport XContestAnimation from \"./XContestAnimation\";\nimport EventfulState from \"../../util/EventfulState\";\nimport { setChosenPilotsAndUpdateNames } from \"../../common/PersistentState/ChosenPilots\";\n\nexport const ConnectionState = {\n  CONNECTING: \"connecting\", //orange\n  ERROR: \"error\", //red\n  ESTABLISHED: \"established\", //yellow\n  ACTIVE: \"active\", //green\n  INACTIVE: \"inactive\", //orange\n  NO_CONNECTION: \"no connection\", //red\n  NO_INFORMATION: \"no information\" //gray\n};\n\nclass XContestInterface {\n  constructor() {\n    this.pilots = [];\n    this.connectionState = new EventfulState(ConnectionState.NO_INFORMATION);\n    this.pilotInfos = new EventfulState([]);\n    this.socket = new XContestSocket(\n      this.onConnectionStateChanged,\n      this.onInfoMessageReceived,\n      this.onTracklogMessageReceived,\n      this.onFlightLandedMessageReceived\n    );\n    this.animation = new XContestAnimation(this.setSubscribedFlights);\n  }\n\n  setSubscribedFlights = flights => {\n    this.socket.setSubscribedFlights(flights);\n  };\n\n  getPilotInfos = () => this.pilots;\n\n  onConnectionStateChanged = state => {\n    this.connectionState.set(state);\n  };\n\n  onInfoMessageReceived = msg => {\n    this.pilots = {};\n    for (const [trackId, track] of msg) {\n      // Skip if we have a newer track of the same person\n      if (track.overriden) continue;\n\n      track.flightId = trackId;\n\n      this.pilots[track.info.user.username] = track;\n    }\n    this.animation.pushNewInfo(this.pilots);\n    this.pilotInfos.set(this.pilots);\n\n    // Set pilot names if available\n    setChosenPilotsAndUpdateNames();\n  };\n\n  onTracklogMessageReceived = msg => {\n    this.animation.pushNewData(msg.flightUuid, msg.trackChunk);\n  };\n\n  onFlightLandedMessageReceived = flightId => {\n    this.animation.pushFlightLanded(flightId);\n  };\n}\n\n// Singleton stuff\nlet _instance = null;\nexport const getXContestInterface = () => {\n  if (!_instance) {\n    _instance = new XContestInterface();\n  }\n  return _instance;\n};\n\nexport const useXContestPilots = () => getXContestInterface().pilotInfos.use();\nexport const useXContestConnectionState = () =>\n  getXContestInterface().connectionState.use();\n","// seed\nfunction xmur3(str) {\n  for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++) {\n    h = Math.imul(h ^ str.charCodeAt(i), 3432918353);\n    h = (h << 13) | (h >>> 19);\n  }\n  return function() {\n    h = Math.imul(h ^ (h >>> 16), 2246822507);\n    h = Math.imul(h ^ (h >>> 13), 3266489909);\n    return (h ^= h >>> 16) >>> 0;\n  };\n}\n\n// rng\nfunction sfc32(a, b, c, d) {\n  return function() {\n    a >>>= 0;\n    b >>>= 0;\n    c >>>= 0;\n    d >>>= 0;\n    var t = (a + b) | 0;\n    a = b ^ (b >>> 9);\n    b = (c + (c << 3)) | 0;\n    c = (c << 21) | (c >>> 11);\n    d = (d + 1) | 0;\n    t = (t + d) | 0;\n    c = (c + t) | 0;\n    return (t >>> 0) / 4294967296;\n  };\n}\n\nexport default function createRng(seedString) {\n  // Create xmur3 state:\n  const seed = xmur3(seedString);\n  // Output four 32-bit hashes to provide the seed for sfc32.\n  const rand = sfc32(seed(), seed(), seed(), seed());\n  return rand;\n}\n","import createRng from \"./rng\";\nimport convert from \"color-convert\";\n\nexport default function string2color(str, lightness) {\n  const rand = createRng(str);\n\n  const colorHue = Math.min(Math.max(rand() * 360, 0), 360);\n  const hexColor = \"#\" + convert.hsl.hex(colorHue, 100, lightness);\n  return hexColor;\n}\n","import { getPilotIcon } from \"../../common/PilotIcon\";\nimport string2color from \"../../util/string2color\";\n\nexport default class GoogleMapsTrack {\n  constructor(google, map, pilotInfo, initialData) {\n    this.google = google;\n    this.pilotColor = string2color(pilotInfo.info.user.username, 70);\n    this.trackColor = string2color(pilotInfo.info.user.username, 40);\n    this.marker = new this.google.maps.Marker({\n      map: map,\n      position: initialData.pos,\n      title: pilotInfo.info.user.fullname\n    });\n    this.track = new this.google.maps.Polyline({\n      map: map,\n      path: [],\n      strokeColor: this.trackColor\n    });\n    this.currentTrackVersion = { startTime: null, endTime: null, length: null };\n    this.newestTrackSegment = new this.google.maps.Polyline({\n      map: map,\n      path: [],\n      strokeColor: this.trackColor\n    });\n  }\n\n  setMap = map => {\n    this.marker.setMap(map);\n    this.track.setMap(map);\n    this.newestTrackSegment.setMap(map);\n  };\n\n  _updateTrack = track => {\n    if (!track || track.length < 1) return;\n\n    // Compute identifiers to reduce the amount if maps updates\n    const length = track.length;\n    const startTime = track[0].timestamp;\n    const endTime = track[length - 1].timestamp;\n    if (\n      startTime === this.currentTrackVersion.startTime &&\n      endTime === this.currentTrackVersion.endTime &&\n      length === this.currentTrackVersion.length\n    ) {\n      return;\n    }\n\n    // If the start/end time or length changed, update track in map\n    this.currentTrackVersion.startTime = startTime;\n    this.currentTrackVersion.endTime = endTime;\n    this.currentTrackVersion.length = length;\n\n    this.track.setPath(track);\n  };\n\n  updateData = data => {\n    this.marker.setPosition(data.pos);\n    this.marker.setIcon(\n      getPilotIcon(\n        this.google,\n        data.startOfTrack,\n        data.endOfTrack,\n        data.landed,\n        data.pos,\n        data.velocityVec,\n        this.pilotColor\n      )\n    );\n    if (data.track.length > 0) {\n      this.newestTrackSegment.setPath([\n        data.track[data.track.length - 1],\n        data.pos\n      ]);\n    }\n    this._updateTrack(data.track);\n  };\n}\n","import { getRhumbLineBearing } from \"geolib\";\n\n//const path_questionmark =\n//  \"m 12.747342,2.0001932 c -0.254753,-0.0015 -0.513283,0.0061 -0.773833,0.0228 C 8.104865,2.2564442 6.070752,4.4579604 5.904,8.4266554 h 3.901734 c 0.03335,-1.367366 0.834151,-2.401618 2.234867,-2.56837 1.400716,-0.133402 2.734861,0.200232 3.135066,1.134043 0.433555,1.033862 -0.533606,2.234215 -1.000512,2.734471 -0.86711,0.9338106 -2.267826,1.6342986 -3.001534,2.6348096 -0.700358,1.000512 -0.834151,2.301567 -0.900851,3.902386 h 3.43535 c 0.03335,-1.033862 0.09979,-2.001153 0.566695,-2.63481 0.767059,-1.033862 1.900972,-1.500768 2.834783,-2.334527 0.90046,-0.767059 1.867621,-1.7008696 2.001023,-3.1682856 0.531522,-4.033312 -2.54199,-6.1030962 -6.363279,-6.1261792 z M 12.073821,17.730891 A 2.1677748,2.1344245 0 0 0 9.906046,19.865445 2.1677748,2.1344245 0 0 0 12.073821,22 2.1677748,2.1344245 0 0 0 14.241595,19.865445 2.1677748,2.1344245 0 0 0 12.073821,17.730891 Z\";\nconst path_questionmark_min =\n  \"M 12.747,2 C 12.492,1.998 12.234,2.006 11.973,2.023 8.105,2.256 6.071,4.458 5.904,8.427 H 9.806 C 9.839,7.06 10.64,6.025 12.041,5.859 c 1.401,-0.133 2.735,0.2 3.135,1.134 0.434,1.034 -0.534,2.234 -1.001,2.734 -0.867,0.934 -2.268,1.634 -3.002,2.635 -0.7,1.001 -0.834,2.302 -0.901,3.902 h 3.435 c 0.033,-1.034 0.1,-2.001 0.567,-2.635 0.767,-1.034 1.901,-1.501 2.835,-2.335 0.9,-0.767 1.868,-1.701 2.001,-3.168 C 19.642,4.093 16.568,2.023 12.747,2 Z M 12.074,17.731 A 2.168,2.134 0 0 0 9.906,19.865 2.168,2.134 0 0 0 12.074,22 2.168,2.134 0 0 0 14.242,19.865 2.168,2.134 0 0 0 12.074,17.731 Z\";\nconst path_arrow =\n  \"M12.93 4.26l6.15 14.99c.34.83-.51 1.66-1.33 1.29l-5.34-2.36c-.26-.11-.55-.11-.81 0l-5.34 2.36c-.82.36-1.67-.46-1.33-1.29l6.15-14.99c.33-.83 1.51-.83 1.85 0z\";\nconst path_idle =\n  \"M 12,2 C 8.13,2 5,5.13 5,9 c 0,5.25 7,13 7,13 0,0 7,-7.75 7,-13 0,-3.87 -3.13,-7 -7,-7\";\n//const path_landed =\n//  \"M 12.662857,19.784264 19.12,15.167121 C 19.668572,14.77855 20,14.149978 20,13.475692 20,11.772835 18.08,10.789978 16.697143,11.772835 L 12,15.121407 7.302857,11.772835 C 5.92,10.778549 4,11.772835 4,13.475692 c 0,0.674286 0.331429,1.314286 0.88,1.702858 l 6.457143,4.617142 c 0.4,0.274286 0.925714,0.274286 1.325714,-0.01143 z m 0,-8 L 19.12,7.1785496 C 19.668572,6.7785496 20,6.1499781 20,5.4756924 20,3.7728353 18.08,2.7785495 16.697143,3.7728353 L 12,7.1214067 7.302857,3.7728353 C 5.92,2.7785495 4,3.7728353 4,5.4756924 4,6.1499781 4.331429,6.7899782 4.88,7.1785496 l 6.457143,4.6171424 c 0.4,0.274286 0.925714,0.274286 1.325714,-0.01143 z\";\nconst path_landed_min =\n  \"m 12.66,19.78 6.46,-4.61 C 19.67,14.78 20,14.15 20,13.48 20,11.77 18.08,10.79 16.7,11.77 L 12,15.12 7.3,11.77 c -1.38,-0.99 -3.3,0 -3.3,1.71 0,0.67 0.33,1.31 0.88,1.7 l 6.46,4.62 c 0.4,0.27 0.93,0.27 1.33,-0.01 z m 0,-8 6.46,-4.6 C 19.67,6.78 20,6.15 20,5.48 20,3.77 18.08,2.78 16.7,3.77 L 12,7.12 7.3,3.77 C 5.92,2.78 4,3.77 4,5.48 4,6.15 4.33,6.79 4.88,7.18 l 6.46,4.62 c 0.4,0.27 0.93,0.27 1.33,-0.01 z\";\n\nexport const getPilotIcon = (\n  google,\n  waitingForStart,\n  endOfTrack,\n  hasLanded,\n  pos,\n  velocityVec,\n  color\n) => {\n  /*\n    Four different symbols:\n      - Flying\n      - Signal lost\n      - Landed\n      - Not yet started (idle)\n  */\n\n  if (endOfTrack) {\n    if (hasLanded) {\n      // LANDED\n      return {\n        path: path_landed_min,\n        fillColor: color,\n        fillOpacity: 1,\n        anchor: new google.maps.Point(12, 20),\n        strokeWeight: 1,\n        scale: 1.2\n      };\n    } else {\n      // SIGNAL LOST\n      return {\n        path: path_questionmark_min,\n        fillColor: color,\n        fillOpacity: 1,\n        anchor: new google.maps.Point(12, 12),\n        strokeWeight: 1,\n        scale: 1.2\n      };\n    }\n  }\n\n  if (waitingForStart) {\n    // NOT YET STARTED\n    return {\n      path: path_idle,\n      fillColor: color,\n      fillOpacity: 1,\n      anchor: new google.maps.Point(12, 22),\n      strokeWeight: 1,\n      scale: 1.2\n    };\n  }\n\n  // TODO Compute direction\n  const bearing =\n    velocityVec === null\n      ? 0\n      : getRhumbLineBearing(pos, {\n          lat: pos.lat + velocityVec.lat,\n          lng: pos.lng + velocityVec.lng\n        });\n\n  // FLYING\n  return {\n    path: path_arrow,\n    fillColor: color,\n    fillOpacity: 1,\n    anchor: new google.maps.Point(12, 12),\n    strokeWeight: 1,\n    scale: 1.2,\n    rotation: bearing\n  };\n};\n","import { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\nimport GoogleMapsTrack from \"./GoogleMapsTrack\";\n\nexport default class MapAnimator {\n  constructor(map, google) {\n    this.map = map;\n    this.google = google;\n    this.tracks = {};\n  }\n\n  cleanupOldTracks = data => {\n    const toRemove = [];\n    for (const pilot in this.tracks) {\n      if (!(pilot in data)) {\n        toRemove.push(pilot);\n      }\n    }\n    for (const pilot of toRemove) {\n      this.tracks[pilot].setMap(null);\n      delete this.tracks[pilot];\n    }\n  };\n\n  update = data => {\n    const pilotInfos = getXContestInterface().getPilotInfos();\n\n    // Remove tracks that we unsubscribed from\n    this.cleanupOldTracks(data);\n\n    // Update all pilots\n    Object.entries(data).forEach(([pilot, pilotData]) => {\n      if (!(pilot in pilotInfos)) return;\n      const info = pilotInfos[pilot];\n\n      // Add track if it doesn't exist\n      if (!(pilot in this.tracks)) {\n        this.tracks[pilot] = new GoogleMapsTrack(\n          this.google,\n          this.map,\n          info,\n          pilotData\n        );\n      }\n\n      // Update all tracks properties\n      const track = this.tracks[pilot];\n      track.updateData(pilotData);\n    });\n  };\n}\n","import React, { useState, useRef, useLayoutEffect, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport useGoogleMapsApi from \"../../common/GoogleMapsApiLoader\";\nimport { LoadingPage, ErrorPage } from \"../StatusPages\";\nimport mapStyle from \"./MapStyle.json\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\nimport MapAnimator from \"./MapAnimator\";\nimport { pure } from \"recompose\";\n\nconst LiveMap = () => {\n  const [mapReady, mapError, google] = useGoogleMapsApi();\n  const mapsRef = useRef();\n  const [map, setMap] = useState(null);\n\n  // Initialize Map\n  useLayoutEffect(() => {\n    if (mapReady && !map) {\n      setMap(\n        new google.maps.Map(mapsRef.current, {\n          center: { lat: 46.509012, lng: 11.827984 },\n          mapTypeId: \"terrain\",\n          zoom: 12,\n          maxZoom: 15,\n          disableDefaultUI: true,\n          scaleControl: true,\n          fullscreenControl: true,\n          styles: mapStyle\n        })\n      );\n    }\n  }, [mapReady, map, google, mapsRef]);\n\n  // Register map for updates\n  useEffect(() => {\n    if (map && google) {\n      const mapAnimator = new MapAnimator(map, google);\n      const mapAnimatorUpdateCallback = mapAnimator.update;\n      getXContestInterface().animation.registerCallback(\n        mapAnimatorUpdateCallback\n      );\n\n      return () => {\n        getXContestInterface().animation.unregisterCallback(\n          mapAnimatorUpdateCallback\n        );\n      };\n    }\n  }, [map, google]);\n\n  return (\n    <React.Fragment>\n      <Box\n        width=\"100%\"\n        height=\"100%\"\n        display={mapReady ? \"block\" : \"none\"}\n        ref={mapsRef}\n      ></Box>\n      <LoadingPage\n        message=\"Loading Maps ...\"\n        hideIf={mapReady || mapError}\n      ></LoadingPage>\n      <ErrorPage message=\"Unable to load map!\" hideIf={!mapError}></ErrorPage>\n    </React.Fragment>\n  );\n};\n\nexport default pure(LiveMap);\n","const ourHistory = [];\n\nwindow.addEventListener(\"popstate\", () => {\n  if (ourHistory.length === 0) {\n    console.warn(\"History was already 0!\");\n  }\n  const callback = ourHistory.pop();\n  console.debug(\"- History size:\", ourHistory.length);\n  if (ourHistory.length > 0) window.history.pushState({}, \"\");\n  if (callback) callback();\n});\n\nexport const useHistory = () => {\n  const pushFunction = cb => {\n    const histSize = ourHistory.length;\n    ourHistory.push(cb);\n    console.debug(\"+ History size:\", ourHistory.length);\n    if (histSize === 0) {\n      window.history.pushState({}, \"\");\n    }\n  };\n\n  const popFunction = () => {\n    //console.log(\"window.history.back()\", window.history.length);\n    window.history.back();\n  };\n\n  return { push: pushFunction, pop: popFunction };\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Dialog } from \"@material-ui/core\";\nimport { useHistory } from \"../common/History\";\n\n// The difficult here is to fire exactly one history.back() for any case.\n// Cases:\n// - \"open\" changes to 'false'\n// - \"Dialog.onClose()\" => same as previous, as can be forwarded\n// - History gets reverted\n\nconst SubWindow = props => {\n  const [open, _setOpen] = useState(false);\n  const [historyOpen, _setHistoryOpen] = useState(false);\n  const history = useHistory();\n\n  const openWindow = () => {\n    // TODO create history entry\n    history.push(() => {\n      _setOpen(false);\n      props.onClose();\n    });\n    _setOpen(true);\n    _setHistoryOpen(true);\n  };\n\n  // If we should be open, initiate a window opening.\n  // Special case: if we just closed the window, don't immediately re-open it,\n  // but signal the parent class to close instead.\n  if (props.open && !open) {\n    if (historyOpen) {\n      // This creates an endless feedback loop if props.onClose doesn't set\n      // props.open to false. Therefore we require props.onClose to do so.\n      props.onClose();\n\n      // To further prevent the feedback loop, we now set the history open state.\n      // Now, if props.onClose failed to set props.open to false, the window\n      // will immediately re-open.\n      // Currently commented out, because it proved unstable and caused state\n      // fluctuations.\n      //_setHistoryOpen(false);\n    } else {\n      openWindow();\n    }\n  }\n\n  // If both the external and internal state agree that the window is now close,\n  // reset the history state. The history state prevents the window\n  // from immediately re-opening if the external and internal states disagree.\n  if (historyOpen && !open && !props.open) {\n    _setHistoryOpen(false);\n  }\n\n  // If we are open, the history entry still exists.\n  // Therefore, go back in history if we get signalled to close.\n  if (open && !props.open) {\n    history.pop();\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => {\n        props.onClose();\n      }}\n      fullScreen={props.fullScreen}\n      maxWidth={props.maxWidth}\n      fullWidth={props.fullWidth}\n      classes={props.classes}\n    >\n      {props.children}\n    </Dialog>\n  );\n};\n\nexport default SubWindow;\n","import { getSetting, Settings } from \"./PersistentState/Settings\";\n\nclass GPSProvider {\n  constructor() {\n    this._callbacks = [];\n    this._watchId = null;\n    this._gpsData = null;\n\n    let gpsEnabledSetting = getSetting(Settings.GPS_ENABLED);\n    gpsEnabledSetting.registerCallback(this._updateGPSState);\n    this._updateGPSState();\n  }\n\n  _updateGPSState = () => {\n    let gpssettingEnabled = getSetting(Settings.GPS_ENABLED).getValue();\n    let callbackRegistered = this._callbacks.length > 0;\n\n    let enableGps = gpssettingEnabled && callbackRegistered;\n\n    if (this._watchId === null && enableGps && navigator.geolocation) {\n      this._watchId = navigator.geolocation.watchPosition(\n        this._onNewGPSData,\n        this._onGPSError,\n        { enableHighAccuracy: true }\n      );\n      console.log(\"GPS: On\");\n    }\n\n    if (this._watchId !== null && !enableGps) {\n      navigator.geolocation.clearWatch(this._watchId);\n      this._watchId = null;\n      this._setGPSData(null);\n      console.log(\"GPS: Off\");\n    }\n\n    //console.log(\"UPDATE_GPS_STATE\", enableGps, this._callbacks.length);\n  };\n\n  _setGPSData = data => {\n    console.log(\"GPS DATA:\", data);\n    this._gpsData = data;\n    for (const cb of this._callbacks) {\n      cb(data);\n    }\n  };\n\n  _onNewGPSData = data => {\n    this._setGPSData(data);\n  };\n  _onGPSError = () => {\n    this._setGPSData(null);\n  };\n\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n    this._updateGPSState();\n    cb(this._gpsData);\n  };\n\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n    this._updateGPSState();\n  };\n\n  getData = () => {\n    return this._gpsData;\n  };\n}\n\n// Singleton stuff\nlet _instance = null;\nexport const getGPSProvider = () => {\n  if (!_instance) {\n    _instance = new GPSProvider();\n  }\n  return _instance;\n};\n","import React, { Component } from \"react\";\nimport { getGPSProvider } from \"../common/GPSProvider\";\nimport { getDistance, getRhumbLineBearing } from \"geolib\";\n\nfunction formatTimeDiff(millis) {\n  let negative = \"\";\n\n  if (millis < 0) {\n    millis = -millis;\n    negative = \"-\";\n  }\n\n  let secs = Math.floor(millis / 1000);\n  if (secs < 60) {\n    return negative + secs + \" sec\";\n  }\n\n  let mins = Math.floor(secs / 60);\n  if (mins < 60) {\n    return negative + mins + \" min\";\n  }\n\n  let hours = Math.floor(mins / 60);\n  mins = mins - hours * 60;\n  if (hours < 24) {\n    return negative + hours + \":\" + mins.toString().padStart(2, \"0\") + \" h\";\n  }\n\n  let days = Math.floor(hours / 24);\n  hours = hours - days * 24;\n  return (\n    negative +\n    days +\n    \"d \" +\n    hours +\n    \":\" +\n    mins.toString().padStart(2, \"0\") +\n    \" h\"\n  );\n}\n\nfunction timestampToTimeString(timestamp) {\n  let time = new Date(timestamp);\n  return time.toLocaleTimeString();\n}\n\nexport const LastFixState = props => {\n  const timestamp = props.timestamp;\n  const landed = props.landed;\n  const relative = props.relative;\n\n  if (timestamp == null) {\n    return <span>never</span>;\n  }\n  let time_diff = Date.parse(timestamp) - Date.now();\n\n  let timeStr = \"\";\n  if (relative) timeStr = formatTimeDiff(time_diff);\n  else timeStr = timestampToTimeString(timestamp);\n\n  if (landed) {\n    return <span style={{ color: \"#346B8F\" }}>&#10004; {timeStr}</span>;\n  }\n\n  if (-time_diff < 120000) {\n    if (relative)\n      return (\n        <span style={{ color: \"green\" }}>\n          <span role=\"img\" aria-hidden>\n            &#9899;\n          </span>{\" \"}\n          LIVE\n        </span>\n      );\n    else\n      return (\n        <span style={{ color: \"green\" }}>\n          <span role=\"img\" aria-hidden>\n            &#9899;\n          </span>{\" \"}\n          {timeStr}\n        </span>\n      );\n  }\n\n  if (relative) return <span style={{ color: \"red\" }}>! LIVE ({timeStr})</span>;\n  else return <span style={{ color: \"red\" }}>! {timeStr}</span>;\n};\n\nexport class LastFixArrow extends Component {\n  constructor(props) {\n    super(props);\n    this.gpsData = getGPSProvider().getData();\n    this.state = {};\n\n    this.distanceRef = React.createRef();\n    this.arrowRef = React.createRef();\n  }\n\n  onNewGPSDataReceived = gpsData => {\n    this.gpsData = gpsData;\n\n    // Otherwise, directly update through the refs\n    this.updateThroughRef();\n  };\n\n  componentDidMount() {\n    getGPSProvider().registerCallback(this.onNewGPSDataReceived);\n  }\n  componentWillUnmount() {\n    getGPSProvider().unregisterCallback(this.onNewGPSDataReceived);\n  }\n\n  updateThroughRef = () => {\n    if (this.arrowRef.current) {\n      const arrowStyle = LastFixArrow.getArrowRotationStyle(\n        this.gpsData,\n        this.props.lastFix\n      );\n      Object.assign(this.arrowRef.current.style, arrowStyle);\n    }\n    if (this.distanceRef.current) {\n      this.distanceRef.current.innerHTML = LastFixArrow.getDistance(\n        this.gpsData,\n        this.props.lastFix\n      );\n    }\n  };\n\n  static getDistance(myPosition, pilotFix) {\n    if (myPosition === null || pilotFix === null) return \"--km\";\n\n    const distance = getDistance(\n      { lat: myPosition.coords.latitude, lng: myPosition.coords.longitude },\n      pilotFix\n    );\n    return (Math.round(distance / 100) / 10).toString() + \"km\";\n  }\n\n  static getArrowRotationStyle(myPosition, pilotFix) {\n    if (myPosition === null || pilotFix === null) return {};\n    const bearing = getRhumbLineBearing(\n      { lat: myPosition.coords.latitude, lng: myPosition.coords.longitude },\n      pilotFix\n    );\n    const transform = \"rotate(\" + bearing.toString() + \"deg)\";\n\n    const rotationStyle = {\n      transform: transform,\n\n      /* Safari */\n      WebkitTransform: transform,\n\n      /* Firefox */\n      MozTransform: transform,\n\n      /* IE */\n      msTransform: transform,\n\n      /* Opera */\n      OTransform: transform\n    };\n    return rotationStyle;\n  }\n\n  render() {\n    return (\n      <span>\n        <span ref={this.distanceRef}>\n          {LastFixArrow.getDistance(this.gpsData, this.props.lastFix)}\n        </span>{\" \"}\n        <div\n          ref={this.arrowRef}\n          style={{\n            display: \"inline-block\",\n            ...LastFixArrow.getArrowRotationStyle(\n              this.gpsData,\n              this.props.lastFix\n            )\n          }}\n        >\n          ↑\n        </div>\n      </span>\n    );\n  }\n}\n","import React from \"react\";\nimport { TableCell, Typography, Box } from \"@material-ui/core\";\nimport { LastFixState, LastFixArrow } from \"../../util/LastFixState\";\n\nexport const headerHeight = 37;\nexport const rowHeight = 57;\n\nexport const TableHeader = () => {\n  return (\n    <TableCell\n      component=\"div\"\n      variant=\"head\"\n      className=\"MuiTableCell-stickyHeader\"\n      style={{\n        height: headerHeight,\n        display: \"flex\",\n        alignItems: \"center\",\n        boxSizing: \"border-box\"\n      }}\n    >\n      <div style={{ flex: \"1\" }}>Name</div>\n      <div style={{ width: \"25%\", textAlign: \"right\" }}>State</div>\n      <div style={{ width: \"27%\", textAlign: \"right\" }}>Country</div>\n    </TableCell>\n  );\n};\n\nclass PilotSelectorListRow extends React.PureComponent {\n  render() {\n    const {\n      fullname,\n      username,\n      lastFix,\n      timestamp,\n      landed,\n      iso,\n      disabled\n    } = this.props;\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          boxSizing: \"border-box\",\n          filter: disabled ? \"grayscale(100%) opacity(30%)\" : undefined\n        }}\n      >\n        <Box flex=\"1\" paddingLeft={1} paddingTop={1} paddingBottom={1}>\n          <Typography variant=\"body2\">{fullname}</Typography>\n          <Typography\n            variant=\"caption\"\n            color=\"textSecondary\"\n            style={{ paddingLeft: \".5em\" }}\n          >\n            [{username}]\n          </Typography>\n        </Box>\n        <div style={{ width: \"25%\", textAlign: \"right\" }}>\n          <Box>\n            <Typography variant=\"caption\">\n              <LastFixState timestamp={timestamp} landed={landed} relative />\n            </Typography>\n          </Box>\n          <Box>\n            <Typography variant=\"caption\">\n              <LastFixArrow lastFix={lastFix} />\n            </Typography>\n          </Box>\n        </div>\n        <div style={{ width: \"27%\", textAlign: \"right\" }}>\n          <Box paddingRight={1} paddingLeft={1}>\n            {iso}\n            <Box\n              fontSize=\"large\"\n              marginLeft=\"4px\"\n              boxShadow={1}\n              style={{ verticalAlign: \"middle\" }}\n              className={\"flag-icon flag-icon-\" + iso.toLowerCase()}\n            ></Box>\n          </Box>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const renderRow = ({ data, index, style }) => {\n  const pilotId = data.keys[index];\n  const pilotData = data.data[pilotId];\n\n  const fullname = pilotData ? pilotData.info.user.fullname : \"Offline User\";\n  const username = pilotData ? pilotData.info.user.username : pilotId;\n  const lastFix = pilotData ? pilotData.lastFix : null;\n  const timestamp = pilotData ? pilotData.lastFix.timestamp : null;\n  const landed = pilotData ? pilotData.landed : null;\n  const iso = pilotData ? pilotData.info.user.nationality.iso : \"--\";\n  const selected = data.selected.indexOf(pilotId) !== -1;\n  const disabled = data.alreadyAdded.indexOf(pilotId) !== -1;\n\n  return (\n    <TableCell\n      component=\"div\"\n      variant=\"body\"\n      padding=\"none\"\n      style={{\n        ...style,\n        backgroundColor:\n          selected && !disabled ? \"rgba(0, 0, 0, 0.04)\" : undefined\n      }}\n      onClick={() => {\n        if (!disabled) data.onPilotClicked(pilotId);\n      }}\n    >\n      <PilotSelectorListRow\n        fullname={fullname}\n        username={username}\n        lastFix={lastFix}\n        timestamp={timestamp}\n        landed={landed}\n        iso={iso}\n        disabled={disabled}\n      />\n    </TableCell>\n  );\n};\n","import React from \"react\";\n\nimport { CircularProgress } from \"@material-ui/core\";\n\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\n\nimport { arraysEqual } from \"../../util/CompareArrays\";\nimport { getGPSProvider } from \"../../common/GPSProvider\";\nimport { getDistance } from \"geolib\";\nimport { renderRow, TableHeader, rowHeight } from \"./PilotSelectorListRenderer\";\nimport { FixedSizeList } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nconst filterPilotList = (pilotList, pilotInfos, search) => {\n  const matchesSearch = name => {\n    if (search === \"\") {\n      return true;\n    }\n    return name.toLowerCase().includes(search.toLowerCase());\n  };\n\n  // Create virtual pilot if nobody found\n  let filteredPilots = pilotList.filter(pilotId => {\n    return (\n      matchesSearch(pilotInfos[pilotId].info.user.username) ||\n      matchesSearch(pilotInfos[pilotId].info.user.fullname)\n    );\n  });\n\n  // Add dummy pilot if list is empty and search string is valid\n  if (filteredPilots.length === 0 && !/\\s/.test(search) && search.length > 0) {\n    filteredPilots.push(search);\n  }\n\n  return filteredPilots;\n};\n\nconst sortPilotList = (pilotInfos, gps) => {\n  if (gps) {\n    // If gps, sort by distance\n    const myPos = { lat: gps.coords.latitude, lng: gps.coords.longitude };\n    let distances = Object.entries(pilotInfos).map(([pilotId, data]) => {\n      const distance = getDistance(myPos, data.lastFix);\n      return [pilotId, distance];\n    });\n    distances.sort((el1, el2) => el1[1] - el2[1]);\n    const pilotIds = distances.map(el => el[0]);\n    return pilotIds;\n  } else {\n    // Else, sort by name\n    let pilotIds = Object.keys(pilotInfos);\n    pilotIds.sort();\n    return pilotIds;\n  }\n};\n\n// The list content\nexport default class PilotSelectorList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { didMount: false };\n    this.gpsData = getGPSProvider().getData();\n    const pilotInfos = getXContestInterface().pilotInfos.getValue();\n    this.state = {\n      pilotInfos: pilotInfos,\n      sortedPilotList: sortPilotList(pilotInfos, this.gpsData)\n    };\n  }\n\n  startRendering = () => {\n    this.setState({ ...this.state, didMount: true });\n  };\n\n  componentDidMount() {\n    getXContestInterface().pilotInfos.registerCallback(this.onNewPilotInfos);\n    getGPSProvider().registerCallback(this.onNewGpsData);\n\n    // This starts the actual rendering, as it can take quite a while.\n    // setTimeout forces the browser to present before loading the table.\n    // without setTimeout, the waiting symbol would never be shown.\n    setTimeout(this.startRendering);\n  }\n\n  componentWillUnmount() {\n    getXContestInterface().pilotInfos.unregisterCallback(this.onNewPilotInfos);\n    getGPSProvider().unregisterCallback(this.onNewGpsData);\n  }\n\n  updatePilotListIfNecessary = () => {\n    const newPilotList = sortPilotList(this.state.pilotInfos, this.gpsData);\n\n    if (!arraysEqual(this.state.sortedPilotList, newPilotList))\n      this.setState({ ...this.state, sortedPilotList: newPilotList });\n  };\n\n  onNewGpsData = gpsData => {\n    // update only if gps position changed pilot list\n    this.gpsData = gpsData;\n    this.updatePilotListIfNecessary();\n  };\n\n  onNewPilotInfos = pilotInfos => {\n    // Always update on new pilot infos\n    this.setState({\n      ...this.state,\n      pilotInfos: pilotInfos,\n      sortedPilotList: sortPilotList(pilotInfos, this.gpsData)\n    });\n  };\n\n  onPilotClicked = pilotId => {\n    if (this.props.onPilotClicked) this.props.onPilotClicked(pilotId);\n  };\n\n  render() {\n    if (!this.state.didMount) {\n      return (\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            overflow: \"hidden\"\n          }}\n        >\n          <CircularProgress disableShrink style={{ margin: \"2em\" }} />\n        </div>\n      );\n    }\n\n    const displayedPilots = filterPilotList(\n      this.state.sortedPilotList,\n      this.state.pilotInfos,\n      this.props.search\n    );\n\n    return (\n      <React.Fragment>\n        <TableHeader />\n        <div style={{ flex: \"1\" }}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <FixedSizeList\n                width={width}\n                height={height}\n                itemCount={displayedPilots.length}\n                itemSize={rowHeight}\n                itemData={{\n                  keys: displayedPilots,\n                  data: this.state.pilotInfos,\n                  selected: this.props.selected,\n                  alreadyAdded: this.props.alreadyAdded,\n                  onPilotClicked: this.onPilotClicked\n                }}\n                itemKey={(index, { keys }) => keys[index]}\n              >\n                {renderRow}\n              </FixedSizeList>\n            )}\n          </AutoSizer>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","// attach the .equals method to Array's prototype to call it on any array\nexport function arraysEqual(array1, array2) {\n  // if the other array is a falsy value, return\n  if (!array1 || !array2) return false;\n\n  // compare lengths - can save a lot of time\n  if (array1.length !== array2.length) return false;\n\n  for (var i = 0, l = array1.length; i < l; i++) {\n    /*// Check if we have nested arrays\n    if (array1[i] instanceof Array && array2[i] instanceof Array) {\n      // recurse into the nested arrays\n      if (!array1[i].equals(array2[i])) return false;\n    } else */\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","import React from \"react\";\nimport {\n  Box,\n  useMediaQuery,\n  useTheme,\n  Typography,\n  Toolbar\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport { Button, DialogActions, TextField } from \"@material-ui/core\";\n\nimport SubWindow from \"../../util/SubWindow\";\nimport PilotSelectorList from \"./PilotSelectorList\";\n\nconst useStyles = makeStyles({\n  fullHeightWindow: {\n    height: \"100%\"\n  }\n});\n\n// Base window, without the table\nconst PilotSelector = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  // State\n  const [selected, setSelected] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const numSelected = selected.length;\n\n  const closeWindow = () => {\n    // Reset state\n    setSearch(\"\");\n    setSelected([]);\n    props.onClose();\n  };\n\n  const pilotClicked = name => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  return (\n    <SubWindow\n      open={props.open}\n      onClose={closeWindow}\n      fullScreen={fullScreen}\n      maxWidth=\"xs\"\n      fullWidth={true}\n      classes={{ paper: classes.fullHeightWindow }}\n    >\n      <Toolbar\n        style={\n          numSelected === 0\n            ? {}\n            : theme.palette.type === \"light\"\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark\n              }\n        }\n      >\n        {numSelected > 0 ? (\n          <Typography component=\"div\" color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography component=\"div\" variant=\"h6\" id=\"tableTitle\">\n            Add new pilots:\n          </Typography>\n        )}\n      </Toolbar>\n      <Box paddingLeft=\"1em\" paddingRight=\"1em\" paddingTop=\"4px\">\n        <TextField\n          //autoFocus\n          margin=\"dense\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n          id=\"search_field\"\n          label=\"Search\"\n          type=\"search\"\n          fullWidth\n          onChange={event => setSearch(event.target.value)}\n        />\n      </Box>\n      <Box\n        flex=\"1 1 auto\"\n        marginY=\"8px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"stretch\"\n      >\n        <PilotSelectorList\n          alreadyAdded={props.alreadyAdded}\n          selected={selected}\n          onPilotClicked={pilotClicked}\n          search={search}\n        />\n      </Box>\n      <DialogActions>\n        <Button onClick={closeWindow} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          disabled={numSelected === 0}\n          onClick={() => {\n            props.onAddPilots(selected);\n            closeWindow();\n          }}\n          color=\"primary\"\n        >\n          Add\n        </Button>\n      </DialogActions>\n    </SubWindow>\n  );\n};\n\nexport default PilotSelector;\n","import React from \"react\";\nimport {\n  Box,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  Typography,\n  ExpansionPanelDetails\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\nimport { getGPSProvider } from \"../../common/GPSProvider\";\n\nclass AnimatedPilotListEntry extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    // Get initial data\n    const pilotData = getXContestInterface().animation.getData();\n    this.pilotInfo = null;\n    if (props.pilotId in pilotData) {\n      this.pilotInfo = pilotData[props.pilotId];\n    }\n    this.gpsData = getGPSProvider().getData();\n\n    this.state = {\n      online: this.pilotInfo !== null,\n      gps: this.gpsData !== null\n    };\n  }\n\n  //////////////////////////////////////////////////////////////\n  /// BOILERPLATE CODE FOR UPDATING THE COMPONENT\n  ///\n  onNewGPSDataReceived = gpsData => {\n    this.gpsData = gpsData;\n    const hasGps = this.gpsData !== null;\n\n    // If something major has changed, don't run a microupdate, but a full one\n    if (this.state.gps !== hasGps) {\n      this.setState({ ...this.state, gps: hasGps });\n      return;\n    }\n\n    if (!hasGps) return;\n\n    // TODO replace with a more efficient way\n    this.forceUpdate();\n  };\n\n  onNewDataReceived = pilotData => {\n    if (this.props.pilotId in pilotData) {\n      this.pilotInfo = pilotData[this.props.pilotId];\n    } else {\n      this.pilotInfo = null;\n    }\n\n    const hasPilotInfo = this.pilotInfo !== null;\n\n    // If something major has changed, don't run a microupdate, but a full one\n    if (this.state.online !== hasPilotInfo) {\n      this.setState({ ...this.state, online: true });\n      return;\n    }\n\n    if (!hasPilotInfo) return;\n\n    // TODO update data in a more efficient way, by modifying object dom directly\n    this.forceUpdate();\n  };\n\n  componentDidMount() {\n    getXContestInterface().animation.registerCallback(this.onNewDataReceived);\n    getGPSProvider().registerCallback(this.onNewGPSDataReceived);\n  }\n\n  componentWillUnmount() {\n    getXContestInterface().animation.unregisterCallback(this.onNewDataReceived);\n    getGPSProvider().unregisterCallback(this.onNewGPSDataReceived);\n  }\n  ///\n  /////////////////////////////////////////////////////////////////\n\n  /////////////////////////////////////////////////////////////////\n  /// LAYOUT\n  ///\n  render() {\n    //const animatedPilotData = this.pilotInfo;\n\n    return (\n      <ExpansionPanel TransitionProps={{ unmountOnExit: true }}>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Box>\n            <Typography variant=\"body2\">{this.props.pilotName}</Typography>\n            <Typography\n              variant=\"caption\"\n              color=\"textSecondary\"\n              style={{ paddingLeft: \".5em\" }}\n            >\n              {\"--\"}\n            </Typography>\n          </Box>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n  }\n}\n\nexport default AnimatedPilotListEntry;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\nimport AnimatedPilotListEntry from \"./AnimatedPilotListEntry\";\nimport { getGPSProvider } from \"../../common/GPSProvider\";\n\nclass AnimatedPilotList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      onlinePilots: []\n    };\n    this.pilotData = getXContestInterface().animation.getData();\n    this.gpsData = getGPSProvider().getData();\n  }\n\n  onNewDataReceived = pilotData => {\n    this.pilotData = pilotData;\n    let pilotList = Object.keys(pilotData);\n\n    // TODO sort\n\n    let pilotListChanged = false;\n    if (pilotList.length === this.state.onlinePilots.length) {\n      for (let i = 0; i < pilotList.length; i++) {\n        if (pilotList[i] !== this.state.onlinePilots[i]) {\n          pilotListChanged = true;\n          break;\n        }\n      }\n    } else {\n      pilotListChanged = true;\n    }\n\n    if (pilotListChanged) {\n      this.setState({ ...this.state, onlinePilots: pilotList });\n    }\n  };\n\n  onNewGPSDataReceived = gpsData => {\n    this.gpsData = gpsData;\n  };\n\n  componentDidMount() {\n    getXContestInterface().animation.registerCallback(this.onNewDataReceived);\n    getGPSProvider().registerCallback(this.onNewGPSDataReceived);\n  }\n  componentWillUnmount() {\n    getXContestInterface().animation.unregisterCallback(this.onNewDataReceived);\n    getGPSProvider().unregisterCallback(this.onNewGPSDataReceived);\n  }\n\n  removePilot = pilotId => {\n    this.props.removePilots([pilotId]);\n  };\n\n  render() {\n    let pilotIsOnline = new Set(this.state.onlinePilots);\n\n    // Show online pilots first\n    const onlinePilots = this.state.onlinePilots.filter(\n      pilotId => pilotId in this.props.pilots\n    );\n\n    const offlinePilots = Object.keys(this.props.pilots).filter(\n      pilotId => !pilotIsOnline.has(pilotId)\n    );\n    const getPilotName = pilotId => {\n      const name = this.props.pilots[pilotId];\n      if (name === undefined || name === null) return pilotId;\n      return name;\n    };\n\n    return (\n      <Box height=\"100%\" bgcolor=\"#f5f5f5\" overflow=\"auto\">\n        <Box margin={1}>\n          {onlinePilots.map(pilotId => (\n            <AnimatedPilotListEntry\n              key={pilotId}\n              pilotId={pilotId}\n              pilotName={getPilotName(pilotId)}\n              removePilot={this.removePilot}\n            />\n          ))}\n        </Box>\n        <Box margin={1}>\n          {offlinePilots.map(pilotId => (\n            <AnimatedPilotListEntry\n              key={pilotId}\n              pilotId={pilotId}\n              pilotName={getPilotName(pilotId)}\n              removePilot={this.removePilot}\n            />\n          ))}\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default AnimatedPilotList;\n","import React from \"react\";\nimport { Fab } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Box from \"@material-ui/core/Box\";\nimport PilotSelector from \"../PilotSelector/PilotSelector\";\nimport {\n  getChosenPilots,\n  addPilots,\n  removePilots\n} from \"../../common/PersistentState/ChosenPilots\";\nimport AnimatedPilotList from \"./AnimatedPilotList\";\n\nclass Pilots extends React.PureComponent {\n  state = { pilotSelectorOpen: false };\n\n  openPilotSelector = () => {\n    if (this.state.pilotSelectorOpen === false)\n      this.setState({ pilotSelectorOpen: true });\n  };\n\n  closePilotSelector = () => {\n    if (this.state.pilotSelectorOpen === true)\n      this.setState({ pilotSelectorOpen: false });\n  };\n\n  render() {\n    const pilots = getChosenPilots();\n\n    return (\n      <React.Fragment>\n        <AnimatedPilotList\n          pilots={pilots}\n          removePilots={removePilots}\n        ></AnimatedPilotList>\n\n        <Box position=\"absolute\" bottom=\"16px\" right=\"16px\">\n          <Fab size=\"small\" color=\"primary\" onClick={this.openPilotSelector}>\n            <AddIcon />\n          </Fab>\n        </Box>\n        <PilotSelector\n          open={this.state.pilotSelectorOpen}\n          onClose={this.closePilotSelector}\n          onAddPilots={addPilots}\n          alreadyAdded={Object.keys(pilots)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Pilots;\n","import React from \"react\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\n\nexport default class NumberInput extends React.PureComponent {\n  state = {\n    internalUpdate: false,\n    value: null\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const resultState = { ...state, internalUpdate: false };\n\n    // Overwrite with external value if we got an update from the parent element\n    if (!state.internalUpdate) {\n      resultState.value = props.value;\n    }\n\n    return resultState;\n  }\n\n  render() {\n    return (\n      <TextField\n        onChange={event => {\n          const value = event.target.value;\n          // If the value is too small, send the smallest possible value to the parent,\n          // but keep the incorrect value in the text field.\n          // If the value is too large, send the largest possible value to the parent,\n          // and also set the text field to the largest possible value.\n          // Otherwise, just update.\n\n          if (value < this.props.min) {\n            // If those two messages get delivered out of order, this entire trick will stop working.\n            // But I think setting states will never be done in an incorrect order, that would really break things.\n            this.props.onChange(this.props.min);\n            this.setState({\n              ...this.state,\n              internalUpdate: true,\n              value: value\n            });\n          } else if (value > this.props.max) {\n            this.props.onChange(this.props.max);\n          } else {\n            this.props.onChange(value);\n          }\n        }}\n        variant=\"outlined\"\n        disabled={this.props.disabled}\n        margin=\"dense\"\n        hiddenLabel\n        type=\"number\"\n        value={this.state.value}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">{this.props.unit}</InputAdornment>\n          )\n        }}\n        inputProps={{\n          min: this.props.min,\n          max: this.props.max\n        }}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { getSetting } from \"../../common/PersistentState/Settings\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch\n} from \"@material-ui/core\";\nimport NumberInput from \"../../util/NumberInput\";\n\nexport const BooleanSetting = props => {\n  const [settingValue, setSettingValue] = getSetting(props.setting).use();\n  const flipSetting = () => setSettingValue(!settingValue);\n\n  return (\n    <ListItem button onClick={flipSetting}>\n      <ListItemText\n        primary={props.primaryText}\n        secondary={props.secondaryText}\n      />\n      <ListItemSecondaryAction>\n        <Switch edge=\"end\" onChange={flipSetting} checked={settingValue} />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport const NumberSetting = props => {\n  const [settingValue, setSettingValue] = getSetting(props.setting).use();\n\n  return (\n    <ListItem disabled={props.disabled}>\n      <ListItemText\n        primary={props.primaryText}\n        secondary={props.secondaryText}\n      />\n      <ListItemSecondaryAction>\n        <NumberInput\n          value={settingValue}\n          onChange={setSettingValue}\n          disabled={props.disabled}\n          unit={props.unit}\n          min={props.min}\n          max={props.max}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Box,\n  Typography,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SubWindow from \"../../util/SubWindow\";\nimport { resetAllSettings } from \"../../common/PersistentState/Settings\";\n\nconst SettingsPageTitleBar = props => {\n  const [resetAllSettingsDialogOpen, setResetAllSettingsDialogOpen] = useState(\n    false\n  );\n\n  return (\n    <React.Fragment>\n      <AppBar style={{ position: \"static\" }}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={props.onClose}>\n            <ArrowBackIcon />\n          </IconButton>\n\n          <Box marginLeft={2} flexGrow={1}>\n            <Typography variant=\"h6\">Settings</Typography>\n          </Box>\n\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={() => setResetAllSettingsDialogOpen(true)}\n          >\n            <UndoIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      {/* RESET ALL SETTINGS DIALOG */}\n      <SubWindow\n        open={resetAllSettingsDialogOpen}\n        onClose={() => setResetAllSettingsDialogOpen(false)}\n      >\n        <DialogTitle>{\"Reset all settings?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This sets all settings to their default values.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              resetAllSettings();\n              setResetAllSettingsDialogOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Yes\n          </Button>\n          <Button\n            onClick={() => setResetAllSettingsDialogOpen(false)}\n            color=\"primary\"\n            autoFocus\n          >\n            No\n          </Button>\n        </DialogActions>\n      </SubWindow>\n    </React.Fragment>\n  );\n};\n\nexport default SettingsPageTitleBar;\n","import React from \"react\";\n\nimport { List, Divider } from \"@material-ui/core\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\nimport SubWindow from \"../../util/SubWindow\";\nimport { BooleanSetting, NumberSetting } from \"./SettingsPageEntries\";\nimport SettingsPageTitleBar from \"./SettingsPageTitleBar\";\n\nconst SettingsPage = props => {\n  // Retreive the settings that enable/disable other settings\n  const [settingLimitPaths] = getSetting(Settings.LIMIT_PATHS).use();\n  const [settingFpsLimit] = getSetting(Settings.FPS_LIMIT).use();\n  //const [settingLowLatency] = getSetting(Settings.LOW_LATENCY).use();\n\n  return (\n    <SubWindow fullScreen open={props.open} onClose={props.onClose}>\n      <SettingsPageTitleBar onClose={props.onClose} />\n\n      <List>\n        {/* ANIMATION DELAY */}\n        <BooleanSetting\n          setting={Settings.LOW_LATENCY}\n          primaryText=\"Low Latency Mode\"\n          secondaryText=\"disables animations\"\n        />\n        {/*<NumberSetting\n          primaryText=\"Animation Delay\"\n          secondaryText=\"70-120 sec (default: 80)\"\n          setting={Settings.ANIMATION_DELAY}\n          disabled={settingLowLatency}\n          unit=\"sec\"\n          min={70}\n          max={120}\n        />*/}\n\n        {/* TRACK LENGTH */}\n        <Divider />\n        <BooleanSetting\n          setting={Settings.LIMIT_PATHS}\n          primaryText=\"Limit Track Length\"\n          secondaryText=\"prevents map clutter\"\n        />\n        <NumberSetting\n          primaryText=\"Track Length\"\n          secondaryText=\"Valid: 1-999 min\"\n          setting={Settings.PATH_LENGTH}\n          disabled={!settingLimitPaths}\n          unit=\"min\"\n          min={1}\n          max={999}\n        />\n\n        {/* FRAMERATE */}\n        <Divider />\n        <BooleanSetting\n          setting={Settings.FPS_LIMIT}\n          primaryText=\"Limit Framerate\"\n          secondaryText=\"reduces energy consumption\"\n        />\n        <NumberSetting\n          primaryText=\"Framerate\"\n          secondaryText=\"Valid: 1-60 fps\"\n          setting={Settings.FPS_RATE}\n          disabled={!settingFpsLimit}\n          unit=\"fps\"\n          min={1}\n          max={60}\n        />\n\n        {/* GPS */}\n        <Divider />\n        <BooleanSetting\n          setting={Settings.GPS_ENABLED}\n          primaryText=\"Enable GPS\"\n          secondaryText=\"required for advanced features\"\n        />\n      </List>\n    </SubWindow>\n  );\n};\n\nexport default SettingsPage;\n","import React, { useState } from \"react\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Box,\n  Typography,\n  Toolbar,\n  useTheme\n} from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport SettingsPage from \"./SettingsPage/SettingsPage\";\n\nconst MainMenu = props => {\n  const theme = useTheme();\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  return (\n    <React.Fragment>\n      <SwipeableDrawer\n        disableSwipeToOpen\n        open={props.open}\n        onOpen={() => {}}\n        onClose={props.onClose}\n      >\n        <Toolbar\n          style={{\n            backgroundColor: theme.palette.primary.light,\n            minWidth: \"200px\"\n          }}\n          onClick={props.onClose}\n        >\n          <Box flexGrow={1} clone>\n            <Typography variant=\"h6\">Menu</Typography>\n          </Box>\n          <IconButton edge=\"end\" color=\"inherit\">\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n\n        <List>\n          <ListItem\n            button\n            onClick={() => {\n              props.onClose();\n              setSettingsOpen(true);\n            }}\n          >\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n      <SettingsPage\n        open={settingsOpen}\n        onClose={() => setSettingsOpen(false)}\n      ></SettingsPage>\n    </React.Fragment>\n  );\n};\n\nexport default MainMenu;\n","import React from \"react\";\nimport { useState } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ErrorIcon from \"@material-ui/icons/ErrorRounded\";\nimport SignalCellular4BarIcon from \"@material-ui/icons/SignalCellular4Bar\";\nimport SignalCellularConnectedNoInternet4BarIcon from \"@material-ui/icons/SignalCellularConnectedNoInternet4Bar\";\nimport SignalCellularNullIcon from \"@material-ui/icons/SignalCellularNull\";\n\nimport { useXContestConnectionState } from \"../location_provider/XContest/XContestInterface\";\nimport { ConnectionState } from \"../location_provider/XContest/XContestInterface\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport MainMenu from \"./MainMenu\";\n\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    padding: theme.spacing(1),\n    align: \"right\"\n  }\n}));\n\nconst LoadingBadge = props => {\n  return (\n    <Badge\n      //overlap=\"circle\"\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      }}\n      badgeContent={\n        <CircularProgress\n          disableShrink={props.disableShrink}\n          color=\"secondary\"\n          size={15}\n          thickness={10}\n        />\n      }\n    >\n      {props.children}\n    </Badge>\n  );\n};\n\nconst TitleBar = () => {\n  const classes = useStyles();\n  const connectionState = useXContestConnectionState();\n\n  const popoverActions = React.useRef();\n  const [connectionPopAnchor, setConnectionPopAnchor] = useState(null);\n\n  const [mainMenuOpen, setMainMenuOpen] = useState(false);\n\n  React.useLayoutEffect(() => {\n    if (popoverActions.current) {\n      popoverActions.current.updatePosition();\n    }\n  }, [connectionState, connectionPopAnchor]);\n\n  const renderConnectionIcon = () => {\n    switch (connectionState) {\n      case ConnectionState.ACTIVE:\n        return <SignalCellular4BarIcon />;\n      case ConnectionState.CONNECTING:\n        return (\n          <LoadingBadge>\n            <SignalCellularNullIcon />\n          </LoadingBadge>\n        );\n      case ConnectionState.ERROR:\n        return <ErrorIcon color=\"error\" />;\n      case ConnectionState.ESTABLISHED:\n        return (\n          <LoadingBadge disableShrink>\n            <SignalCellularNullIcon />\n          </LoadingBadge>\n        );\n      case ConnectionState.INACTIVE:\n        return <SignalCellularConnectedNoInternet4BarIcon />;\n      case ConnectionState.NO_CONNECTION:\n        return <SignalCellularNullIcon />;\n      default:\n        return <SignalCellularNullIcon />;\n    }\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => setMainMenuOpen(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Box marginLeft={2} flexGrow={1}>\n            <Typography variant=\"h6\">XC Live Viewer</Typography>\n          </Box>\n\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={event => setConnectionPopAnchor(event.currentTarget)}\n          >\n            {renderConnectionIcon()}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Popover\n        open={Boolean(connectionPopAnchor)}\n        anchorEl={connectionPopAnchor}\n        onClose={() => setConnectionPopAnchor(null)}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        action={popoverActions}\n      >\n        <Box className={classes.popover}>\n          <Typography>{connectionState}</Typography>\n        </Box>\n      </Popover>\n      <MainMenu\n        open={mainMenuOpen}\n        onClose={() => setMainMenuOpen(false)}\n      ></MainMenu>\n    </div>\n  );\n};\n\nexport default TitleBar;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\n\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport MapIcon from \"@material-ui/icons/Map\";\n\nimport \"./MainPage.css\";\n\n// TODO import LazyLoading from \"./util/LazyLoading\";\n\nimport LiveMap from \"./pages/GoogleMapsPage/LiveMap\";\nimport Pilots from \"./pages/PilotList/Pilots\";\nimport TitleBar from \"./pages/TitleBar\";\n\nconst MainPage = () => {\n  const [tabId, setTabId] = React.useState(1);\n  const [windowHeight, setWindowHeight] = React.useState(0);\n\n  // Workaround for mobile screens reporting an incorrect window height\n  const updateWindowHeight = () => {\n    setWindowHeight(window.innerHeight);\n  };\n  React.useLayoutEffect(() => {\n    updateWindowHeight();\n    window.addEventListener(\"resize\", updateWindowHeight);\n    return () => window.removeEventListener(\"resize\", updateWindowHeight);\n  }, []);\n\n  // Callbacks for changing the current page\n  const handleNavigationButton = (_event, newValue) => setTabId(newValue);\n\n  return (\n    <Box height={windowHeight} display=\"flex\" flexDirection=\"column\">\n      <Box zIndex={100}>\n        <TitleBar></TitleBar>\n      </Box>\n      <Box flexGrow={1} clone>\n        <SwipeableViews disabled index={tabId}>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            <LiveMap></LiveMap>\n          </Box>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            <Pilots></Pilots>\n          </Box>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            Item Three\n          </Box>\n        </SwipeableViews>\n      </Box>\n      <Box zIndex={100} boxShadow={3}>\n        <BottomNavigation\n          value={tabId}\n          onChange={handleNavigationButton}\n          showLabels\n        >\n          <BottomNavigationAction label=\"Map\" icon={<MapIcon />} />\n          <BottomNavigationAction label=\"Pilots\" icon={<PeopleIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport MainPage from \"./MainPage\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport \"flag-icon-css/css/flag-icon.min.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Read the .env file\nrequire(\"dotenv\").config();\n\n// Render the page\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}