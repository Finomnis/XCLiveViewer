{"version":3,"sources":["common/GoogleMapsApiLoader.js","pages/StatusPages.jsx","common/PersistentState/PersistentState.js","common/PersistentState/Settings.js","location_provider/XContest/XContestSocket.js","common/PersistentState/ChosenPilots.js","util/Interpolation.js","util/RunningDerivation.js","util/FindBisect.js","location_provider/XContest/FlightAnimationData.js","location_provider/XContest/FlightAnimation.js","util/HighPrecisionTimeSync.js","location_provider/XContest/XContestAnimation.js","util/EventfulState.js","location_provider/XContest/XContestInterface.js","pages/MapAnimator.js","pages/LiveMap.jsx","pages/PilotSelector.jsx","pages/AnimatedPilotList.jsx","pages/Pilots.jsx","pages/TitleBar.jsx","MainPage.jsx","App.jsx","serviceWorker.jsx","index.js"],"names":["googleMapsApiPromise","useGoogleMapsApi","useState","ready","error","state","setState","useEffect","Promise","resolve","_reject","console","log","script","document","createElement","src","async","addEventListener","body","appendChild","then","success","window","google","useStyles","makeStyles","theme","progress","margin","spacing","LoadingPage","message","hideIf","subRef","classes","Box","width","height","display","alignItems","justifyContent","ref","textAlign","CircularProgress","className","Typography","ErrorPage","fontSize","color","PersistentState","key","initialValue","getValue","value","JSON","parse","localStorage","getItem","_notifyAll","callbacks","cb","registerCallback","includes","push","unregisterCallback","index","indexOf","splice","setValue","removeItem","setItem","stringify","use","newValue","this","registerPersistentState","name","Settings","PATH_LENGTH","FULL_PATHS","LOW_LATENCY","ANIMATION_DELAY","FPS_LIMIT","FPS_RATE","createSetting","settingsObjects","getSetting","XContestSocket","onStateChanged","onInfoMessage","onTracklogMessage","formatSubscribedFlights","setting_pathLength","setting_fullPath","startIsoDate","startDate","Date","now","setMilliseconds","toISOString","subscribedFlights","map","flight","flightUuid","start","refreshSubscribedFlights","sock","readyState","WebSocket","OPEN","connected","send","tag","contents","setSubscribedFlights","flights","onOpen","handleReset","setConnectionState","ConnectionState","ESTABLISHED","area","lat","lon","onMessage","evt","ACTIVE","msg","data","clearTimeout","watchdog","setTimeout","INACTIVE","processMessage","onClose","NO_CONNECTION","connect","bind","onError","dispatchInfoMessage","dispatchTracklogMessage","warn","CONNECTING","onopen","onmessage","onclose","onerror","ERROR","alert","persistentChosenPilots","lerp","val1","val2","pct","RunningDerivation","smoothingFactor","derivation_func","a","b","invalid_func","computeDiff","isInvalid","old_val","old_t","running_avg","new_val","new_t","dt","deriv","weight","Math","pow","findBisect","targetValue","length","dataFn","minIndex","maxIndex","currentIndex","parseTime","isoStr","round","FlightAnimationData","at","timestamp","pos","t","findForwardSwipe","startPos","counter_gpsVario","counter_baroVarion","counter_velocity","end","getDistance","elem","lng","baroAlt","gpsAlt","gpsVario","update","baroVario","velocity","newElem","elevation","clear","append","newElements","oldElements","oldPos","newPos","oldEl","newEl","reset","FlightAnimationDataCache","currentArrayPos","mapsPath","DataGens","data1","data2","data0","data3","fallbackData","flightInfos","lastFix","FlightAnimation","updateInfos","infos","landed","flightInfoData","replace","track","flightInfoDataCache","updateData","data_start_time","liveData","isAfterLastElement","insert","liveDataCache","getInterpolatedData","cache","timeStamp","blendedData","endOfTrack","startOfTrack","takeData","blend","blendData","getFallbackData","updateAnimation","animationTimeMillis","lowLatencyMode","animationTimeSeconds","animationResult","HighPrecisionTimeSync","tolerance","get","currentHighPrecisionTime","currentTime","estimatedTime","offset","offBy","XContestAnimation","animationLoop","highPrecisionTime","absTime","offsetTime","_highPrecisionTimeSync","_setting_timeOffset","newAnimationData","Object","keys","_subscribedPilots","forEach","pilot","_pilotInfos","flightId","_flightAnimations","flightAnim","_setting_lowLatencyMode","_submitAnimationFrame","requestAnimationFrame","_currentAnimationData","_callbacks","setSubscribedPilots","subscribedPilots","_updateImportantFlights","pushNewInfo","pilotInfo","values","flightInfo","pushNewData","trackId","trackData","useAnimatedData","importantFlights","filter","val","info","user","username","importantFlightSet","Set","toRemove","entries","as","bs","size","has","eqSet","_subscribedFlights","_setSubscribedFlightsCallback","settings_timeOffset","settings_lowLatencyMode","Array","from","EventfulState","set","_callbackData","NO_INFORMATION","XContestInterface","socket","onConnectionStateChanged","connectionState","onInfoMessageReceived","pilots","overriden","animation","pilotInfos","getPilotInfos","onTracklogMessageReceived","trackChunk","_instance","getXContestInterface","MapAnimator","cleanupOldMarkers","markers","setMap","pilotData","maps","Marker","position","title","fullname","setPosition","LiveMap","mapReady","mapError","mapsRef","useRef","useLayoutEffect","Map","current","center","mapTypeId","zoom","maxZoom","disableDefaultUI","scaleControl","fullscreenControl","styles","mapStyle","mapAnimatorUpdateCallback","Fragment","columns","id","label","minWidth","render","row","component","variant","style","paddingLeft","align","nationality","iso","marginLeft","boxShadow","verticalAlign","toLowerCase","PilotSelector","props","useTheme","pilotList","selected","setSelected","search","setSearch","numSelected","closeWindow","fullScreen","useMediaQuery","breakpoints","down","matchesSearch","filteredPilots","userData","test","login","gender","Dialog","open","Toolbar","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","paddingRight","paddingTop","TextField","autoComplete","fullWidth","onChange","event","target","flex","marginY","overflowY","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","isItemSelected","isSelected","itemDisabled","alreadyAdded","wasAlreadyAdded","columnContent","onClick","_event","selectedIndex","newSelected","concat","slice","handleClick","DialogActions","Button","disabled","onAddPilots","AnimatedPilotList","animatedData","content","pilotId","pilotName","displayedName","pilotDebugOutput","animatedPilotData","toString","removePilots","Pilots","pilotSelectorOpen","setPilotSelectorOpen","chosenPilots","setChosenPilots","pilotIds","newPilotState","changed","useChosenPilots","addPilots","bottom","right","Fab","menuButton","marginRight","popover","padding","LoadingBadge","Badge","anchorOrigin","vertical","horizontal","badgeContent","disableShrink","thickness","children","TitleBar","popoverActions","React","connectionPopAnchor","setConnectionPopAnchor","updatePosition","AppBar","clone","IconButton","edge","flexGrow","currentTarget","renderConnectionIcon","Popover","Boolean","anchorEl","transformOrigin","action","MainPage","tabId","setTabId","windowHeight","setWindowHeight","updateWindowHeight","innerHeight","removeEventListener","flexDirection","zIndex","BottomNavigation","showLabels","BottomNavigationAction","icon","App","location","hostname","match","require","config","ReactDOM","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.b4b972eb.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\n// Hook\nlet googleMapsApiPromise = null;\nfunction useGoogleMapsApi() {\n  // Keeping track of script loaded and error state\n  const [state, setState] = useState({\n    ready: false,\n    error: false\n  });\n\n  useEffect(\n    () => {\n      if (googleMapsApiPromise === null) {\n        googleMapsApiPromise = new Promise((resolve, _reject) => {\n          console.log(\"Loading Google Maps API ...\");\n          // Create script\n          let script = document.createElement(\"script\");\n          script.src =\n            \"https://maps.googleapis.com/maps/api/js?key=\" +\n            process.env.REACT_APP_GAPI_KEY;\n          script.async = true;\n\n          script.addEventListener(\"load\", () => resolve(true));\n          script.addEventListener(\"error\", () => resolve(false));\n\n          // Add script to document body\n          document.body.appendChild(script);\n        });\n      }\n\n      googleMapsApiPromise.then(success => {\n        if (success) {\n          console.log(\"Google Maps API loaded.\");\n          setState({\n            ready: true,\n            error: false\n          });\n        } else {\n          console.log(\"Error: Cannot load Google Maps API.\");\n          setState({\n            ready: false,\n            error: true\n          });\n        }\n      });\n    },\n    [] // Don't re-run\n  );\n\n  return [state.ready, state.error, state.ready ? window.google : null];\n}\n\nexport default useGoogleMapsApi;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2)\n  }\n}));\n\nexport const LoadingPage = ({ message, hideIf, subRef }) => {\n  const classes = useStyles();\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      display={hideIf ? \"none\" : \"flex\"}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      ref={subRef}\n    >\n      <Box textAlign=\"center\">\n        <CircularProgress className={classes.progress} />\n        <Typography>{message}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport const ErrorPage = ({ message, hideIf }) => {\n  const classes = useStyles();\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      display={hideIf ? \"none\" : \"flex\"}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box textAlign=\"center\">\n        <ErrorIcon\n          fontSize=\"large\"\n          color=\"error\"\n          className={classes.progress}\n        />\n        <Typography color=\"error\">{message}</Typography>\n      </Box>\n    </Box>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nclass PersistentState {\n  constructor(key, initialValue) {\n    this.key = key;\n    this.initialValue = initialValue;\n    this.callbacks = [];\n  }\n\n  getValue = () => {\n    const value = JSON.parse(localStorage.getItem(this.key));\n    if (value === null) return this.initialValue;\n    return value;\n  };\n\n  _notifyAll = () => {\n    const value = this.getValue();\n    for (const cb of this.callbacks) {\n      cb(value);\n    }\n  };\n\n  registerCallback = cb => {\n    if (!this.callbacks.includes(cb)) this.callbacks.push(cb);\n  };\n\n  unregisterCallback = cb => {\n    const index = this.callbacks.indexOf(cb);\n    if (index >= 0) {\n      this.callbacks.splice(index, 1);\n    }\n  };\n\n  setValue = value => {\n    if (value == null) {\n      localStorage.removeItem(this.key);\n    } else {\n      localStorage.setItem(this.key, JSON.stringify(value));\n    }\n\n    this._notifyAll();\n  };\n\n  use = () => {\n    const [value, setValue] = useState(this.getValue);\n\n    useEffect(() => {\n      const cb = newValue => {\n        // trigger component update on change\n        setValue(newValue);\n      };\n\n      this.registerCallback(cb);\n      return () => this.unregisterCallback(cb);\n    }, []);\n\n    return [value, this.setValue];\n  };\n}\n\nexport const registerPersistentState = (name, initialValue) => {\n  return new PersistentState(name, initialValue);\n};\n","import { registerPersistentState } from \"./PersistentState\";\n\n// Keys\nexport const Settings = {\n  PATH_LENGTH: \"PATH_LENGTH\",\n  FULL_PATHS: \"FULL_PATHS\",\n  LOW_LATENCY: \"LOW_LATENCY\",\n  ANIMATION_DELAY: \"ANIMATION_DELAY\",\n  FPS_LIMIT: \"FPS_LIMIT\",\n  FPS_RATE: \"FPS_RATE\"\n};\n\n// Wrapper for simplification\nconst createSetting = (key, value) =>\n  registerPersistentState(\"SETTINGS_\" + key, value);\n\n// Settings objects\nconst settingsObjects = {\n  PATH_LENGTH: createSetting(Settings.PATH_LENGTH, 15 * 60),\n  FULL_PATHS: createSetting(Settings.FULL_PATHS, false),\n  LOW_LATENCY: createSetting(Settings.LOW_LATENCY, false),\n  ANIMATION_DELAY: createSetting(Settings.ANIMATION_DELAY, 80),\n  FPS_LIMIT: createSetting(Settings.FPS_LIMIT, true),\n  FPS_RATE: createSetting(Settings.FPS_RATE, 10)\n};\n\nexport const getSetting = key => settingsObjects[key];\n","import { ConnectionState } from \"./XContestInterface\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\n\nexport default class XContestSocket {\n  constructor(onStateChanged, onInfoMessage, onTracklogMessage) {\n    this.setConnectionState = onStateChanged;\n    this.dispatchInfoMessage = onInfoMessage;\n    this.dispatchTracklogMessage = onTracklogMessage;\n    this.subscribedFlights = [];\n    this.connect();\n    this.connected = false;\n\n    // Register hooks, so we get notified when these settings change\n    getSetting(Settings.PATH_LENGTH).registerCallback(\n      this.refreshSubscribedFlights\n    );\n    getSetting(Settings.FULL_PATHS).registerCallback(\n      this.refreshSubscribedFlights\n    );\n  }\n\n  connect() {\n    if (\"WebSocket\" in window) {\n      this.connected = false;\n      this.setConnectionState(ConnectionState.CONNECTING);\n      this.sock = new WebSocket(\"wss://live.xcontest.org/websock/webclient\");\n      this.sock.onopen = this.onOpen;\n      this.sock.onmessage = this.onMessage;\n      this.sock.onclose = this.onClose;\n      this.sock.onerror = this.onError;\n    } else {\n      this.setConnectionState(ConnectionState.ERROR);\n      // The browser doesn't support WebSocket\n      alert(\"WebSocket NOT supported by your Browser!\");\n    }\n  }\n\n  formatSubscribedFlights = () => {\n    const setting_pathLength = getSetting(Settings.PATH_LENGTH).getValue();\n    const setting_fullPath = getSetting(Settings.FULL_PATHS).getValue();\n\n    let startIsoDate = null;\n    if (!setting_fullPath) {\n      const startDate = new Date(Date.now() - 1000 * setting_pathLength);\n      startDate.setMilliseconds(0);\n      startIsoDate = startDate.toISOString();\n    }\n\n    const formattedFlights = this.subscribedFlights.map(flight => {\n      return { flightUuid: flight, start: startIsoDate };\n    });\n\n    return formattedFlights;\n  };\n\n  refreshSubscribedFlights = () => {\n    if (this.sock.readyState === WebSocket.OPEN && this.connected) {\n      this.sock.send(\n        JSON.stringify({\n          tag: \"WebFollow\",\n          contents: this.formatSubscribedFlights()\n        })\n      );\n    }\n  };\n\n  setSubscribedFlights = flights => {\n    this.subscribedFlights = flights;\n    this.refreshSubscribedFlights();\n  };\n\n  onOpen = () => {\n    this.handleReset();\n    console.log(\"WebSocket: Open!\");\n    this.setConnectionState(ConnectionState.ESTABLISHED);\n    this.connected = true;\n\n    // Set area filter to the entire world\n    this.sock.send(\n      JSON.stringify({\n        tag: \"WebFilterArea\",\n        area: [{ lat: -90, lon: -180 }, { lat: 90, lon: 180 }]\n      })\n    );\n\n    // Use current 'fake' contest that is valid for the current alpha phase.\n    // Primarily sent to match the messages from their reverse engineered websocket\n    this.sock.send(\n      JSON.stringify({ tag: \"WebFilterContest\", contents: \"alpha9999\" })\n    );\n\n    // Tell the webserver which flights we want in more detail. TODO.\n    this.sock.send(\n      JSON.stringify({\n        tag: \"WebFollow\",\n        contents: this.formatSubscribedFlights()\n      })\n    );\n  };\n\n  onMessage = evt => {\n    console.log(\"WebSocket: Message!\");\n    this.setConnectionState(ConnectionState.ACTIVE);\n\n    let msg = JSON.parse(evt.data);\n\n    // Expect the next message in 60 seconds. If not, change the status message.\n    clearTimeout(this.watchdog);\n    this.watchdog = setTimeout(() => {\n      this.setConnectionState(ConnectionState.INACTIVE);\n    }, 70000);\n\n    // Process the message\n    this.processMessage(msg);\n  };\n\n  onClose = evt => {\n    this.connected = false;\n    console.log(\"WebSocket: Close!\");\n    this.setConnectionState(ConnectionState.NO_CONNECTION);\n    // websocket is closed.\n    setTimeout(this.connect.bind(this), 1000);\n  };\n\n  onError = evt => {\n    this.connected = false;\n    console.log(\"WebSocket: Error!\");\n  };\n\n  // Message Processing\n  handleReset = () => {\n    console.log(\"TODO: handle reset!\");\n  };\n  processMessage = msg => {\n    if (!(\"tag\" in msg)) {\n      console.warn(\"Warning: Invalid message format!\", msg);\n      return;\n    }\n    switch (msg.tag) {\n      case \"LiveFlightInfos\":\n        this.dispatchInfoMessage(msg.contents);\n        break;\n      case \"LiveFlightChunk\":\n        this.dispatchTracklogMessage(msg);\n        break;\n      default:\n        console.warn(`Warning: Unknown message tag '${msg.tag}'!`, msg);\n    }\n  };\n}\n","import { registerPersistentState } from \"./PersistentState\";\n\nconst persistentChosenPilots = registerPersistentState(\"chosen-pilots\", {});\n\nexport const getChosenPilotsObject = () => persistentChosenPilots;\n\nexport function getChosenPilots() {\n  return persistentChosenPilots.getValue();\n}\n\nexport function useChosenPilots() {\n  const [chosenPilots, setChosenPilots] = persistentChosenPilots.use();\n\n  // Add new pilots\n  const addPilots = pilotIds => {\n    const newPilotState = { ...chosenPilots };\n\n    let changed = false;\n    for (const pilotId of pilotIds) {\n      if (!(pilotId in newPilotState)) {\n        newPilotState[pilotId] = null;\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      setChosenPilots(newPilotState);\n    }\n  };\n\n  // Remove pilots\n  const removePilots = pilotIds => {\n    const newPilotState = { ...chosenPilots };\n\n    let changed = false;\n    for (const pilotId of pilotIds) {\n      if (pilotId in newPilotState) {\n        delete newPilotState[pilotId];\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      setChosenPilots(newPilotState);\n    }\n  };\n\n  return [chosenPilots, addPilots, removePilots];\n}\n","export const lerp = (val1, val2, pct) => {\n  if (val2 === null) {\n    return val1;\n  }\n  if (val1 === null) {\n    return val2;\n  }\n  return (1.0 - pct) * val1 + pct * val2;\n};\n\n// TODO catmull-rom\n","export default class RunningDerivation {\n  constructor(\n    smoothingFactor,\n    derivation_func = (a, b) => b - a,\n    invalid_func = a => a === null\n  ) {\n    this.computeDiff = derivation_func;\n    this.isInvalid = invalid_func;\n    this.old_val = null;\n    this.old_t = null;\n    this.running_avg = null;\n    this.smoothingFactor = smoothingFactor;\n  }\n\n  update(new_val, new_t) {\n    if (\n      this.old_val === null ||\n      new_val === null ||\n      this.old_t === null ||\n      new_t === null ||\n      this.isInvalid(this.old_val) ||\n      this.isInvalid(new_val) ||\n      this.old_t === this.new_t\n    ) {\n      this.old_val = new_val;\n      this.old_t = new_t;\n      return null;\n    }\n\n    let dt = new_t - this.old_t;\n    let diff = this.computeDiff(this.old_val, new_val);\n    let deriv = diff / dt;\n\n    let weight = Math.pow(this.smoothingFactor, dt);\n    if (this.running_avg === null) {\n      this.running_avg = deriv;\n    } else {\n      this.running_avg = weight * this.running_avg + (1.0 - weight) * deriv;\n    }\n\n    this.old_val = new_val;\n    this.old_t = new_t;\n    return this.running_avg;\n  }\n\n  reset() {\n    this.old_val = null;\n    this.old_t = null;\n    this.running_avg = null;\n  }\n}\n","const findBisect = (targetValue, length, dataFn) => {\n  if (length < 1) return 0;\n\n  let minIndex = -1;\n  let maxIndex = length;\n  let currentIndex = 0;\n  let currentValue = null;\n\n  while (minIndex < maxIndex - 1) {\n    currentIndex = ((minIndex + maxIndex) / 2) | 0;\n    currentValue = dataFn(currentIndex);\n\n    if (currentValue < targetValue) {\n      minIndex = currentIndex;\n    } else {\n      maxIndex = currentIndex;\n    }\n  }\n\n  return maxIndex;\n};\n\nexport default findBisect;\n","import RunningDerivation from \"../../util/RunningDerivation\";\nimport { getDistance } from \"geolib\";\nimport findBisect from \"../../util/FindBisect\";\n\nexport const parseTime = isoStr => {\n  return Math.round(Date.parse(isoStr) / 1000);\n};\n\nexport default class FlightAnimationData {\n  constructor() {\n    this.data = [];\n    this.counter_gpsVario = new RunningDerivation(0.7);\n    this.counter_baroVarion = new RunningDerivation(0.7);\n    this.counter_velocity = new RunningDerivation(\n      0.7,\n      (start, end) => getDistance(start, end, 0.01),\n      () => false\n    );\n  }\n\n  at = index => this.data[index];\n\n  clear() {\n    // reset everything\n    this.data = [];\n    this.counter_gpsVario = new RunningDerivation(0.7);\n    this.counter_baroVarion = new RunningDerivation(0.7);\n    this.counter_velocity = new RunningDerivation(\n      0.7,\n      (start, end) => getDistance(start, end, 0.01),\n      () => false\n    );\n  }\n\n  get length() {\n    return this.data.length;\n  }\n\n  isAfterLastElement(timestamp) {\n    if (this.data.length <= 0) return true;\n    return this.data[this.data.length - 1].t < timestamp;\n  }\n\n  append(data) {\n    for (const elem of data) {\n      const timestamp = parseTime(elem.timestamp);\n      const pos = { lat: elem.lat, lng: elem.lon };\n\n      const baroAlt = elem.baroAlt === 0 ? null : elem.baroAlt;\n      const gpsAlt = elem.gpsAlt === 0 ? null : elem.gpsAlt;\n\n      // Compute new running average values\n      const gpsVario = this.counter_gpsVario.update(gpsAlt, timestamp);\n      const baroVario = this.counter_baroVarion.update(baroAlt, timestamp);\n      const velocity = this.counter_velocity.update(pos, timestamp);\n\n      const newElem = {\n        baroAlt: baroAlt,\n        gpsAlt: gpsAlt,\n        elevation: elem.elevation,\n        pos: pos,\n        gpsVario: gpsVario,\n        baroVario: baroVario,\n        velocity: velocity,\n        t: timestamp\n      };\n      this.data.push(newElem);\n    }\n  }\n\n  replace(data) {\n    this.clear();\n    this.append(data);\n  }\n\n  insert(data) {\n    const newElements = [];\n    for (const elem of data) {\n      const timestamp = parseTime(elem.timestamp);\n      const pos = { lat: elem.lat, lng: elem.lon };\n      const baroAlt = elem.baroAlt === 0 ? null : elem.baroAlt;\n      const gpsAlt = elem.gpsAlt === 0 ? null : elem.gpsAlt;\n\n      const newElem = {\n        baroAlt: baroAlt,\n        gpsAlt: gpsAlt,\n        elevation: elem.elevation,\n        pos: pos,\n        gpsVario: null,\n        baroVario: null,\n        velocity: null,\n        t: timestamp\n      };\n      newElements.push(newElem);\n    }\n\n    // Merge\n    const oldElements = this.data;\n    this.data = [];\n\n    let oldPos = 0;\n    let newPos = 0;\n\n    while (true) {\n      if (oldPos >= oldElements.length && newPos >= newElements.length) break;\n      else if (oldPos >= oldElements.length) {\n        this.data.push(newElements[newPos]);\n        newPos += 1;\n      } else if (newPos >= newElements.length) {\n        this.data.push(oldElements[oldPos]);\n        oldPos += 1;\n      } else {\n        const oldEl = oldElements[oldPos];\n        const newEl = newElements[newPos];\n\n        if (newEl.t < oldEl.t) {\n          this.data.push(newEl);\n          newPos += 1;\n        } else if (oldEl.t < newEl.t) {\n          this.data.push(oldEl);\n          oldPos += 1;\n        } else {\n          this.data.push(newEl);\n          oldPos += 1;\n          newPos += 1;\n        }\n      }\n    }\n\n    // Re-compute derivatives\n    this.counter_gpsVario.reset();\n    this.counter_baroVarion.reset();\n    this.counter_velocity.reset();\n    for (let elem of this.data) {\n      const gpsVario = this.counter_gpsVario.update(elem.gpsAlt, elem.t);\n      const baroVario = this.counter_baroVarion.update(elem.baroAlt, elem.t);\n      const velocity = this.counter_velocity.update(elem.pos, elem.t);\n\n      elem.gpsVario = gpsVario;\n      elem.baroVario = baroVario;\n      elem.velocity = velocity;\n    }\n  }\n\n  findBisect = timestamp => {\n    return findBisect(timestamp, this.data.length, pos => this.data[pos].t);\n  };\n\n  findForwardSwipe = (timestamp, startPos) => {\n    let pos = startPos;\n    while (pos < this.data.length && this.data[pos].t < timestamp) {\n      pos += 1;\n    }\n    return pos;\n  };\n}\n","import { lerp } from \"../../util/Interpolation\";\nimport FlightAnimationData, { parseTime } from \"./FlightAnimationData\";\n\nclass FlightAnimationDataCache {\n  constructor() {\n    this.currentArrayPos = null;\n    this.mapsPath = [];\n  }\n\n  reset = () => {\n    this.currentArrayPos = null;\n    this.mapsPath = [];\n  };\n}\n\nclass DataGens {\n  static fallbackData = flightInfos => {\n    return {\n      baroAlt: flightInfos.lastFix.baroAlt,\n      gpsAlt: flightInfos.lastFix.gpsAlt,\n      elevation: flightInfos.lastFix.elevation,\n      pos: {\n        lat: flightInfos.lastFix.lat,\n        lng: flightInfos.lastFix.lon\n      },\n      gpsVario: null,\n      baroVario: null,\n      velocity: null\n    };\n  };\n\n  static takeData(data) {\n    return {\n      baroAlt: data.baroAlt,\n      gpsAlt: data.gpsAlt,\n      elevation: data.elevation,\n      pos: {\n        lat: data.pos.lat,\n        lng: data.pos.lng\n      },\n      gpsVario: data.gpsVario,\n      baroVario: data.baroVario,\n      velocity: data.velocity\n    };\n  }\n\n  static blendData(data1, data2, pct) {\n    return {\n      baroAlt: lerp(data1.baroAlt, data2.baroAlt, pct),\n      gpsAlt: lerp(data1.gpsAlt, data2.gpsAlt, pct),\n      elevation: lerp(data1.elevation, data2.elevation, pct),\n      pos: {\n        lat: lerp(data1.pos.lat, data2.pos.lat, pct),\n        lng: lerp(data1.pos.lng, data2.pos.lng, pct)\n      },\n      gpsVario: lerp(data1.gpsVario, data2.gpsVario, pct),\n      baroVario: lerp(data1.baroVario, data2.baroVario, pct),\n      velocity: lerp(data1.velocity, data2.velocity, pct)\n    };\n  }\n\n  static blendDataSpline(data0, data1, data2, data3, pct) {\n    // TODO add catmull-rom spline interpolation\n    return null;\n  }\n}\n\nclass FlightAnimation {\n  constructor(flightInfos) {\n    // Live data\n    this.liveData = new FlightAnimationData();\n    this.liveDataCache = new FlightAnimationDataCache();\n\n    // Data from flight infos, used as fallback\n    this.flightInfos = null;\n    this.flightInfoData = new FlightAnimationData();\n    this.flightInfoDataCache = new FlightAnimationDataCache();\n\n    // 'landed' state\n    this.landed = flightInfos.landed;\n\n    // Set flight infos\n    this.updateInfos(flightInfos);\n  }\n\n  updateInfos = infos => {\n    this.landed |= infos.landed;\n    this.flightInfos = infos;\n    this.flightInfoData.replace(infos.track);\n    this.flightInfoDataCache.reset();\n  };\n\n  updateData = data => {\n    if (data.length < 1) return;\n\n    // Compute start time\n    const data_start_time = parseTime(data[0].timestamp);\n    if (this.liveData.isAfterLastElement(data_start_time)) {\n      // If the new data is newer than everything in the existing data, append\n      this.liveData.append(data);\n    } else {\n      // Otherwise, merge\n      this.liveData.insert(data);\n\n      // Reset animation\n      this.liveDataCache.reset();\n    }\n\n    console.log(\"Animation updated.\", this.liveData);\n  };\n\n  getInterpolatedData = (data, cache, timeStamp) => {\n    if (data.length < 1) return null;\n\n    if (cache.currentArrayPos === null) {\n      cache.currentArrayPos = data.findBisect(timeStamp);\n    } else {\n      // Optimization because we assume that time runs forward and the next value is after the current value\n      cache.currentArrayPos = data.findForwardSwipe(\n        timeStamp,\n        cache.currentArrayPos\n      );\n    }\n\n    // Compute\n    let blendedData = null;\n    let endOfTrack = false;\n    let startOfTrack = false;\n    if (cache.currentArrayPos <= 0) {\n      // If the timestamp is before our track, return first element\n      blendedData = DataGens.takeData(data.at(0));\n      startOfTrack = true;\n    } else if (cache.currentArrayPos >= data.length) {\n      // If the timestamp is after our track, return last element\n      blendedData = DataGens.takeData(data.at(data.length - 1));\n      endOfTrack = true;\n    } else {\n      // If it is in between, return interpolated value\n      const data0 = data.at(cache.currentArrayPos - 1);\n      const data1 = data.at(cache.currentArrayPos);\n      const blend = (timeStamp - data0.t) / (data1.t - data0.t);\n      blendedData = DataGens.blendData(data0, data1, blend);\n    }\n\n    return [blendedData, startOfTrack, endOfTrack];\n  };\n\n  getFallbackData = () => {\n    return [\n      DataGens.fallbackData(this.flightInfos),\n      false,\n      this.flightInfos.landed\n    ];\n  };\n\n  updateAnimation = (animationTimeMillis, lowLatencyMode) => {\n    const animationTimeSeconds = animationTimeMillis / 1000;\n\n    let animationResult = this.getInterpolatedData(\n      this.liveData,\n      this.liveDataCache,\n      animationTimeSeconds\n    );\n    if (!animationResult) {\n      animationResult = this.getInterpolatedData(\n        this.flightInfoData,\n        this.flightInfoDataCache,\n        animationTimeSeconds\n      );\n    }\n    if (!animationResult) {\n      animationResult = this.getFallbackData();\n    }\n\n    const [blendedData, startOfTrack, endOfTrack] = animationResult;\n\n    const result = {\n      ...blendedData,\n      startOfTrack: startOfTrack,\n      endOfTrack: endOfTrack,\n      landed: this.landed\n    };\n\n    return result;\n  };\n}\n\nexport default FlightAnimation;\n","class HighPrecisionTimeSync {\n  // Tolerance should be larger than the duration of one animation frame.\n  // Most animations are 60Hz, meaning 16ms, so 20ms is fine.\n  constructor(tolerance = 20) {\n    this.offset = 0.0;\n    this.tolerance = tolerance;\n  }\n\n  get = (currentHighPrecisionTime, currentTime) => {\n    let estimatedTime = currentHighPrecisionTime + this.offset;\n    const offBy = estimatedTime - currentTime;\n\n    if (offBy > this.tolerance || offBy < -this.tolerance) {\n      this.offset -= offBy;\n      estimatedTime = currentHighPrecisionTime + this.offset;\n    }\n\n    return estimatedTime;\n  };\n}\n\nexport default HighPrecisionTimeSync;\n","import {\n  getChosenPilots,\n  getChosenPilotsObject\n} from \"../../common/PersistentState/ChosenPilots\";\nimport { useState, useEffect } from \"react\";\nimport FlightAnimation from \"./FlightAnimation\";\nimport HighPrecisionTimeSync from \"../../util/HighPrecisionTimeSync\";\nimport { Settings, getSetting } from \"../../common/PersistentState/Settings\";\n\nfunction eqSet(as, bs) {\n  if (as.size !== bs.size) return false;\n  for (const a of as) if (!bs.has(a)) return false;\n  return true;\n}\n\nexport default class XContestAnimation {\n  constructor(setSubscribedFlights) {\n    this._currentAnimationData = {};\n    this._callbacks = [];\n    this._subscribedPilots = getChosenPilots();\n    this._subscribedFlights = new Set();\n    this._pilotInfos = {};\n    this._flightAnimations = {};\n    this._highPrecisionTimeSync = new HighPrecisionTimeSync();\n    const settings_timeOffset = getSetting(Settings.ANIMATION_DELAY);\n    const settings_lowLatencyMode = getSetting(Settings.LOW_LATENCY);\n    this._setting_timeOffset = settings_timeOffset.getValue();\n    this._setting_lowLatencyMode = settings_lowLatencyMode.getValue();\n    settings_timeOffset.registerCallback(value => {\n      this._setting_timeOffset = value;\n    });\n    settings_lowLatencyMode.registerCallback(value => {\n      this._setting_lowLatencyMode = value;\n    });\n\n    this._setSubscribedFlightsCallback = flights => {\n      this._subscribedFlights = flights;\n      setSubscribedFlights(Array.from(flights));\n    };\n    getChosenPilotsObject().registerCallback(this.setSubscribedPilots);\n    requestAnimationFrame(this.animationLoop);\n  }\n\n  // Animation loop\n  animationLoop = highPrecisionTime => {\n    const absTime = Date.now();\n    const syncedTime = this._highPrecisionTimeSync.get(\n      highPrecisionTime,\n      absTime\n    );\n\n    const offsetTime = syncedTime - 1000 * this._setting_timeOffset;\n    const newAnimationData = {};\n    Object.keys(this._subscribedPilots).forEach(pilot => {\n      if (pilot in this._pilotInfos) {\n        const flightId = this._pilotInfos[pilot].flightId;\n        if (flightId in this._flightAnimations) {\n          const flightAnim = this._flightAnimations[flightId];\n          newAnimationData[pilot] = flightAnim.updateAnimation(\n            offsetTime,\n            this._setting_lowLatencyMode\n          );\n        }\n      }\n    });\n\n    this._submitAnimationFrame(newAnimationData);\n    requestAnimationFrame(this.animationLoop);\n  };\n\n  _submitAnimationFrame = data => {\n    this._currentAnimationData = data;\n    for (const cb of this._callbacks) {\n      cb(data);\n    }\n  };\n\n  // External\n  setSubscribedPilots = subscribedPilots => {\n    this._subscribedPilots = subscribedPilots;\n    this._updateImportantFlights();\n  };\n  pushNewInfo = pilotInfo => {\n    console.log(\"newInfo: \", pilotInfo);\n    this._pilotInfos = pilotInfo;\n    this._updateImportantFlights();\n\n    // Update flight info in flightAnimations\n    Object.values(pilotInfo).forEach(flightInfo => {\n      const flightId = flightInfo.flightId;\n      if (flightId in this._flightAnimations) {\n        this._flightAnimations[flightId].updateInfos(flightInfo);\n      }\n    });\n  };\n  pushNewData = (trackId, trackData) => {\n    console.log(\"newTrackdata: \", trackId, trackData);\n    if (trackId in this._flightAnimations)\n      this._flightAnimations[trackId].updateData(trackData);\n  };\n\n  // callback gets called every frame with new data\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n  };\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n  };\n\n  useAnimatedData = () => {\n    const [value, setValue] = useState(this._currentAnimationData);\n\n    useEffect(() => {\n      const cb = newValue => {\n        // trigger component update on change\n        setValue(newValue);\n      };\n\n      this.registerCallback(cb);\n      return () => this.unregisterCallback(cb);\n    }, []);\n\n    return value;\n  };\n\n  // Internal\n  _updateImportantFlights = () => {\n    // Filter important flights\n    let importantFlights = {};\n    Object.values(this._pilotInfos)\n      .filter(val => val.info.user.username in this._subscribedPilots)\n      .forEach(val => {\n        importantFlights[val.flightId] = val;\n      });\n\n    let importantFlightSet = new Set(Object.keys(importantFlights));\n\n    // Cleanup old entries of _flightAnimations\n    {\n      const toRemove = [];\n      for (const flightId in this._flightAnimations) {\n        if (!(flightId in importantFlights)) {\n          toRemove.push(flightId);\n        }\n      }\n      for (const flightId of toRemove) {\n        console.log(\"Removing flightAnimation of '\" + flightId + \"' ...\");\n        delete this._flightAnimations[flightId];\n      }\n    }\n\n    // Add new flightAnimations\n    Object.entries(importantFlights).forEach(([flightId, flightInfo]) => {\n      if (!(flightId in this._flightAnimations)) {\n        this._flightAnimations[flightId] = new FlightAnimation(flightInfo);\n      }\n    });\n\n    // Send subscription change to socket\n    if (!eqSet(importantFlightSet, this._subscribedFlights)) {\n      console.log(\n        \"Changing flight subscribtion: \",\n        this._subscribedFlights,\n        importantFlightSet\n      );\n      this._setSubscribedFlightsCallback(importantFlightSet);\n    }\n  };\n}\n","import { useState, useEffect } from \"react\";\n\nclass EventfulState {\n  constructor(initialValue) {\n    this._callbacks = [];\n    this._callbackData = initialValue;\n  }\n\n  set = value => {\n    this._callbackData = value;\n    for (const cb of this._callbacks) {\n      cb(value);\n    }\n  };\n\n  getValue = () => this._callbackData;\n\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n  };\n\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n  };\n\n  use = () => {\n    const [value, setValue] = useState(this._callbackData);\n\n    useEffect(() => {\n      // trigger component update on change\n      this.registerCallback(setValue);\n      return () => this.unregisterCallback(setValue);\n    }, []);\n\n    return value;\n  };\n}\n\nexport default EventfulState;\n","import XContestSocket from \"./XContestSocket\";\nimport XContestAnimation from \"./XContestAnimation\";\nimport EventfulState from \"../../util/EventfulState\";\n\nexport const ConnectionState = {\n  CONNECTING: \"connecting\", //orange\n  ERROR: \"error\", //red\n  ESTABLISHED: \"established\", //yellow\n  ACTIVE: \"active\", //green\n  INACTIVE: \"inactive\", //orange\n  NO_CONNECTION: \"no connection\", //red\n  NO_INFORMATION: \"no information\" //gray\n};\n\nclass XContestInterface {\n  constructor() {\n    this.pilots = [];\n    this.connectionState = new EventfulState(ConnectionState.NO_INFORMATION);\n    this.pilotInfos = new EventfulState([]);\n    this.socket = new XContestSocket(\n      this.onConnectionStateChanged,\n      this.onInfoMessageReceived,\n      this.onTracklogMessageReceived\n    );\n    this.animation = new XContestAnimation(this.setSubscribedFlights);\n  }\n\n  setSubscribedFlights = flights => {\n    this.socket.setSubscribedFlights(flights);\n  };\n\n  onConnectionStateChanged = state => {\n    this.connectionState.set(state);\n  };\n\n  onInfoMessageReceived = msg => {\n    this.pilots = {};\n    for (const [trackId, track] of msg) {\n      // Skip if we have a newer track of the same person\n      if (track.overriden) continue;\n\n      track.flightId = trackId;\n\n      this.pilots[track.info.user.username] = track;\n    }\n    this.animation.pushNewInfo(this.pilots);\n    this.pilotInfos.set(this.pilots);\n  };\n\n  getPilotInfos = () => this.pilots;\n\n  onTracklogMessageReceived = msg => {\n    this.animation.pushNewData(msg.flightUuid, msg.trackChunk);\n  };\n}\n\n// Singleton stuff\nlet _instance = null;\nexport const getXContestInterface = () => {\n  if (!_instance) {\n    _instance = new XContestInterface();\n  }\n  return _instance;\n};\n\nexport const useXContestPilots = () => getXContestInterface().pilotInfos.use();\nexport const useXContestConnectionState = () =>\n  getXContestInterface().connectionState.use();\n","import { getXContestInterface } from \"../location_provider/XContest/XContestInterface\";\n\nexport default class MapAnimator {\n  constructor(map, google) {\n    this.map = map;\n    this.google = google;\n    this.markers = {};\n  }\n\n  cleanupOldMarkers = data => {\n    const toRemove = [];\n    for (const pilot in this.markers) {\n      if (!(pilot in data)) {\n        toRemove.push(pilot);\n      }\n    }\n    for (const pilot of toRemove) {\n      this.markers[pilot].setMap(null);\n      delete this.markers[pilot];\n    }\n  };\n\n  update = data => {\n    const pilotInfos = getXContestInterface().getPilotInfos();\n\n    // Remove markers that we unsubscribed from\n    this.cleanupOldMarkers(data);\n\n    Object.entries(data).forEach(([pilot, pilotData]) => {\n      if (!(pilot in pilotInfos)) return;\n      const info = pilotInfos[pilot];\n\n      const pos = { lat: pilotData.pos.lat, lng: pilotData.pos.lng };\n\n      // Add marker if it doesn't exist\n      if (!(pilot in this.markers)) {\n        this.markers[pilot] = new this.google.maps.Marker({\n          map: this.map,\n          position: pos,\n          title: info.info.user.fullname\n        });\n      }\n\n      // Update all marker properties\n      const marker = this.markers[pilot];\n      marker.setPosition(pos);\n    });\n    //console.log(data);\n  };\n}\n","import React, { useState, useRef, useLayoutEffect, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport useGoogleMapsApi from \"../common/GoogleMapsApiLoader\";\nimport { LoadingPage, ErrorPage } from \"./StatusPages\";\nimport mapStyle from \"./MapStyle.json\";\nimport { getXContestInterface } from \"../location_provider/XContest/XContestInterface\";\nimport MapAnimator from \"./MapAnimator\";\n\nconst LiveMap = () => {\n  const [mapReady, mapError, google] = useGoogleMapsApi();\n  const mapsRef = useRef();\n  const [map, setMap] = useState(null);\n\n  // Initialize Map\n  useLayoutEffect(() => {\n    if (mapReady && !map) {\n      setMap(\n        new google.maps.Map(mapsRef.current, {\n          center: { lat: 46.509012, lng: 11.827984 },\n          mapTypeId: \"terrain\",\n          zoom: 12,\n          maxZoom: 15,\n          disableDefaultUI: true,\n          scaleControl: true,\n          fullscreenControl: true,\n          styles: mapStyle\n        })\n      );\n    }\n  }, [mapReady, map, google, mapsRef]);\n\n  // Register map for updates\n  useEffect(() => {\n    if (map && google) {\n      const mapAnimator = new MapAnimator(map, google);\n      const mapAnimatorUpdateCallback = mapAnimator.update;\n      getXContestInterface().animation.registerCallback(\n        mapAnimatorUpdateCallback\n      );\n\n      return () => {\n        getXContestInterface().animation.unregisterCallback(\n          mapAnimatorUpdateCallback\n        );\n      };\n    }\n  }, [map, google]);\n\n  return (\n    <React.Fragment>\n      <Box\n        width=\"100%\"\n        height=\"100%\"\n        display={mapReady ? \"block\" : \"none\"}\n        ref={mapsRef}\n      ></Box>\n      <LoadingPage\n        message=\"Loading Maps ...\"\n        hideIf={mapReady || mapError}\n      ></LoadingPage>\n      <ErrorPage message=\"Unable to load map!\" hideIf={!mapError}></ErrorPage>\n    </React.Fragment>\n  );\n};\n\nexport default LiveMap;\n","import React from \"react\";\nimport {\n  Box,\n  useMediaQuery,\n  useTheme,\n  Typography,\n  Toolbar\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nimport { lighten } from \"@material-ui/core/styles\";\nimport { Button, Dialog, DialogActions, TextField } from \"@material-ui/core\";\n\nimport {\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell\n} from \"@material-ui/core\";\n\nimport { useXContestPilots } from \"../location_provider/XContest/XContestInterface\";\n\nconst columns = [\n  {\n    id: \"name\",\n    label: \"Name\",\n    minWidth: 0,\n    render: row => {\n      return (\n        <React.Fragment>\n          {row.user.fullname}\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            color=\"textSecondary\"\n            style={{ paddingLeft: \".3em\" }}\n          >\n            [{row.user.username}]\n          </Typography>\n        </React.Fragment>\n      );\n    }\n  },\n  {\n    id: \"country\",\n    label: \"Country\",\n    minWidth: \"4em\",\n    align: \"right\",\n    render: row => {\n      return (\n        <React.Fragment>\n          {row.user.nationality.iso}\n          <Box\n            fontSize=\"large\"\n            marginLeft=\"4px\"\n            boxShadow={1}\n            style={{ verticalAlign: \"middle\" }}\n            className={\n              \"flag-icon flag-icon-\" + row.user.nationality.iso.toLowerCase()\n            }\n          ></Box>\n        </React.Fragment>\n      );\n    }\n  }\n];\n\nfunction createPlaceholderPilot(name) {\n  return {\n    info: {\n      user: {\n        login: null,\n        username: name,\n        fullname: \"Offline User\",\n        gender: \"-\",\n        nationality: { iso: \"--\", name: \"--\" }\n      },\n      flightId: null\n    }\n  };\n}\n\nconst PilotSelector = props => {\n  const theme = useTheme();\n  const pilotList = useXContestPilots();\n\n  // State\n  const [selected, setSelected] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const numSelected = selected.length;\n\n  const closeWindow = () => {\n    // Reset state\n    setSearch(\"\");\n    setSelected([]);\n    props.onClose();\n  };\n\n  const handleClick = (_event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n  const wasAlreadyAdded = name => props.alreadyAdded.indexOf(name) !== -1;\n  const matchesSearch = name => {\n    if (search === \"\") {\n      return true;\n    }\n    return name.toLowerCase().includes(search.toLowerCase());\n  };\n\n  // Create virtual pilot if nobody found\n  let filteredPilots = Object.values(pilotList).filter(userData => {\n    return (\n      matchesSearch(userData.info.user.username) ||\n      matchesSearch(userData.info.user.fullname)\n    );\n  });\n\n  // Add dummy pilot if list is empty and search string is valid\n  if (filteredPilots.length === 0 && !/\\s/.test(search) && search.length > 0) {\n    filteredPilots.push(createPlaceholderPilot(search));\n  }\n\n  return (\n    <Dialog open={props.open} onClose={closeWindow} fullScreen={fullScreen}>\n      <Toolbar\n        style={\n          numSelected === 0\n            ? {}\n            : theme.palette.type === \"light\"\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark\n              }\n        }\n      >\n        {numSelected > 0 ? (\n          <Typography component=\"div\" color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography component=\"div\" variant=\"h6\" id=\"tableTitle\">\n            Add new pilots:\n          </Typography>\n        )}\n      </Toolbar>\n      <Box paddingLeft=\"1em\" paddingRight=\"1em\" paddingTop=\"4px\">\n        <TextField\n          //autoFocus\n          margin=\"dense\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n          id=\"search_field\"\n          label=\"Search\"\n          type=\"search\"\n          fullWidth\n          onChange={event => setSearch(event.target.value)}\n        />\n      </Box>\n      <Box flex=\"1 1 auto\" marginY=\"8px\" style={{ overflowY: \"auto\" }}>\n        <Table stickyHeader size=\"small\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                  component=\"th\"\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredPilots.map(row => {\n              const username = row.info.user.username;\n\n              const isItemSelected = isSelected(username);\n\n              const itemDisabled = wasAlreadyAdded(username);\n              const style = itemDisabled\n                ? { filter: \"grayscale(100%) opacity(30%)\" }\n                : {};\n\n              const columnContent = columns.map(column => {\n                return (\n                  <TableCell key={column.id} align={column.align}>\n                    <Box style={style}>{column.render(row.info)}</Box>\n                  </TableCell>\n                );\n              });\n\n              if (itemDisabled) {\n                return <TableRow key={username}>{columnContent}</TableRow>;\n              }\n\n              return (\n                <TableRow\n                  key={username}\n                  selected={isItemSelected}\n                  onClick={event => handleClick(event, username)}\n                >\n                  {columnContent}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Box>\n      <DialogActions>\n        <Button onClick={closeWindow} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          disabled={numSelected === 0}\n          onClick={() => {\n            props.onAddPilots(selected);\n            closeWindow();\n          }}\n          color=\"primary\"\n        >\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default PilotSelector;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { getXContestInterface } from \"../location_provider/XContest/XContestInterface\";\n\nconst AnimatedPilotList = props => {\n  const animatedData = getXContestInterface().animation.useAnimatedData();\n\n  const content = Object.entries(props.pilots).map(([pilotId, pilotName]) => {\n    let displayedName = pilotName;\n    if (pilotName === null) {\n      displayedName = pilotId;\n    }\n\n    let pilotDebugOutput = [];\n    if (pilotId in animatedData) {\n      const animatedPilotData = animatedData[pilotId];\n\n      for (const key in animatedPilotData) {\n        pilotDebugOutput.push(\n          <tr key={key}>\n            <td>{key}</td>\n            <td>\n              {(Math.round(100 * animatedPilotData[key]) / 100).toString()}\n            </td>\n          </tr>\n        );\n      }\n    }\n\n    return (\n      <Box\n        margin=\"10px\"\n        key={pilotId}\n        onClick={() => props.removePilots([pilotId])}\n      >\n        {displayedName}\n        <table>\n          <tbody>{pilotDebugOutput}</tbody>\n        </table>\n      </Box>\n    );\n  });\n\n  // console.log(\"Data:\", animatedData);\n  return (\n    <Box height=\"100%\" style={{ overflowY: \"auto\" }}>\n      {content}\n    </Box>\n  );\n};\n\nexport default AnimatedPilotList;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Fab } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Box from \"@material-ui/core/Box\";\nimport PilotSelector from \"./PilotSelector\";\nimport { useChosenPilots } from \"../common/PersistentState/ChosenPilots\";\nimport AnimatedPilotList from \"./AnimatedPilotList\";\n\nconst Pilots = () => {\n  const theme = useTheme();\n  const [pilotSelectorOpen, setPilotSelectorOpen] = useState(false);\n\n  const [pilots, addPilots, removePilots] = useChosenPilots();\n\n  // TODO sort pilots\n\n  return (\n    <React.Fragment>\n      <AnimatedPilotList\n        pilots={pilots}\n        removePilots={removePilots}\n      ></AnimatedPilotList>\n\n      <Box\n        position=\"absolute\"\n        bottom={theme.spacing(2)}\n        right={theme.spacing(2)}\n      >\n        <Fab\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => setPilotSelectorOpen(true)}\n        >\n          <AddIcon />\n        </Fab>\n      </Box>\n      <PilotSelector\n        open={pilotSelectorOpen}\n        onClose={() => setPilotSelectorOpen(false)}\n        onAddPilots={addPilots}\n        alreadyAdded={Object.keys(pilots)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Pilots;\n","import React from \"react\";\nimport { useState } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ErrorIcon from \"@material-ui/icons/ErrorRounded\";\nimport SignalCellular4BarIcon from \"@material-ui/icons/SignalCellular4Bar\";\nimport SignalCellularConnectedNoInternet4BarIcon from \"@material-ui/icons/SignalCellularConnectedNoInternet4Bar\";\nimport SignalCellularNullIcon from \"@material-ui/icons/SignalCellularNull\";\n\nimport { useXContestConnectionState } from \"../location_provider/XContest/XContestInterface\";\nimport { ConnectionState } from \"../location_provider/XContest/XContestInterface\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  popover: {\n    padding: theme.spacing(1),\n    align: \"right\"\n  }\n}));\n\nconst LoadingBadge = props => {\n  return (\n    <Badge\n      //overlap=\"circle\"\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      }}\n      badgeContent={\n        <CircularProgress\n          disableShrink={props.disableShrink}\n          color=\"secondary\"\n          size={15}\n          thickness={10}\n        />\n      }\n    >\n      {props.children}\n    </Badge>\n  );\n};\n\nconst TitleBar = () => {\n  const classes = useStyles();\n  const connectionState = useXContestConnectionState();\n\n  const popoverActions = React.useRef();\n  const [connectionPopAnchor, setConnectionPopAnchor] = useState(null);\n\n  React.useLayoutEffect(() => {\n    if (popoverActions.current) {\n      popoverActions.current.updatePosition();\n    }\n  }, [connectionState, connectionPopAnchor]);\n\n  const renderConnectionIcon = () => {\n    switch (connectionState) {\n      case ConnectionState.ACTIVE:\n        return <SignalCellular4BarIcon />;\n      case ConnectionState.CONNECTING:\n        return (\n          <LoadingBadge>\n            <SignalCellularNullIcon />\n          </LoadingBadge>\n        );\n      case ConnectionState.ERROR:\n        return <ErrorIcon color=\"error\" />;\n      case ConnectionState.ESTABLISHED:\n        return (\n          <LoadingBadge disableShrink>\n            <SignalCellularNullIcon />\n          </LoadingBadge>\n        );\n      case ConnectionState.INACTIVE:\n        return <SignalCellularConnectedNoInternet4BarIcon />;\n      case ConnectionState.NO_CONNECTION:\n        return <SignalCellularNullIcon />;\n      default:\n        return <SignalCellularNullIcon />;\n    }\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Box clone>\n            <IconButton\n              className={classes.menuButton}\n              edge=\"start\"\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </Box>\n\n          <Box flexGrow={1} clone>\n            <Typography variant=\"h6\">XC Live Viewer</Typography>\n          </Box>\n\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={event => setConnectionPopAnchor(event.currentTarget)}\n          >\n            {renderConnectionIcon()}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Popover\n        open={Boolean(connectionPopAnchor)}\n        anchorEl={connectionPopAnchor}\n        onClose={() => setConnectionPopAnchor(null)}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        action={popoverActions}\n      >\n        <Box className={classes.popover}>\n          <Typography>{connectionState}</Typography>\n        </Box>\n      </Popover>\n    </div>\n  );\n};\n\nexport default TitleBar;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\n\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport MapIcon from \"@material-ui/icons/Map\";\n\nimport \"./MainPage.css\";\n\n// TODO import LazyLoading from \"./util/LazyLoading\";\n\nimport LiveMap from \"./pages/LiveMap\";\nimport Pilots from \"./pages/Pilots\";\nimport TitleBar from \"./pages/TitleBar\";\n\nexport default function MainPage() {\n  const [tabId, setTabId] = React.useState(1);\n  const [windowHeight, setWindowHeight] = React.useState(0);\n\n  // Workaround for mobile screens reporting an incorrect window height\n  const updateWindowHeight = () => {\n    setWindowHeight(window.innerHeight);\n  };\n  React.useLayoutEffect(() => {\n    updateWindowHeight();\n    window.addEventListener(\"resize\", updateWindowHeight);\n    return () => window.removeEventListener(\"resize\", updateWindowHeight);\n  }, []);\n\n  // Callbacks for changing the current page\n  const handleNavigationButton = (_event, newValue) => setTabId(newValue);\n\n  return (\n    <Box height={windowHeight} display=\"flex\" flexDirection=\"column\">\n      <Box zIndex={100}>\n        <TitleBar></TitleBar>\n      </Box>\n      <Box flexGrow={1} clone>\n        <SwipeableViews disabled index={tabId}>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            <LiveMap></LiveMap>\n          </Box>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            <Pilots></Pilots>\n          </Box>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            Item Three\n          </Box>\n        </SwipeableViews>\n      </Box>\n      <Box zIndex={100} boxShadow={3}>\n        <BottomNavigation\n          value={tabId}\n          onChange={handleNavigationButton}\n          showLabels\n        >\n          <BottomNavigationAction label=\"Map\" icon={<MapIcon />} />\n          <BottomNavigationAction label=\"Pilots\" icon={<PeopleIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport MainPage from \"./MainPage\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport \"flag-icon-css/css/flag-icon.min.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Read the .env file\nrequire(\"dotenv\").config();\n\n// Render the page\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}