{"version":3,"sources":["common/GoogleMapsApiLoader.js","pages/StatusPages.jsx","common/PersistentState/PersistentState.js","common/PersistentState/Settings.js","location_provider/XContest/XContestSocket.js","common/PersistentState/ChosenPilots.js","util/Interpolation.js","util/RunningDerivation.js","util/FindBisect.js","location_provider/XContest/FlightAnimationData.js","location_provider/XContest/FlightAnimation.js","util/HighPrecisionTimeSync.js","location_provider/XContest/XContestAnimation.js","util/EventfulState.js","location_provider/XContest/XContestInterface.js","util/rng.js","util/string2color.js","common/PilotIcon.js","services/MapViewportControllerService.js","pages/GoogleMapsPage/GoogleMapsTrack.js","pages/GoogleMapsPage/MapPilotInfoWindow.js","pages/GoogleMapsPage/MapAnimator.js","services/GPSProvider.js","pages/GoogleMapsPage/GoogleMapsController.js","pages/GoogleMapsPage/LiveMap.jsx","ext/geolocation-marker.js","common/History.js","util/SubWindow.jsx","util/Rotation.js","util/LastFixState.jsx","pages/PilotSelector/PilotSelectorListRenderer.jsx","pages/PilotSelector/PilotSelectorList.jsx","util/CompareArrays.js","pages/PilotSelector/PilotSelector.jsx","util/ContextMenuHandler.js","pages/PilotList/AnimatedPilotListEntry.jsx","pages/PilotList/AnimatedPilotList.jsx","util/MapLinks.js","pages/PilotList/Pilots.jsx","util/NumberInput.jsx","pages/SettingsPage/SettingsPageEntries.jsx","pages/SettingsPage/SettingsPageTitleBar.jsx","pages/SettingsPage/SettingsPage.jsx","pages/MainMenu.jsx","pages/TitleBar.jsx","common/PersistentState/PageState.js","MainPage.jsx","App.jsx","serviceWorker.jsx","index.js"],"names":["googleMapsApiPromise","useGoogleMapsApi","useState","ready","error","state","setState","useEffect","Loader","apiKey","process","load","promiseParameters","gotCanceled","then","console","log","catch","e","window","google","useStyles","makeStyles","theme","progress","margin","spacing","LoadingPage","message","hideIf","subRef","classes","Box","width","height","display","alignItems","justifyContent","ref","textAlign","CircularProgress","className","Typography","ErrorPage","fontSize","color","PersistentState","key","initialValue","getValue","jsonValue","localStorage","getItem","locallyCachedJson","locallyCachedValue","JSON","parse","value","_notifyAll","callbacks","cb","registerCallback","includes","push","unregisterCallback","index","indexOf","splice","setValue","removeItem","setItem","stringify","updateValue","use","newValue","this","registerPersistentState","name","Settings","PATH_LENGTH","LIMIT_PATHS","LOW_LATENCY","ANIMATION_DELAY","FPS_LIMIT","FPS_RATE","GPS_ENABLED","createSetting","settingsObjects","getSetting","XContestSocket","onStateChanged","onInfoMessage","onTracklogMessage","onFlightLanded","formatSubscribedFlights","subscribedFlights","map","flightId","startTimestamp","flightUuid","start","Date","toISOString","refreshSubscribedFlights","sock","readyState","WebSocket","OPEN","connected","formattedSubscribedFlights","send","tag","contents","setSubscribedFlights","flights","onOpen","handleReset","debug","setConnectionState","ConnectionState","ESTABLISHED","area","lat","lon","onMessage","evt","ACTIVE","msg","data","clearTimeout","watchdog","setTimeout","INACTIVE","processMessage","onClose","NO_CONNECTION","connect","bind","onError","dispatchInfoMessage","dispatchTracklogMessage","dispatchFlightLandedMessage","warn","CONNECTING","onopen","onmessage","onclose","onerror","ERROR","alert","persistentChosenPilots","getChosenPilotsObject","getChosenPilots","setChosenPilots","setChosenPilotsAndUpdateNames","chosenPilots","chosenPilotsUpdated","pilotList","getXContestInterface","getPilotInfos","pilotId","currentName","info","user","fullname","addPilots","pilotIds","newPilotState","changed","removePilots","lerp","val1","val2","pct","spline","p0","t0","p1","t1","p2","t2","p3","t3","t","A1","A2","A3","B1","B2","splineDerivative","A1d","A2d","A3d","B1d","B2d","RunningDerivation","smoothingFactor","derivation_func","a","b","invalid_func","computeDiff","isInvalid","old_val","old_t","running_avg","new_val","new_t","dt","deriv","weight","Math","pow","findBisect","targetValue","length","dataFn","minIndex","maxIndex","currentIndex","parseTime","isoStr","round","FlightAnimationData","at","timestamp","pos","findForwardSwipe","startPos","getNewestTimestamp","counter_gpsVario","counter_baroVarion","counter_velocity","end","getDistance","elem","lng","baroAlt","gpsAlt","gpsVario","update","baroVario","velocity","newElem","elevation","clear","append","newElements","oldElements","oldPos","newPos","oldEl","newEl","reset","FlightAnimationDataCache","currentArrayPos","mapsPath","mapsPathNewestPos","DataGens","data1","data2","timeStamp","data0","data3","dT","d0","d1","d2","d3","fallbackData","flightInfos","lastFix","FlightAnimation","destroy","updateSettings","settings","timeOffsetSeconds","lowLatencyMode","trackLengthMinutes","limitTracks","liveDataCache","flightInfoDataCache","updateInfos","infos","landed","flightInfoData","replace","track","updateData","data_start_time","liveData","isAfterLastElement","insert","updateLanded","getInterpolatedData","cache","blendedData","endOfTrack","startOfTrack","velocityVec","takeData","computeLinearVelocity","blendDataSpline","computeSplineVelocity","getFallbackData","computeTrack","oldestTimestamp","numRemove","slice","updateAnimation","animationTimeMillis","animationTimeSeconds","animationResult","newestDataTimestamp","HighPrecisionTimeSync","tolerance","get","currentHighPrecisionTime","currentTime","estimatedTime","offset","offBy","XContestAnimation","_nextUpdate","now","animationLoop","absTime","frameTimeDelta","_setting_fps","_setting_limitFps","newAnimationData","Object","keys","_subscribedPilots","forEach","pilot","_pilotInfos","_flightAnimations","flightAnim","_submitAnimationFrame","requestAnimationFrame","_currentAnimationData","_callbacks","setSubscribedPilots","subscribedPilots","_updateImportantFlights","pushNewInfo","pilotInfo","values","flightInfo","pushNewData","trackId","trackData","pushFlightLanded","getData","importantFlights","filter","val","username","importantFlightSet","Set","toRemove","entries","eqSet","as","bs","size","has","_subscribedFlights","flightsWithTimestamps","_setSubscribedFlightsCallback","_highPrecisionTimeSync","settings_limitFps","settings_fps","Array","from","EventfulState","set","_callbackData","NO_INFORMATION","XContestInterface","socket","pilots","onConnectionStateChanged","connectionState","onInfoMessageReceived","overriden","animation","pilotInfos","onTracklogMessageReceived","trackChunk","onFlightLandedMessageReceived","_instance","createRng","seedString","seed","xmur3","str","i","h","imul","charCodeAt","sfc32","c","d","string2color","lightness","rand","colorHue","min","max","convert","hsl","hex","getPilotIconColor","getPilotIcon","waitingForStart","hasLanded","path","fillColor","fillOpacity","anchor","x","y","strokeWeight","scale","rotation","getRhumbLineBearing","MapViewportControllerService","setFreeMode","oldValue","enabled","setSinglePilotMode","followSinglePilot","_emitZoomToSinglePilot","mapControllers","zoomToSinglePilot","onAnimationFrame","oldState","newState","pilotName","registerMapController","controller","unregisterMapController","includeSelf","getMapViewportControllerService","GoogleMapsTrack","initialData","pilotInfoWindow","setMap","marker","newestTrackSegment","_updateTrack","startTime","endTime","currentTrackVersion","oldTrack","getPath","oldLength","getLength","newPoint","maps","LatLng","setPath","_updateNewestSegment","trackEndPos","currentPos","newestTrackSegmentData","previousTrackEndPos","previousPos","point","setAt","setPosition","pilotIcon","getIcon","newPilotIcon","pilotColor","pilotIconChanged","oldPilotIcon","p","setIcon","trackColor","getPilotTrackColor","Marker","position","title","icon","addListener","open","Polyline","strokeColor","MapPilotInfoWindow","currentPilot","infoWindow","updateContent","close","heightGnd","newContent","vario","varioAbs","abs","floor","getContent","setContent","InfoWindow","content","pixelOffset","Size","disableAutoPan","MapAnimator","cleanupOldTracks","tracks","pilotData","GPSProvider","_updateGPSState","gpssettingEnabled","callbackRegistered","enableGps","_watchId","navigator","geolocation","watchPosition","_onNewGPSData","_onGPSError","enableHighAccuracy","clearWatch","_setGPSData","_gpsData","getGPSProvider","GoogleMapsController","getZoom","setZoom","shutdown","onGpsUpdate","gpsData","gpsState","onUserInput","insideMapsApiFunction","updateViewport","watchedCoords","previousSinglePersonMode","singlePersonMode","panTo","bounds","LatLngBounds","coord","extend","fitBounds","controllerState","viewportInitialized","coords","latitude","longitude","lastUpdate","userInputListeners","pure","LiveMap","mapReady","mapError","mapsRef","useRef","useLayoutEffect","Map","current","center","mapTypeId","zoom","maxZoom","disableDefaultUI","zoomControl","fullscreenControl","styles","mapStyle","mapAnimatorUpdateCallback","geolocationMarker","createGeolocationMarker","GeolocationMarker","opt_map","opt_outerMarkerOpts","opt_markerOpts","opt_circleOpts","outerMarker_","marker_","circle_","watchId_","outerMarkerOpts","clickable","cursor","draggable","flat","SymbolPath","CIRCLE","zIndex","markerOpts","optimized","copyOptions_","circleOpts","radius","strokeOpacity","Circle","MVCObject","prototype","call","maximumAge","bindTo","invalidPropertiesExpr_","test","Error","positionOpts","getBounds","accuracy","watchPosition_","unbind","setOptions","newPosition","mapNotSet","getMap","getMinimumAccuracy","getAccuracy","getPosition","equals","updatePosition_","geolocationError_","getPositionOptions","event","trigger","target","source","opt","DISALLOWED_OPTIONS","setPositionOptions","geolocationMarkerStateUpdater","mapController","Fragment","ourHistory","addEventListener","callback","pop","history","pushState","passive","SubWindow","props","_setOpen","historyOpen","_setHistoryOpen","useHistory","pushFunction","histSize","popFunction","back","openWindow","Dialog","fullScreen","maxWidth","fullWidth","children","getRotationStyle","bearing","transform","toString","WebkitTransform","MozTransform","msTransform","OTransform","LastFixState","getMessage","relative","showLastFix","time_diff","getTime","timeStr","formatTimeDiff","millis","negative","secs","mins","hours","padStart","days","timestampToTimeString","toLocaleTimeString","shallowRerender","msgRef","msgSpan","assign","style","innerHTML","React","createRef","PureComponent","LastFixArrow","onNewGPSDataReceived","updateThroughRef","setFix","newFix","arrowRef","arrowStyle","getArrowRotationStyle","distanceRef","newDistance","myPosition","pilotFix","distance","TableHeader","TableCell","component","variant","boxSizing","flex","PilotSelectorListRow","iso","disabled","undefined","paddingLeft","paddingTop","paddingBottom","paddingRight","marginLeft","boxShadow","verticalAlign","toLowerCase","renderRow","nationality","selected","alreadyAdded","padding","backgroundColor","onClick","onPilotClicked","sortPilotList","gps","myPos","distances","sort","el1","el2","el","PilotSelectorList","startRendering","didMount","updatePilotListIfNecessary","newPilotList","arraysEqual","array1","array2","l","sortedPilotList","onNewGpsData","onNewPilotInfos","overflow","disableShrink","displayedPilots","filterPilotList","search","matchesSearch","filteredPilots","itemCount","itemSize","itemData","itemKey","fullHeightWindow","PilotSelector","useTheme","useMediaQuery","breakpoints","down","setSelected","setSearch","numSelected","closeWindow","paper","Toolbar","palette","type","secondary","main","lighten","light","text","primary","dark","id","TextField","autoComplete","label","onChange","marginY","flexDirection","pilotClicked","selectedIndex","newSelected","concat","DialogActions","Button","onAddPilots","longPressDuration","platform","ContextMenuHandler","onTouchStart","contextMenuPossible","touch","touches","longPressCountdown","onTouchMove","onTouchCancel","onTouchEnd","onContextMenu","preventDefault","FirstRowLeft","styled","FirstRowRight","marginRight","SecondRow","PilotExpansionPanelSummary","withStyles","root","whiteSpace","ExpansionPanelSummary","AnimatedPilotListEntry","extractImportantProps","velocityLat","velocityLng","propsChanged","newProps","oldProps","pilotProps","onNewDataReceived","newPilotProps","heightRef","newHeight","renderHeight","lastFixRef","iconRef","childNodes","getAttribute","setAttribute","liveStateRef","contextMenuHandler","onContextMenuHandler","left","pageX","top","pageY","pilotIconRotation","ExpansionPanel","TransitionProps","unmountOnExit","expandIcon","viewBox","fill","stroke","ExpansionPanelDetails","MozUserSelect","WebkitUserSelect","msUserSelect","AnimatedPilotList","getSortedPilotList","pilotsAndDistances","landedPilotList","pilotListChanged","onlinePilots","removePilot","showContextMenu","mousePos","contextMenu","hideContextMenu","contextMenu_delete","contextMenu_navigateTo","navigateTo","pilotIsOnline","offlinePilots","getPilotName","bgcolor","Popover","anchorReference","anchorPosition","transformOrigin","vertical","horizontal","List","dense","ListItem","button","ListItemIcon","ListItemText","Pilots","openPilotSelector","pilotSelectorOpen","closePilotSelector","chosenPilotsChanged","newChosenPilots","bottom","right","Fab","Component","NumberInput","internalUpdate","hiddenLabel","InputProps","endAdornment","InputAdornment","unit","inputProps","resultState","BooleanSetting","setting","settingValue","setSettingValue","flipSetting","primaryText","secondaryText","ListItemSecondaryAction","Switch","edge","checked","NumberSetting","SettingsPageTitleBar","resetAllSettingsDialogOpen","setResetAllSettingsDialogOpen","AppBar","IconButton","flexGrow","DialogTitle","DialogContent","DialogContentText","resetAllSettings","settingsObj","autoFocus","SettingsPage","settingLimitPaths","settingFpsLimit","Divider","MainMenu","settingsOpen","setSettingsOpen","SwipeableDrawer","disableSwipeToOpen","minWidth","clone","popover","align","LoadingBadge","Badge","anchorOrigin","badgeContent","thickness","TitleBar","useXContestConnectionState","popoverActions","connectionPopAnchor","setConnectionPopAnchor","mainMenuOpen","setMainMenuOpen","updatePosition","currentTarget","renderConnectionIcon","Boolean","anchorEl","action","TabID","switchToMap","MainPage","PageState","tabId","setTabId","windowHeight","setWindowHeight","isSmartphone","updateWindowHeight","innerHeight","removeEventListener","BottomNavigation","handleNavigationButton","_event","showLabels","BottomNavigationAction","App","location","hostname","match","require","config","ReactDOM","render","document","getElementById","unregister","serviceWorker","registration"],"mappings":"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","file":"static/js/main.95d9da79.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Loader } from \"@googlemaps/loader\";\n\n// Hook\nlet googleMapsApiPromise = null;\nfunction useGoogleMapsApi() {\n  // Keeping track of script loaded and error state\n  const [state, setState] = useState({\n    ready: false,\n    error: false\n  });\n\n  useEffect(\n    () => {\n      if (googleMapsApiPromise === null) {\n        googleMapsApiPromise = new Loader({\n          apiKey: process.env.REACT_APP_GAPI_KEY\n        }).load();\n      }\n\n      let promiseParameters = { gotCanceled: false };\n      googleMapsApiPromise\n        .then(() => {\n          if (promiseParameters.gotCanceled) return;\n          console.log(\"Google Maps API loaded.\");\n          setState({\n            ready: true,\n            error: false\n          });\n        })\n        .catch(e => {\n          if (promiseParameters.gotCanceled) return;\n          console.log(\"Error: Cannot load Google Maps API:\", e);\n          setState({\n            ready: false,\n            error: true\n          });\n        });\n\n      return () => {\n        promiseParameters.gotCanceled = true;\n      };\n    },\n    [] // Don't re-run\n  );\n\n  return [state.ready, state.error, state.ready ? window.google : null];\n}\n\nexport default useGoogleMapsApi;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2)\n  }\n}));\n\nexport const LoadingPage = ({ message, hideIf, subRef }) => {\n  const classes = useStyles();\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      display={hideIf ? \"none\" : \"flex\"}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      ref={subRef}\n    >\n      <Box textAlign=\"center\">\n        <CircularProgress className={classes.progress} />\n        <Typography>{message}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport const ErrorPage = ({ message, hideIf }) => {\n  const classes = useStyles();\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      display={hideIf ? \"none\" : \"flex\"}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box textAlign=\"center\">\n        <ErrorIcon\n          fontSize=\"large\"\n          color=\"error\"\n          className={classes.progress}\n        />\n        <Typography color=\"error\">{message}</Typography>\n      </Box>\n    </Box>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nclass PersistentState {\n  constructor(key, initialValue) {\n    this.key = key;\n    this.initialValue = initialValue;\n    this.callbacks = [];\n\n    this.locallyCachedJson = null;\n    this.locallyCachedValue = null;\n  }\n\n  getValue = () => {\n    const jsonValue = localStorage.getItem(this.key);\n\n    // Caching, to reduce the amount of times the value !== itself.\n    // This is a performance optimization for PureComponents.\n    if (this.locallyCachedJson !== jsonValue) {\n      this.locallyCachedJson = jsonValue;\n      this.locallyCachedValue = JSON.parse(jsonValue);\n    }\n\n    const value = this.locallyCachedValue;\n    if (value === null) return this.initialValue;\n    return value;\n  };\n\n  _notifyAll = () => {\n    const value = this.getValue();\n    for (const cb of this.callbacks) {\n      cb(value);\n    }\n  };\n\n  registerCallback = cb => {\n    if (!this.callbacks.includes(cb)) this.callbacks.push(cb);\n  };\n\n  unregisterCallback = cb => {\n    const index = this.callbacks.indexOf(cb);\n    if (index >= 0) {\n      this.callbacks.splice(index, 1);\n    }\n  };\n\n  setValue = value => {\n    if (value == null) {\n      localStorage.removeItem(this.key);\n    } else {\n      localStorage.setItem(this.key, JSON.stringify(value));\n    }\n\n    this._notifyAll();\n  };\n\n  updateValue = cb => {\n    this.setValue(cb(this.getValue()));\n  };\n\n  use = () => {\n    const [value, setValue] = useState(this.getValue);\n\n    useEffect(() => {\n      const cb = newValue => {\n        // trigger component update on change\n        setValue(newValue);\n      };\n\n      this.registerCallback(cb);\n      return () => this.unregisterCallback(cb);\n    }, []);\n\n    return [value, this.setValue];\n  };\n}\n\nexport const registerPersistentState = (name, initialValue) => {\n  return new PersistentState(name, initialValue);\n};\n","import { registerPersistentState } from \"./PersistentState\";\n\n// Keys\nexport const Settings = {\n  PATH_LENGTH: \"PATH_LENGTH\",\n  LIMIT_PATHS: \"LIMIT_PATHS\",\n  LOW_LATENCY: \"LOW_LATENCY\",\n  ANIMATION_DELAY: \"ANIMATION_DELAY\",\n  FPS_LIMIT: \"FPS_LIMIT\",\n  FPS_RATE: \"FPS_RATE\",\n  GPS_ENABLED: \"GPS_ENABLED\"\n};\n\n// Wrapper for simplification\nconst createSetting = (key, value) =>\n  registerPersistentState(\"SETTINGS_\" + key, value);\n\n// Settings objects\nconst settingsObjects = {\n  PATH_LENGTH: createSetting(Settings.PATH_LENGTH, 15),\n  LIMIT_PATHS: createSetting(Settings.LIMIT_PATHS, false),\n  LOW_LATENCY: createSetting(Settings.LOW_LATENCY, false),\n  ANIMATION_DELAY: createSetting(Settings.ANIMATION_DELAY, 80),\n  FPS_LIMIT: createSetting(Settings.FPS_LIMIT, true),\n  FPS_RATE: createSetting(Settings.FPS_RATE, 10),\n  GPS_ENABLED: createSetting(Settings.GPS_ENABLED, true)\n};\n\nexport const getSetting = key => settingsObjects[key];\n\nexport const resetAllSettings = () => {\n  Object.values(settingsObjects).forEach(settingsObj =>\n    settingsObj.setValue(null)\n  );\n};\n","import { ConnectionState } from \"./XContestInterface\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\n\nexport default class XContestSocket {\n  constructor(\n    onStateChanged,\n    onInfoMessage,\n    onTracklogMessage,\n    onFlightLanded\n  ) {\n    this.setConnectionState = onStateChanged;\n    this.dispatchInfoMessage = onInfoMessage;\n    this.dispatchTracklogMessage = onTracklogMessage;\n    this.dispatchFlightLandedMessage = onFlightLanded;\n    this.subscribedFlights = [];\n    this.connect();\n    this.connected = false;\n\n    // Register hooks, so we get notified when these settings change\n    getSetting(Settings.PATH_LENGTH).registerCallback(\n      this.refreshSubscribedFlights\n    );\n    getSetting(Settings.LIMIT_PATHS).registerCallback(\n      this.refreshSubscribedFlights\n    );\n  }\n\n  connect() {\n    if (\"WebSocket\" in window) {\n      this.connected = false;\n      this.setConnectionState(ConnectionState.CONNECTING);\n      this.sock = new WebSocket(\"wss://live.xcontest.org/websock/webclient\");\n      this.sock.onopen = this.onOpen;\n      this.sock.onmessage = this.onMessage;\n      this.sock.onclose = this.onClose;\n      this.sock.onerror = this.onError;\n    } else {\n      this.setConnectionState(ConnectionState.ERROR);\n      // The browser doesn't support WebSocket\n      alert(\"WebSocket NOT supported by your Browser!\");\n    }\n  }\n\n  formatSubscribedFlights = () => {\n    const formattedFlights = this.subscribedFlights.map(\n      ([flightId, startTimestamp]) => {\n        const startIsoTime =\n          startTimestamp === null\n            ? null\n            : new Date(1000 * startTimestamp).toISOString();\n        return { flightUuid: flightId, start: startIsoTime };\n      }\n    );\n\n    return formattedFlights;\n  };\n\n  refreshSubscribedFlights = () => {\n    if (this.sock.readyState === WebSocket.OPEN && this.connected) {\n      const formattedSubscribedFlights = this.formatSubscribedFlights();\n\n      this.sock.send(\n        JSON.stringify({\n          tag: \"WebFollow\",\n          contents: formattedSubscribedFlights\n        })\n      );\n    }\n  };\n\n  setSubscribedFlights = flights => {\n    this.subscribedFlights = flights;\n    this.refreshSubscribedFlights();\n  };\n\n  onOpen = () => {\n    this.handleReset();\n    console.debug(\"WebSocket: Open!\");\n    this.setConnectionState(ConnectionState.ESTABLISHED);\n    this.connected = true;\n\n    // Set area filter to the entire world\n    this.sock.send(\n      JSON.stringify({\n        tag: \"WebFilterArea\",\n        area: [{ lat: -90, lon: -180 }, { lat: 90, lon: 180 }]\n      })\n    );\n\n    // Use current 'fake' contest that is valid for the current alpha phase.\n    // Primarily sent to match the messages from their reverse engineered websocket\n    this.sock.send(\n      JSON.stringify({ tag: \"WebFilterContest\", contents: \"alpha9999\" })\n    );\n\n    // Tell the webserver which flights we want in more detail. TODO.\n    const formattedSubscribedFlights = this.formatSubscribedFlights();\n    this.sock.send(\n      JSON.stringify({\n        tag: \"WebFollow\",\n        contents: formattedSubscribedFlights\n      })\n    );\n  };\n\n  onMessage = evt => {\n    console.debug(\"WebSocket: Message!\");\n    this.setConnectionState(ConnectionState.ACTIVE);\n\n    let msg = JSON.parse(evt.data);\n\n    // Expect the next message in 60 seconds. If not, change the status message.\n    clearTimeout(this.watchdog);\n    this.watchdog = setTimeout(() => {\n      this.setConnectionState(ConnectionState.INACTIVE);\n    }, 70000);\n\n    // Process the message\n    this.processMessage(msg);\n  };\n\n  onClose = evt => {\n    this.connected = false;\n    console.debug(\"WebSocket: Close!\");\n    this.setConnectionState(ConnectionState.NO_CONNECTION);\n    // websocket is closed.\n    setTimeout(this.connect.bind(this), 1000);\n  };\n\n  onError = evt => {\n    this.connected = false;\n    console.debug(\"WebSocket: Error!\");\n  };\n\n  // Message Processing\n  handleReset = () => {\n    console.log(\"TODO: handle reset!\");\n  };\n  processMessage = msg => {\n    if (!(\"tag\" in msg)) {\n      console.warn(\"Warning: Invalid message format!\", msg);\n      return;\n    }\n    switch (msg.tag) {\n      case \"LiveFlightInfos\":\n        this.dispatchInfoMessage(msg.contents);\n        break;\n      case \"LiveFlightChunk\":\n        this.dispatchTracklogMessage(msg);\n        break;\n      case \"LiveFlightLanded\":\n        this.dispatchFlightLandedMessage(msg.flightUuid);\n        break;\n      default:\n        console.warn(`Warning: Unknown message tag '${msg.tag}'!`, msg);\n    }\n  };\n}\n","import { registerPersistentState } from \"./PersistentState\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\n\nconst persistentChosenPilots = registerPersistentState(\"chosen-pilots\", {});\n\nexport const getChosenPilotsObject = () => persistentChosenPilots;\n\nexport function getChosenPilots() {\n  return persistentChosenPilots.getValue();\n}\n\nexport function setChosenPilots(newValue) {\n  console.log(\"Selected pilots updated: \", newValue);\n  persistentChosenPilots.setValue(newValue);\n}\n\n// Sets new chosen pilots and also looks up their names.\n// When used without argument, just updates the names of the existing pilots.\nexport function setChosenPilotsAndUpdateNames(chosenPilots = null) {\n  let chosenPilotsUpdated = true;\n\n  // if no new chosenPilots list was defined, take over previous one and disable updating unless a name changed\n  if (chosenPilots === null) {\n    chosenPilots = { ...getChosenPilots() };\n    chosenPilotsUpdated = false;\n  }\n\n  const pilotList = getXContestInterface().getPilotInfos();\n\n  for (const pilotId in chosenPilots) {\n    if (pilotId in pilotList) {\n      // Get new name\n      const currentName = pilotList[pilotId].info.user.fullname;\n      // Get stored name\n      const previousName = chosenPilots[pilotId];\n\n      // If new name is different, update\n      if (currentName !== previousName) {\n        chosenPilots[pilotId] = currentName;\n        chosenPilotsUpdated = true;\n      }\n    }\n  }\n\n  // If anything updated, set new list. This will trigger events.\n  if (chosenPilotsUpdated) {\n    setChosenPilots(chosenPilots);\n  }\n}\n\n// Add new pilots\nexport const addPilots = pilotIds => {\n  const newPilotState = { ...getChosenPilots() };\n  let changed = false;\n  for (const pilotId of pilotIds) {\n    if (!(pilotId in newPilotState)) {\n      newPilotState[pilotId] = pilotId;\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    setChosenPilotsAndUpdateNames(newPilotState);\n  }\n};\n\n// Remove pilots\nexport const removePilots = pilotIds => {\n  const newPilotState = { ...getChosenPilots() };\n\n  let changed = false;\n  for (const pilotId of pilotIds) {\n    if (pilotId in newPilotState) {\n      delete newPilotState[pilotId];\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    setChosenPilots(newPilotState);\n  }\n};\n\nexport function useChosenPilots() {\n  const [chosenPilots] = persistentChosenPilots.use();\n\n  return [chosenPilots, addPilots, removePilots];\n}\n","export const lerp = (val1, val2, pct) => {\n  if (val2 === null) {\n    return val1;\n  }\n  if (val1 === null) {\n    return val2;\n  }\n  return (1.0 - pct) * val1 + pct * val2;\n};\n\n// Important:\n// t0<t1<t2<t3 and t1<=t<=t2\nexport const spline = (p0, t0, p1, t1, p2, t2, p3, t3, t) => {\n  // Make timestamps relative.\n  // This enables us to handle unix timestamps (large numbers)\n  t1 -= t0;\n  t2 -= t0;\n  t3 -= t0;\n  t -= t0;\n  t0 = 0;\n\n  const A1 = ((p1 - p0) * t + p0 * t1 - p1 * t0) / (t1 - t0);\n  const A2 = ((p2 - p1) * t + p1 * t2 - p2 * t1) / (t2 - t1);\n  const A3 = ((p3 - p2) * t + p2 * t3 - p3 * t2) / (t3 - t2);\n\n  const B1 = ((A2 - A1) * t + A1 * t2 - A2 * t0) / (t2 - t0);\n  const B2 = ((A3 - A2) * t + A2 * t3 - A3 * t1) / (t3 - t1);\n\n  const C = ((B2 - B1) * t + B1 * t2 - B2 * t1) / (t2 - t1);\n\n  return C;\n};\n\nexport const splineDerivative = (p0, t0, p1, t1, p2, t2, p3, t3, t) => {\n  // Make timestamps relative.\n  // This enables us to handle unix timestamps (large numbers)\n  t1 -= t0;\n  t2 -= t0;\n  t3 -= t0;\n  t -= t0;\n  t0 = 0;\n\n  const A1 = ((p1 - p0) * t + p0 * t1 - p1 * t0) / (t1 - t0);\n  const A2 = ((p2 - p1) * t + p1 * t2 - p2 * t1) / (t2 - t1);\n  const A3 = ((p3 - p2) * t + p2 * t3 - p3 * t2) / (t3 - t2);\n\n  const A1d = (p1 - p0) / (t1 - t0);\n  const A2d = (p2 - p1) / (t2 - t1);\n  const A3d = (p3 - p2) / (t3 - t2);\n\n  const B1 = ((A2 - A1) * t + A1 * t2 - A2 * t0) / (t2 - t0);\n  const B2 = ((A3 - A2) * t + A2 * t3 - A3 * t1) / (t3 - t1);\n\n  const B1d = (A2d * t + A2 - A1d * t - A1 + A1d * t2 - A2d * t0) / (t2 - t0);\n  const B2d = (A3d * t + A3 - A2d * t - A2 + A2d * t3 - A3d * t1) / (t3 - t1);\n\n  const Cd = (B2d * t + B2 - B1d * t - B1 + B1d * t2 - B2d * t1) / (t2 - t1);\n\n  return Cd;\n};\n\n// Interpolates between points p1 and p2\nexport const uniformspline = (p0, p1, p2, p3, pct) => {\n  //return 0.5*pct*pct*pct*(p3-3*p2+3*p1-p0) + 0.5*pct*pct*(2*p0-5*p1+4*p2-p3) + 0.5*pct*(p2-p0) + p1;\n  return (\n    pct *\n      (pct *\n        (pct * (p3 - 3 * p2 + 3 * p1 - p0) + 2 * p0 - 5 * p1 + 4 * p2 - p3) +\n        p2 -\n        p0) *\n      0.5 +\n    p1\n  );\n};\n\nexport const uniformsplineDerivative = (p0, p1, p2, p3, pct) => {\n  //return 1.5*pct*pct*(p3-3*p2+3*p1-p0) + pct*(2*p0-5*p1+4*p2-p3) + 0.5*(p2-p0);\n  return (\n    0.5 *\n    (pct *\n      (3 * pct * (p3 - 3 * p2 + 3 * p1 - p0) +\n        4 * p0 -\n        10 * p1 +\n        8 * p2 -\n        2 * p3) +\n      p2 -\n      p0)\n  );\n};\n","export default class RunningDerivation {\n  constructor(\n    smoothingFactor,\n    derivation_func = (a, b) => b - a,\n    invalid_func = a => a === null\n  ) {\n    this.computeDiff = derivation_func;\n    this.isInvalid = invalid_func;\n    this.old_val = null;\n    this.old_t = null;\n    this.running_avg = null;\n    this.smoothingFactor = smoothingFactor;\n  }\n\n  update(new_val, new_t) {\n    if (\n      this.old_val === null ||\n      new_val === null ||\n      this.old_t === null ||\n      new_t === null ||\n      this.isInvalid(this.old_val) ||\n      this.isInvalid(new_val) ||\n      this.old_t === this.new_t\n    ) {\n      this.old_val = new_val;\n      this.old_t = new_t;\n      return null;\n    }\n\n    let dt = new_t - this.old_t;\n    let diff = this.computeDiff(this.old_val, new_val);\n    let deriv = diff / dt;\n\n    let weight = Math.pow(this.smoothingFactor, dt);\n    if (this.running_avg === null) {\n      this.running_avg = deriv;\n    } else {\n      this.running_avg = weight * this.running_avg + (1.0 - weight) * deriv;\n    }\n\n    this.old_val = new_val;\n    this.old_t = new_t;\n    return this.running_avg;\n  }\n\n  reset() {\n    this.old_val = null;\n    this.old_t = null;\n    this.running_avg = null;\n  }\n}\n","const findBisect = (targetValue, length, dataFn) => {\n  if (length < 1) return 0;\n\n  let minIndex = -1;\n  let maxIndex = length;\n  let currentIndex = 0;\n  let currentValue = null;\n\n  while (minIndex < maxIndex - 1) {\n    currentIndex = ((minIndex + maxIndex) / 2) | 0;\n    currentValue = dataFn(currentIndex);\n\n    if (currentValue < targetValue) {\n      minIndex = currentIndex;\n    } else {\n      maxIndex = currentIndex;\n    }\n  }\n\n  return maxIndex;\n};\n\nexport default findBisect;\n","import RunningDerivation from \"../../util/RunningDerivation\";\nimport { getDistance } from \"geolib\";\nimport findBisect from \"../../util/FindBisect\";\n\nexport const parseTime = isoStr => {\n  return Math.round(Date.parse(isoStr) / 1000);\n};\n\nexport default class FlightAnimationData {\n  constructor() {\n    this.data = [];\n    this.counter_gpsVario = new RunningDerivation(0.7);\n    this.counter_baroVarion = new RunningDerivation(0.7);\n    this.counter_velocity = new RunningDerivation(\n      0.7,\n      (start, end) => getDistance(start, end, 0.01),\n      () => false\n    );\n  }\n\n  at = index => this.data[index];\n\n  clear() {\n    // reset everything\n    this.data = [];\n    this.counter_gpsVario = new RunningDerivation(0.7);\n    this.counter_baroVarion = new RunningDerivation(0.7);\n    this.counter_velocity = new RunningDerivation(\n      0.7,\n      (start, end) => getDistance(start, end, 0.01),\n      () => false\n    );\n  }\n\n  get length() {\n    return this.data.length;\n  }\n\n  isAfterLastElement(timestamp) {\n    if (this.data.length <= 0) return true;\n    return this.data[this.data.length - 1].t < timestamp;\n  }\n\n  append(data) {\n    for (const elem of data) {\n      const timestamp = parseTime(elem.timestamp);\n      const pos = { lat: elem.lat, lng: elem.lon };\n\n      const baroAlt = elem.baroAlt === 0 ? null : elem.baroAlt;\n      const gpsAlt = elem.gpsAlt === 0 ? null : elem.gpsAlt;\n\n      // Compute new running average values\n      const gpsVario = this.counter_gpsVario.update(gpsAlt, timestamp);\n      const baroVario = this.counter_baroVarion.update(baroAlt, timestamp);\n      const velocity = this.counter_velocity.update(pos, timestamp);\n\n      const newElem = {\n        baroAlt: baroAlt,\n        gpsAlt: gpsAlt,\n        elevation: elem.elevation,\n        pos: pos,\n        gpsVario: gpsVario,\n        baroVario: baroVario,\n        velocity: velocity,\n        t: timestamp\n      };\n      this.data.push(newElem);\n    }\n  }\n\n  replace(data) {\n    this.clear();\n    this.append(data);\n  }\n\n  insert(data) {\n    const newElements = [];\n    for (const elem of data) {\n      const timestamp = parseTime(elem.timestamp);\n      const pos = { lat: elem.lat, lng: elem.lon };\n      const baroAlt = elem.baroAlt === 0 ? null : elem.baroAlt;\n      const gpsAlt = elem.gpsAlt === 0 ? null : elem.gpsAlt;\n\n      const newElem = {\n        baroAlt: baroAlt,\n        gpsAlt: gpsAlt,\n        elevation: elem.elevation,\n        pos: pos,\n        gpsVario: null,\n        baroVario: null,\n        velocity: null,\n        t: timestamp\n      };\n      newElements.push(newElem);\n    }\n\n    // Merge\n    const oldElements = this.data;\n    this.data = [];\n\n    let oldPos = 0;\n    let newPos = 0;\n\n    while (true) {\n      if (oldPos >= oldElements.length && newPos >= newElements.length) break;\n      else if (oldPos >= oldElements.length) {\n        this.data.push(newElements[newPos]);\n        newPos += 1;\n      } else if (newPos >= newElements.length) {\n        this.data.push(oldElements[oldPos]);\n        oldPos += 1;\n      } else {\n        const oldEl = oldElements[oldPos];\n        const newEl = newElements[newPos];\n\n        if (newEl.t < oldEl.t) {\n          this.data.push(newEl);\n          newPos += 1;\n        } else if (oldEl.t < newEl.t) {\n          this.data.push(oldEl);\n          oldPos += 1;\n        } else {\n          this.data.push(newEl);\n          oldPos += 1;\n          newPos += 1;\n        }\n      }\n    }\n\n    // Re-compute derivatives\n    this.counter_gpsVario.reset();\n    this.counter_baroVarion.reset();\n    this.counter_velocity.reset();\n    for (let elem of this.data) {\n      const gpsVario = this.counter_gpsVario.update(elem.gpsAlt, elem.t);\n      const baroVario = this.counter_baroVarion.update(elem.baroAlt, elem.t);\n      const velocity = this.counter_velocity.update(elem.pos, elem.t);\n\n      elem.gpsVario = gpsVario;\n      elem.baroVario = baroVario;\n      elem.velocity = velocity;\n    }\n  }\n\n  findBisect = timestamp => {\n    return findBisect(timestamp, this.data.length, pos => this.data[pos].t);\n  };\n\n  findForwardSwipe = (timestamp, startPos) => {\n    let pos = startPos;\n    while (pos < this.data.length && this.data[pos].t < timestamp) {\n      pos += 1;\n    }\n    return pos;\n  };\n\n  getNewestTimestamp = () => {\n    if (this.data.length < 1) return null;\n    return this.data[this.data.length - 1].t;\n  };\n}\n","import { lerp, splineDerivative, spline } from \"../../util/Interpolation\";\nimport FlightAnimationData, { parseTime } from \"./FlightAnimationData\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\n\nclass FlightAnimationDataCache {\n  // IMPORTANT ASSUMPTION IN THIS ENTIRE FILE:\n  // While the cache exists, new data gets only appended. Whenever existing data changes, the cache\n  // will be invalidated.\n  // I.E., chache invariants:\n  //    - existing data entries don't change, indices always point to the same data\n  //    - data timestamps are monotonic rising, meaning, to get newer data the data array only\n  //      needs to be traversed in forward direction, never backwards.\n  // This enables efficient caching and O(1) lookup times.\n  constructor() {\n    this.currentArrayPos = null;\n    this.mapsPath = [];\n    this.mapsPathNewestPos = 0;\n  }\n\n  reset = () => {\n    this.currentArrayPos = null;\n    this.mapsPath = [];\n    this.mapsPathNewestPos = 0;\n  };\n}\n\nclass DataGens {\n  static fallbackData = flightInfos => {\n    return {\n      baroAlt: flightInfos.lastFix.baroAlt,\n      gpsAlt: flightInfos.lastFix.gpsAlt,\n      elevation: flightInfos.lastFix.elevation,\n      pos: {\n        lat: flightInfos.lastFix.lat,\n        lng: flightInfos.lastFix.lon\n      },\n      gpsVario: null,\n      baroVario: null,\n      velocity: null\n    };\n  };\n\n  static takeData(data) {\n    return {\n      baroAlt: data.baroAlt,\n      gpsAlt: data.gpsAlt,\n      elevation: data.elevation,\n      pos: {\n        lat: data.pos.lat,\n        lng: data.pos.lng\n      },\n      gpsVario: data.gpsVario,\n      baroVario: data.baroVario,\n      velocity: data.velocity\n    };\n  }\n\n  static blendData(data1, data2, timeStamp) {\n    const pct = (timeStamp - data1.t) / (data2.t - data1.t);\n    return {\n      baroAlt: lerp(data1.baroAlt, data2.baroAlt, pct),\n      gpsAlt: lerp(data1.gpsAlt, data2.gpsAlt, pct),\n      elevation: lerp(data1.elevation, data2.elevation, pct),\n      pos: {\n        lat: lerp(data1.pos.lat, data2.pos.lat, pct),\n        lng: lerp(data1.pos.lng, data2.pos.lng, pct)\n      },\n      gpsVario: lerp(data1.gpsVario, data2.gpsVario, pct),\n      baroVario: lerp(data1.baroVario, data2.baroVario, pct),\n      velocity: lerp(data1.velocity, data2.velocity, pct)\n    };\n  }\n\n  static blendDataSpline(data0, data1, data2, data3, timeStamp) {\n    const pct = (timeStamp - data1.t) / (data2.t - data1.t);\n    return {\n      baroAlt: lerp(data1.baroAlt, data2.baroAlt, pct),\n      gpsAlt: lerp(data1.gpsAlt, data2.gpsAlt, pct),\n      elevation: lerp(data1.elevation, data2.elevation, pct),\n      pos: {\n        lat: spline(\n          data0.pos.lat,\n          data0.t,\n          data1.pos.lat,\n          data1.t,\n          data2.pos.lat,\n          data2.t,\n          data3.pos.lat,\n          data3.t,\n          timeStamp\n        ),\n        lng: spline(\n          data0.pos.lng,\n          data0.t,\n          data1.pos.lng,\n          data1.t,\n          data2.pos.lng,\n          data2.t,\n          data3.pos.lng,\n          data3.t,\n          timeStamp\n        )\n      },\n      gpsVario: lerp(data1.gpsVario, data2.gpsVario, pct),\n      baroVario: lerp(data1.baroVario, data2.baroVario, pct),\n      velocity: lerp(data1.velocity, data2.velocity, pct)\n    };\n  }\n\n  static computeLinearVelocity(data1, data2) {\n    const t1 = data1.t;\n    const t2 = data2.t;\n    if (t1 === t2) return null;\n\n    const dT = t2 - t1;\n\n    const p1 = data1.pos;\n    const p2 = data2.pos;\n\n    const vLat = (p2.lat - p1.lat) / dT;\n    const vLng = (p2.lng - p1.lng) / dT;\n    return { lat: vLat, lng: vLng };\n  }\n\n  static computeSplineVelocity(d0, d1, d2, d3, t) {\n    const t0 = d0.t;\n    const t1 = d1.t;\n    const t2 = d2.t;\n    const t3 = d3.t;\n\n    const p0 = d0.pos;\n    const p1 = d1.pos;\n    const p2 = d2.pos;\n    const p3 = d3.pos;\n\n    const vLat = splineDerivative(\n      p0.lat,\n      t0,\n      p1.lat,\n      t1,\n      p2.lat,\n      t2,\n      p3.lat,\n      t3,\n      t\n    );\n\n    const vLng = splineDerivative(\n      p0.lng,\n      t0,\n      p1.lng,\n      t1,\n      p2.lng,\n      t2,\n      p3.lng,\n      t3,\n      t\n    );\n\n    return { lat: vLat, lng: vLng };\n  }\n}\n\nclass FlightAnimation {\n  constructor(flightInfos) {\n    // Live data\n    this.liveData = new FlightAnimationData();\n    this.liveDataCache = new FlightAnimationDataCache();\n\n    // Data from flight infos, used as fallback\n    this.flightInfos = null;\n    this.flightInfoData = new FlightAnimationData();\n    this.flightInfoDataCache = new FlightAnimationDataCache();\n\n    // 'landed' state\n    this.landed = flightInfos.landed;\n\n    // Set flight infos\n    this.updateInfos(flightInfos);\n\n    this.settings = {};\n    this.updateSettings();\n\n    // register settings hooks\n    getSetting(Settings.ANIMATION_DELAY).registerCallback(this.updateSettings);\n    getSetting(Settings.LOW_LATENCY).registerCallback(this.updateSettings);\n    getSetting(Settings.PATH_LENGTH).registerCallback(this.updateSettings);\n    getSetting(Settings.LIMIT_PATHS).registerCallback(this.updateSettings);\n  }\n\n  destroy = () => {\n    getSetting(Settings.ANIMATION_DELAY).unregisterCallback(\n      this.updateSettings\n    );\n    getSetting(Settings.LOW_LATENCY).unregisterCallback(this.updateSettings);\n    getSetting(Settings.PATH_LENGTH).unregisterCallback(this.updateSettings);\n    getSetting(Settings.LIMIT_PATHS).unregisterCallback(this.updateSettings);\n  };\n\n  updateSettings = () => {\n    this.settings = {\n      timeOffsetSeconds: getSetting(Settings.ANIMATION_DELAY).getValue(),\n      lowLatencyMode: getSetting(Settings.LOW_LATENCY).getValue(),\n      trackLengthMinutes: getSetting(Settings.PATH_LENGTH).getValue(),\n      limitTracks: getSetting(Settings.LIMIT_PATHS).getValue()\n    };\n    this.liveDataCache.reset();\n    this.flightInfoDataCache.reset();\n  };\n\n  updateInfos = infos => {\n    this.landed |= infos.landed;\n    this.flightInfos = infos;\n    this.flightInfoData.replace(infos.track);\n    this.flightInfoDataCache.reset();\n  };\n\n  updateData = data => {\n    if (data.length < 1) return;\n\n    // Compute start time\n    const data_start_time = parseTime(data[0].timestamp);\n    if (this.liveData.isAfterLastElement(data_start_time)) {\n      // If the new data is newer than everything in the existing data, append\n      this.liveData.append(data);\n    } else {\n      // Otherwise, merge\n      this.liveData.insert(data);\n\n      // Reset animation\n      this.liveDataCache.reset();\n    }\n  };\n\n  updateLanded = () => {\n    console.log(\"Received flight landed message!\");\n    this.landed = true;\n  };\n\n  getInterpolatedData = (data, cache, timeStamp) => {\n    if (data.length < 1) return null;\n\n    if (cache.currentArrayPos === null) {\n      cache.currentArrayPos = data.findBisect(timeStamp);\n    } else {\n      // Optimization because we assume that time runs forward and the next value is after the current value\n      cache.currentArrayPos = data.findForwardSwipe(\n        timeStamp,\n        cache.currentArrayPos\n      );\n    }\n\n    // Compute\n    let blendedData = null;\n    let endOfTrack = false;\n    let startOfTrack = false;\n    let velocityVec = null;\n    if (cache.currentArrayPos <= 0) {\n      // If the timestamp is before our track, return first element\n      blendedData = DataGens.takeData(data.at(0));\n      if (data.length >= 2) {\n        velocityVec = DataGens.computeLinearVelocity(data.at(0), data.at(1));\n      }\n      startOfTrack = true;\n    } else if (cache.currentArrayPos >= data.length) {\n      // If the timestamp is after our track, return last element\n      blendedData = DataGens.takeData(data.at(data.length - 1));\n      if (data.length >= 2) {\n        velocityVec = DataGens.computeLinearVelocity(\n          data.at(data.length - 2),\n          data.at(data.length - 1)\n        );\n      }\n      endOfTrack = true;\n    } else {\n      const data1 = data.at(cache.currentArrayPos - 1);\n      const data2 = data.at(cache.currentArrayPos);\n\n      const data0 =\n        cache.currentArrayPos - 2 >= 0\n          ? data.at(cache.currentArrayPos - 2)\n          : {\n              ...data1,\n              t: data1.t - 1\n            };\n\n      const data3 =\n        cache.currentArrayPos + 1 < data.length\n          ? data.at(cache.currentArrayPos + 1)\n          : {\n              ...data2,\n              t: data2.t + 1\n            };\n\n      // Blend via spline\n      blendedData = DataGens.blendDataSpline(\n        data0,\n        data1,\n        data2,\n        data3,\n        timeStamp\n      );\n      velocityVec = DataGens.computeSplineVelocity(\n        data0,\n        data1,\n        data2,\n        data3,\n        timeStamp\n      );\n    }\n\n    const newestDataTimestamp = data.at(data.length - 1).t;\n\n    return [\n      blendedData,\n      startOfTrack,\n      endOfTrack,\n      newestDataTimestamp,\n      velocityVec\n    ];\n  };\n\n  getFallbackData = () => {\n    return [\n      DataGens.fallbackData(this.flightInfos),\n      false,\n      true,\n      parseTime(this.flightInfos.lastFix.timestamp),\n      null\n    ];\n  };\n\n  computeTrack = (data, cache, timestamp) => {\n    if (data.length < 1) return null;\n\n    const oldestTimestamp = timestamp - this.settings.trackLengthMinutes * 60;\n\n    let track = cache.mapsPath;\n\n    // Append new data\n    while (\n      cache.mapsPathNewestPos < data.length &&\n      data.at(cache.mapsPathNewestPos).t < timestamp\n    ) {\n      const elem = data.at(cache.mapsPathNewestPos);\n      track.push({\n        lat: elem.pos.lat,\n        lng: elem.pos.lng,\n        timestamp: elem.t,\n        elevation: elem.gpsAlt\n      });\n      cache.mapsPathNewestPos += 1;\n    }\n\n    // Delete old data\n    if (this.settings.limitTracks) {\n      const removeChunkSize = 32;\n      let numRemove = 0;\n      while (\n        numRemove + removeChunkSize - 1 < track.length &&\n        track[numRemove + removeChunkSize - 1].timestamp < oldestTimestamp\n      ) {\n        numRemove += removeChunkSize;\n      }\n      if (numRemove > 0) {\n        track = track.slice(numRemove);\n        cache.mapsPath = track;\n      }\n    }\n\n    return track;\n  };\n\n  updateAnimation = animationTimeMillis => {\n    const animationTimeSeconds = this.settings.lowLatencyMode\n      ? animationTimeMillis / 1000\n      : animationTimeMillis / 1000 - this.settings.timeOffsetSeconds;\n\n    let animationResult = this.getInterpolatedData(\n      this.liveData,\n      this.liveDataCache,\n      animationTimeSeconds\n    );\n    if (!animationResult) {\n      animationResult = this.getInterpolatedData(\n        this.flightInfoData,\n        this.flightInfoDataCache,\n        animationTimeSeconds\n      );\n    }\n    if (!animationResult) {\n      animationResult = this.getFallbackData();\n    }\n\n    let track = this.computeTrack(\n      this.liveData,\n      this.liveDataCache,\n      animationTimeSeconds\n    );\n    if (!track) {\n      track = this.computeTrack(\n        this.flightInfoData,\n        this.flightInfoDataCache,\n        animationTimeSeconds\n      );\n    }\n    if (!track) {\n      track = [];\n    }\n\n    let [\n      blendedData,\n      startOfTrack,\n      endOfTrack,\n      newestDataTimestamp,\n      velocityVec\n    ] = animationResult;\n\n    // Special case for endOfTrack for lowLatencyMode\n    if (this.settings.lowLatencyMode) {\n      if (this.landed) {\n        // If 'landed' got signalled, immediately also end the track,\n        // as the 'landed' signal comes simultaneously to the last track message\n        endOfTrack = true;\n      } else {\n        // Otherwise, determine by how long ago we last heard from the pilot whether\n        // the track is broken or not.\n        // Has to be treated different than the default case, because in lowLatencyMode we\n        // are always at the end of the track.\n        endOfTrack = newestDataTimestamp < animationTimeSeconds - 80;\n      }\n    }\n\n    const result = {\n      ...blendedData,\n      startOfTrack: startOfTrack,\n      endOfTrack: endOfTrack,\n      landed: this.landed,\n      name: this.flightInfos.info.user.fullname,\n      newestDataTimestamp: newestDataTimestamp,\n      track: track,\n      velocityVec: velocityVec\n    };\n\n    return result;\n  };\n\n  getNewestTimestamp = () => this.liveData.getNewestTimestamp();\n}\n\nexport default FlightAnimation;\n","class HighPrecisionTimeSync {\n  // Tolerance should be larger than the duration of one animation frame.\n  // Most animations are 60Hz, meaning 16ms, so 20ms is fine.\n  constructor(tolerance = 20) {\n    this.offset = 0.0;\n    this.tolerance = tolerance;\n  }\n\n  get = (currentHighPrecisionTime, currentTime) => {\n    let estimatedTime = currentHighPrecisionTime + this.offset;\n    const offBy = estimatedTime - currentTime;\n\n    if (offBy > this.tolerance || offBy < -this.tolerance) {\n      this.offset -= offBy;\n      estimatedTime = currentHighPrecisionTime + this.offset;\n    }\n\n    return estimatedTime;\n  };\n}\n\nexport default HighPrecisionTimeSync;\n","import {\n  getChosenPilots,\n  getChosenPilotsObject\n} from \"../../common/PersistentState/ChosenPilots\";\nimport FlightAnimation from \"./FlightAnimation\";\nimport HighPrecisionTimeSync from \"../../util/HighPrecisionTimeSync\";\nimport { Settings, getSetting } from \"../../common/PersistentState/Settings\";\n\nfunction eqSet(as, bs) {\n  if (as.size !== bs.size) return false;\n  for (const a of as) if (!bs.has(a)) return false;\n  return true;\n}\n\nexport default class XContestAnimation {\n  constructor(setSubscribedFlights) {\n    this._currentAnimationData = {};\n    this._callbacks = [];\n    this._subscribedPilots = getChosenPilots();\n    this._subscribedFlights = new Set();\n    this._pilotInfos = {};\n    this._flightAnimations = {};\n    this._highPrecisionTimeSync = new HighPrecisionTimeSync();\n    const settings_limitFps = getSetting(Settings.FPS_LIMIT);\n    const settings_fps = getSetting(Settings.FPS_RATE);\n\n    // Cached settings values for performance improvements. Not sure if actually worth\n    this._setting_limitFps = settings_limitFps.getValue();\n    this._setting_fps = settings_fps.getValue();\n    settings_limitFps.registerCallback(value => {\n      this._setting_limitFps = value;\n    });\n    settings_fps.registerCallback(value => {\n      this._setting_fps = value;\n    });\n\n    this._setSubscribedFlightsCallback = flights => {\n      setSubscribedFlights(Array.from(flights));\n    };\n    getChosenPilotsObject().registerCallback(this.setSubscribedPilots);\n    requestAnimationFrame(this.animationLoop);\n  }\n\n  // Animation loop\n  _nextUpdate = Date.now();\n  animationLoop = () => {\n    // Can't use time of function parameter, because we need absolute time\n    const absTime = Date.now();\n\n    const frameTimeDelta = 1000.0 / this._setting_fps;\n\n    if (!this._setting_limitFps || absTime >= this._nextUpdate) {\n      if (this._setting_limitFps) {\n        this._nextUpdate += frameTimeDelta;\n        if (absTime > this._nextUpdate) {\n          this._nextUpdate = absTime;\n        }\n      }\n\n      const newAnimationData = {};\n      Object.keys(this._subscribedPilots).forEach(pilot => {\n        if (pilot in this._pilotInfos) {\n          const flightId = this._pilotInfos[pilot].flightId;\n          if (flightId in this._flightAnimations) {\n            const flightAnim = this._flightAnimations[flightId];\n            newAnimationData[pilot] = flightAnim.updateAnimation(absTime);\n          }\n        }\n      });\n      this._submitAnimationFrame(newAnimationData);\n    }\n    requestAnimationFrame(this.animationLoop);\n  };\n\n  _submitAnimationFrame = data => {\n    this._currentAnimationData = data;\n    for (const cb of this._callbacks) {\n      cb(data);\n    }\n  };\n\n  // External\n  setSubscribedPilots = subscribedPilots => {\n    this._subscribedPilots = subscribedPilots;\n    this._updateImportantFlights();\n  };\n\n  pushNewInfo = pilotInfo => {\n    console.log(\"newInfo: \", pilotInfo);\n    this._pilotInfos = pilotInfo;\n    this._updateImportantFlights();\n\n    // Update flight info in flightAnimations\n    Object.values(pilotInfo).forEach(flightInfo => {\n      const flightId = flightInfo.flightId;\n      if (flightId in this._flightAnimations) {\n        this._flightAnimations[flightId].updateInfos(flightInfo);\n      }\n    });\n  };\n\n  pushNewData = (trackId, trackData) => {\n    console.log(\"newTrackdata: \", trackId, trackData);\n    if (trackId in this._flightAnimations)\n      this._flightAnimations[trackId].updateData(trackData);\n  };\n\n  pushFlightLanded = flightId => {\n    if (flightId in this._flightAnimations)\n      this._flightAnimations[flightId].updateLanded();\n  };\n\n  // callback gets called every frame with new data\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n    cb(this._currentAnimationData);\n  };\n\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n  };\n\n  getData = () => {\n    return this._currentAnimationData;\n  };\n\n  // Internal\n  _updateImportantFlights = () => {\n    // Filter important flights\n    let importantFlights = {};\n    Object.values(this._pilotInfos)\n      .filter(val => val.info.user.username in this._subscribedPilots)\n      .forEach(val => {\n        importantFlights[val.flightId] = val;\n      });\n\n    let importantFlightSet = new Set(Object.keys(importantFlights));\n\n    // Cleanup old entries of _flightAnimations\n    {\n      const toRemove = [];\n      for (const flightId in this._flightAnimations) {\n        if (!(flightId in importantFlights)) {\n          toRemove.push(flightId);\n        }\n      }\n      for (const flightId of toRemove) {\n        console.log(\"Removing flightAnimation of '\" + flightId + \"' ...\");\n        this._flightAnimations[flightId].destroy();\n        delete this._flightAnimations[flightId];\n      }\n    }\n\n    // Add new flightAnimations\n    Object.entries(importantFlights).forEach(([flightId, flightInfo]) => {\n      if (!(flightId in this._flightAnimations)) {\n        this._flightAnimations[flightId] = new FlightAnimation(flightInfo);\n      }\n    });\n\n    // Send subscription change to socket\n    if (!eqSet(importantFlightSet, this._subscribedFlights)) {\n      this._subscribedFlights = importantFlightSet;\n\n      // Get the timestamp of the newest track element, to prevent loading the same data multiple times\n      let flightsWithTimestamps = [];\n      console.log(this._flightAnimations);\n      importantFlightSet.forEach(flightId => {\n        console.log(flightId, this._flightAnimations[flightId]);\n        flightsWithTimestamps.push([\n          flightId,\n          this._flightAnimations[flightId].getNewestTimestamp()\n        ]);\n      });\n\n      console.log(\n        \"Changing flight subscribtion: \",\n        this._subscribedFlights,\n        importantFlightSet\n      );\n      this._setSubscribedFlightsCallback(flightsWithTimestamps);\n    }\n  };\n}\n","import { useState, useEffect } from \"react\";\n\nclass EventfulState {\n  constructor(initialValue) {\n    this._callbacks = [];\n    this._callbackData = initialValue;\n  }\n\n  set = value => {\n    this._callbackData = value;\n    for (const cb of this._callbacks) {\n      cb(value);\n    }\n  };\n\n  getValue = () => this._callbackData;\n\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n  };\n\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n  };\n\n  use = () => {\n    const [value, setValue] = useState(this._callbackData);\n\n    useEffect(() => {\n      // trigger component update on change\n      this.registerCallback(setValue);\n      return () => this.unregisterCallback(setValue);\n    }, []);\n\n    return value;\n  };\n}\n\nexport default EventfulState;\n","import XContestSocket from \"./XContestSocket\";\nimport XContestAnimation from \"./XContestAnimation\";\nimport EventfulState from \"../../util/EventfulState\";\nimport { setChosenPilotsAndUpdateNames } from \"../../common/PersistentState/ChosenPilots\";\n\nexport const ConnectionState = {\n  CONNECTING: \"connecting\", //orange\n  ERROR: \"error\", //red\n  ESTABLISHED: \"established\", //yellow\n  ACTIVE: \"active\", //green\n  INACTIVE: \"inactive\", //orange\n  NO_CONNECTION: \"no connection\", //red\n  NO_INFORMATION: \"no information\" //gray\n};\n\nclass XContestInterface {\n  constructor() {\n    this.pilots = [];\n    this.connectionState = new EventfulState(ConnectionState.NO_INFORMATION);\n    this.pilotInfos = new EventfulState([]);\n    this.socket = new XContestSocket(\n      this.onConnectionStateChanged,\n      this.onInfoMessageReceived,\n      this.onTracklogMessageReceived,\n      this.onFlightLandedMessageReceived\n    );\n    this.animation = new XContestAnimation(this.setSubscribedFlights);\n  }\n\n  setSubscribedFlights = flights => {\n    this.socket.setSubscribedFlights(flights);\n  };\n\n  getPilotInfos = () => this.pilots;\n\n  onConnectionStateChanged = state => {\n    this.connectionState.set(state);\n  };\n\n  onInfoMessageReceived = msg => {\n    this.pilots = {};\n    for (const [trackId, track] of msg) {\n      // Skip if we have a newer track of the same person\n      if (track.overriden) continue;\n\n      track.flightId = trackId;\n\n      this.pilots[track.info.user.username] = track;\n    }\n    this.animation.pushNewInfo(this.pilots);\n    this.pilotInfos.set(this.pilots);\n\n    // Set pilot names if available\n    setChosenPilotsAndUpdateNames();\n  };\n\n  onTracklogMessageReceived = msg => {\n    this.animation.pushNewData(msg.flightUuid, msg.trackChunk);\n  };\n\n  onFlightLandedMessageReceived = flightId => {\n    this.animation.pushFlightLanded(flightId);\n  };\n}\n\n// Singleton stuff\nlet _instance = null;\nexport const getXContestInterface = () => {\n  if (!_instance) {\n    _instance = new XContestInterface();\n  }\n  return _instance;\n};\n\nexport const useXContestPilots = () => getXContestInterface().pilotInfos.use();\nexport const useXContestConnectionState = () =>\n  getXContestInterface().connectionState.use();\n","// seed\nfunction xmur3(str) {\n  for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++) {\n    h = Math.imul(h ^ str.charCodeAt(i), 3432918353);\n    h = (h << 13) | (h >>> 19);\n  }\n  return function() {\n    h = Math.imul(h ^ (h >>> 16), 2246822507);\n    h = Math.imul(h ^ (h >>> 13), 3266489909);\n    return (h ^= h >>> 16) >>> 0;\n  };\n}\n\n// rng\nfunction sfc32(a, b, c, d) {\n  return function() {\n    a >>>= 0;\n    b >>>= 0;\n    c >>>= 0;\n    d >>>= 0;\n    var t = (a + b) | 0;\n    a = b ^ (b >>> 9);\n    b = (c + (c << 3)) | 0;\n    c = (c << 21) | (c >>> 11);\n    d = (d + 1) | 0;\n    t = (t + d) | 0;\n    c = (c + t) | 0;\n    return (t >>> 0) / 4294967296;\n  };\n}\n\nexport default function createRng(seedString) {\n  // Create xmur3 state:\n  const seed = xmur3(seedString);\n  // Output four 32-bit hashes to provide the seed for sfc32.\n  const rand = sfc32(seed(), seed(), seed(), seed());\n  return rand;\n}\n","import createRng from \"./rng\";\nimport convert from \"color-convert\";\n\nexport default function string2color(str, lightness) {\n  const rand = createRng(str);\n\n  const colorHue = Math.min(Math.max(rand() * 360, 0), 360);\n  const hexColor = \"#\" + convert.hsl.hex(colorHue, 100, lightness);\n  return hexColor;\n}\n","import { getRhumbLineBearing } from \"geolib\";\nimport string2color from \"../util/string2color\";\n\n//const path_questionmark =\n//  \"m 12.747342,2.0001932 c -0.254753,-0.0015 -0.513283,0.0061 -0.773833,0.0228 C 8.104865,2.2564442 6.070752,4.4579604 5.904,8.4266554 h 3.901734 c 0.03335,-1.367366 0.834151,-2.401618 2.234867,-2.56837 1.400716,-0.133402 2.734861,0.200232 3.135066,1.134043 0.433555,1.033862 -0.533606,2.234215 -1.000512,2.734471 -0.86711,0.9338106 -2.267826,1.6342986 -3.001534,2.6348096 -0.700358,1.000512 -0.834151,2.301567 -0.900851,3.902386 h 3.43535 c 0.03335,-1.033862 0.09979,-2.001153 0.566695,-2.63481 0.767059,-1.033862 1.900972,-1.500768 2.834783,-2.334527 0.90046,-0.767059 1.867621,-1.7008696 2.001023,-3.1682856 0.531522,-4.033312 -2.54199,-6.1030962 -6.363279,-6.1261792 z M 12.073821,17.730891 A 2.1677748,2.1344245 0 0 0 9.906046,19.865445 2.1677748,2.1344245 0 0 0 12.073821,22 2.1677748,2.1344245 0 0 0 14.241595,19.865445 2.1677748,2.1344245 0 0 0 12.073821,17.730891 Z\";\nconst path_questionmark_min =\n  \"M 12.747,2 C 12.492,1.998 12.234,2.006 11.973,2.023 8.105,2.256 6.071,4.458 5.904,8.427 H 9.806 C 9.839,7.06 10.64,6.025 12.041,5.859 c 1.401,-0.133 2.735,0.2 3.135,1.134 0.434,1.034 -0.534,2.234 -1.001,2.734 -0.867,0.934 -2.268,1.634 -3.002,2.635 -0.7,1.001 -0.834,2.302 -0.901,3.902 h 3.435 c 0.033,-1.034 0.1,-2.001 0.567,-2.635 0.767,-1.034 1.901,-1.501 2.835,-2.335 0.9,-0.767 1.868,-1.701 2.001,-3.168 C 19.642,4.093 16.568,2.023 12.747,2 Z M 12.074,17.731 A 2.168,2.134 0 0 0 9.906,19.865 2.168,2.134 0 0 0 12.074,22 2.168,2.134 0 0 0 14.242,19.865 2.168,2.134 0 0 0 12.074,17.731 Z\";\nconst path_arrow =\n  \"M12.93 4.26l6.15 14.99c.34.83-.51 1.66-1.33 1.29l-5.34-2.36c-.26-.11-.55-.11-.81 0l-5.34 2.36c-.82.36-1.67-.46-1.33-1.29l6.15-14.99c.33-.83 1.51-.83 1.85 0z\";\nconst path_idle =\n  \"M 12,2 C 8.13,2 5,5.13 5,9 c 0,5.25 7,13 7,13 0,0 7,-7.75 7,-13 0,-3.87 -3.13,-7 -7,-7\";\n//const path_landed =\n//  \"M 12.662857,19.784264 19.12,15.167121 C 19.668572,14.77855 20,14.149978 20,13.475692 20,11.772835 18.08,10.789978 16.697143,11.772835 L 12,15.121407 7.302857,11.772835 C 5.92,10.778549 4,11.772835 4,13.475692 c 0,0.674286 0.331429,1.314286 0.88,1.702858 l 6.457143,4.617142 c 0.4,0.274286 0.925714,0.274286 1.325714,-0.01143 z m 0,-8 L 19.12,7.1785496 C 19.668572,6.7785496 20,6.1499781 20,5.4756924 20,3.7728353 18.08,2.7785495 16.697143,3.7728353 L 12,7.1214067 7.302857,3.7728353 C 5.92,2.7785495 4,3.7728353 4,5.4756924 4,6.1499781 4.331429,6.7899782 4.88,7.1785496 l 6.457143,4.6171424 c 0.4,0.274286 0.925714,0.274286 1.325714,-0.01143 z\";\nconst path_landed_min =\n  \"m 12.66,19.78 6.46,-4.61 C 19.67,14.78 20,14.15 20,13.48 20,11.77 18.08,10.79 16.7,11.77 L 12,15.12 7.3,11.77 c -1.38,-0.99 -3.3,0 -3.3,1.71 0,0.67 0.33,1.31 0.88,1.7 l 6.46,4.62 c 0.4,0.27 0.93,0.27 1.33,-0.01 z m 0,-8 6.46,-4.6 C 19.67,6.78 20,6.15 20,5.48 20,3.77 18.08,2.78 16.7,3.77 L 12,7.12 7.3,3.77 C 5.92,2.78 4,3.77 4,5.48 4,6.15 4.33,6.79 4.88,7.18 l 6.46,4.62 c 0.4,0.27 0.93,0.27 1.33,-0.01 z\";\n\nexport const getPilotIconColor = name => string2color(name, 70);\nexport const getPilotTrackColor = name => string2color(name, 40);\n\nexport const pilotIconChanged = (oldPilotIcon, newPilotIcon) => {\n  for (let p in oldPilotIcon) {\n    if (!(p in newPilotIcon)) return true;\n  }\n  for (let p in newPilotIcon) {\n    if (!(p in oldPilotIcon)) return true;\n    // Special cases\n    if (p === \"anchor\") {\n      if (\n        oldPilotIcon[p].x !== newPilotIcon[p].x ||\n        oldPilotIcon[p].y !== newPilotIcon[p].y\n      )\n        return true;\n    } else if (oldPilotIcon[p] !== newPilotIcon[p]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const getPilotIcon = (\n  waitingForStart,\n  endOfTrack,\n  hasLanded,\n  pos,\n  velocityVec,\n  color\n) => {\n  /*\n    Four different symbols:\n      - Flying\n      - Signal lost\n      - Landed\n      - Not yet started (idle)\n  */\n\n  if (endOfTrack) {\n    if (hasLanded) {\n      // LANDED\n      return {\n        path: path_landed_min,\n        fillColor: color,\n        fillOpacity: 1,\n        anchor: { x: 12, y: 20 },\n        strokeWeight: 1,\n        scale: 1.2\n      };\n    } else {\n      // SIGNAL LOST\n      return {\n        path: path_questionmark_min,\n        fillColor: color,\n        fillOpacity: 1,\n        anchor: { x: 12, y: 12 },\n        strokeWeight: 1,\n        scale: 1.2\n      };\n    }\n  }\n\n  if (waitingForStart) {\n    // NOT YET STARTED\n    return {\n      path: path_idle,\n      fillColor: color,\n      fillOpacity: 1,\n      anchor: { x: 12, y: 22 },\n      strokeWeight: 1,\n      scale: 1.2\n    };\n  }\n\n  // Compute direction\n  const bearing =\n    velocityVec === null\n      ? 0\n      : getRhumbLineBearing(pos, {\n          lat: pos.lat + velocityVec.lat,\n          lng: pos.lng + velocityVec.lng\n        });\n\n  // FLYING\n  return {\n    path: path_arrow,\n    fillColor: color,\n    fillOpacity: 1,\n    anchor: { x: 12, y: 12 },\n    strokeWeight: 1,\n    scale: 1.2,\n    rotation: bearing\n  };\n};\n","import { getXContestInterface } from \"../location_provider/XContest/XContestInterface\";\nimport { registerPersistentState } from \"../common/PersistentState/PersistentState\";\n\nclass MapViewportControllerService {\n  constructor() {\n    this.mapControllers = [];\n\n    // The state of the viewport controller service\n    this.state = registerPersistentState(\"viewport-state\", {\n      includeSelf: true,\n      enabled: true,\n      followSinglePilot: null,\n      pilots: {}\n    });\n\n    // Reset state at every new page load.\n    // If this turns out to be intended behaviour, convert the persistent state to\n    // a local class state.\n    this.state.setValue(null);\n\n    // Register for animation frame updates\n    getXContestInterface().animation.registerCallback(this.onAnimationFrame);\n  }\n\n  // Disables the controllers, enables manual mode\n  setFreeMode = () => {\n    this.state.updateValue(oldValue => ({\n      ...oldValue,\n      enabled: false\n    }));\n  };\n\n  // Follows a single pilot\n  setSinglePilotMode = pilotId => {\n    this.state.updateValue(oldValue => ({\n      ...oldValue,\n      enabled: true,\n      followSinglePilot: pilotId\n    }));\n    this._emitZoomToSinglePilot();\n  };\n\n  // Sends single pilot mode signal to controllers\n  _emitZoomToSinglePilot = () => {\n    for (const mapController of this.mapControllers) {\n      mapController.zoomToSinglePilot();\n    }\n  };\n\n  // Update this and every registered map controller.\n  onAnimationFrame = pilotInfos => {\n    // Add new pilots, remove old pilots\n    this.state.updateValue(oldState => {\n      const newState = { ...oldState };\n      newState.pilots = { ...newState.pilots };\n\n      // Remove old pilots\n      for (const pilotName in oldState.pilots) {\n        if (!(pilotName in pilotInfos)) {\n          delete newState.pilots[pilotName];\n        }\n      }\n\n      // Add new pilots\n      for (const pilotName in pilotInfos) {\n        if (!(pilotName in newState.pilots)) {\n          newState.pilots[pilotName] = true;\n        }\n      }\n\n      return newState;\n    });\n\n    for (const mapController of this.mapControllers) {\n      mapController.onAnimationFrame(pilotInfos, this.state.getValue());\n    }\n  };\n\n  // All other map controllers register here.\n  registerMapController = controller => {\n    if (!this.mapControllers.includes(controller))\n      this.mapControllers.push(controller);\n  };\n\n  // All other map controllers unregister here.\n  unregisterMapController = controller => {\n    const index = this.mapControllers.indexOf(controller);\n    if (index >= 0) {\n      this.mapControllers.splice(index, 1);\n    }\n  };\n}\n\n// Singleton\nlet _instance = null;\nexport const getMapViewportControllerService = () => {\n  if (!_instance) {\n    _instance = new MapViewportControllerService();\n  }\n  return _instance;\n};\n","import {\n  getPilotIcon,\n  getPilotIconColor,\n  getPilotTrackColor,\n  pilotIconChanged\n} from \"../../common/PilotIcon\";\nimport { getMapViewportControllerService } from \"../../services/MapViewportControllerService\";\n\nexport default class GoogleMapsTrack {\n  constructor(google, map, pilotInfo, initialData, pilotInfoWindow) {\n    this.google = google;\n    this.pilotInfoWindow = pilotInfoWindow;\n    this.pilotColor = getPilotIconColor(pilotInfo.info.user.username);\n    this.trackColor = getPilotTrackColor(pilotInfo.info.user.username);\n\n    this.pilotIcon = getPilotIcon(\n      initialData.startOfTrack,\n      initialData.endOfTrack,\n      initialData.landed,\n      initialData.pos,\n      initialData.velocityVec,\n      this.pilotColor\n    );\n\n    this.marker = new this.google.maps.Marker({\n      map: map,\n      position: initialData.pos,\n      title: pilotInfo.info.user.fullname,\n      icon: this.pilotIcon\n    });\n\n    this.marker.addListener(\"click\", () => {\n      this.pilotInfoWindow.open(\n        this.map,\n        this.marker,\n        pilotInfo.info.user.username\n      );\n    });\n\n    this.marker.addListener(\"dblclick\", () => {\n      getMapViewportControllerService().setSinglePilotMode(\n        pilotInfo.info.user.username\n      );\n    });\n\n    this.track = new this.google.maps.Polyline({\n      map: map,\n      path: [],\n      strokeColor: this.trackColor\n    });\n    this.currentTrackVersion = { startTime: null, endTime: null, length: null };\n    this.newestTrackSegment = new this.google.maps.Polyline({\n      map: map,\n      path: [],\n      strokeColor: this.trackColor\n    });\n    this.newestTrackSegmentData = null;\n  }\n\n  setMap = map => {\n    this.marker.setMap(map);\n    this.track.setMap(map);\n    this.newestTrackSegment.setMap(map);\n  };\n\n  _updateTrack = track => {\n    if (!track || track.length < 1) return;\n\n    // Compute identifiers to reduce the amount if maps updates\n    const length = track.length;\n    const startTime = track[0].timestamp;\n    const endTime = track[length - 1].timestamp;\n    if (\n      startTime === this.currentTrackVersion.startTime &&\n      endTime === this.currentTrackVersion.endTime &&\n      length === this.currentTrackVersion.length\n    ) {\n      return;\n    }\n\n    if (\n      startTime === this.currentTrackVersion.startTime &&\n      length > this.currentTrackVersion.length &&\n      endTime > this.currentTrackVersion.endTime\n    ) {\n      let oldTrack = this.track.getPath();\n      let oldLength = oldTrack.getLength();\n      while (oldLength < length) {\n        const newPoint = track[oldLength];\n        oldLength = oldTrack.push(\n          new this.google.maps.LatLng(newPoint.lat, newPoint.lng)\n        );\n      }\n\n      this.currentTrackVersion.endTime = endTime;\n      this.currentTrackVersion.length = length;\n      return;\n    }\n\n    //console.log(\"Full path update!\");\n\n    // If the start/end time or length changed, update track in map\n    this.currentTrackVersion.startTime = startTime;\n    this.currentTrackVersion.endTime = endTime;\n    this.currentTrackVersion.length = length;\n\n    this.track.setPath(track);\n  };\n\n  _updateNewestSegment = (trackEndPos, currentPos) => {\n    // Initialize if unset\n    if (this.newestTrackSegmentData === null) {\n      this.newestTrackSegment.setPath([trackEndPos, currentPos]);\n      this.newestTrackSegmentData = [trackEndPos, currentPos];\n      //console.log(\"Set newest track segment new\");\n    }\n\n    // Query previous and update previous\n    const [previousTrackEndPos, previousPos] = this.newestTrackSegmentData;\n    this.newestTrackSegmentData = [trackEndPos, currentPos];\n\n    // Get maps polyline\n    const path = this.newestTrackSegment.getPath();\n\n    // Update first piont if necessary\n    if (\n      trackEndPos.lat !== previousTrackEndPos.lat ||\n      trackEndPos.lng !== previousTrackEndPos.lng\n    ) {\n      const point = new this.google.maps.LatLng(\n        trackEndPos.lat,\n        trackEndPos.lng\n      );\n      path.setAt(0, point);\n      //console.log(\"Set trackEndPos\");\n    }\n\n    if (\n      previousPos.lat !== currentPos.lat ||\n      previousPos.lng !== currentPos.lng\n    ) {\n      const point = new this.google.maps.LatLng(currentPos.lat, currentPos.lng);\n      path.setAt(1, point);\n      //console.log(\"Set currentPos\");\n    }\n  };\n\n  updateData = data => {\n    this.marker.setPosition(data.pos);\n\n    // Update Pilot Icon if necessary\n    let pilotIcon = this.marker.getIcon();\n    const newPilotIcon = getPilotIcon(\n      data.startOfTrack,\n      data.endOfTrack,\n      data.landed,\n      data.pos,\n      data.velocityVec,\n      this.pilotColor\n    );\n    if (pilotIconChanged(pilotIcon, newPilotIcon))\n      this.marker.setIcon(newPilotIcon);\n\n    if (data.track.length > 0) {\n      const currentPos = data.track[data.track.length - 1];\n      const trackEndPos = data.pos;\n      this._updateNewestSegment(trackEndPos, currentPos);\n    }\n    this._updateTrack(data.track);\n  };\n}\n","export default class MapPilotInfoWindow {\n  constructor(google) {\n    this.google = google;\n    this.infoWindow = new google.maps.InfoWindow({\n      content: \"- ERROR -\",\n      pixelOffset: new google.maps.Size(0, -5),\n      disableAutoPan: true\n    });\n    this.data = {};\n    this.currentPilot = null;\n  }\n\n  open = (map, anchor, pilotId) => {\n    this.currentPilot = pilotId;\n    this.infoWindow.open(map, anchor);\n    this.updateContent();\n  };\n\n  close = () => {\n    this.infoWindow.close();\n    this.currentPilot = null;\n    this.updateContent();\n  };\n\n  update = data => {\n    this.data = data;\n    this.updateContent();\n  };\n\n  updateContent = () => {\n    // Some sanity checks\n    if (this.infoWindow.anchor == null) {\n      this.currentPilot = null;\n      return;\n    }\n\n    if (this.currentPilot === null) return;\n\n    if (!(this.currentPilot in this.data)) {\n      this.currentPilot = null;\n      this.infoWindow.close();\n      return;\n    }\n\n    const pilotInfo = this.data[this.currentPilot];\n\n    const height =\n      pilotInfo.gpsAlt === null ? pilotInfo.baroAlt : pilotInfo.gpsAlt;\n    const heightGnd = Math.max(height - pilotInfo.elevation, 0);\n\n    // Update content\n    let newContent = \"\";\n    newContent += \"<b>\" + pilotInfo.name + \"</b><br>\";\n    newContent += Math.round(height) + \"m (\";\n    newContent += Math.round(heightGnd) + \"m)<br>\";\n\n    if (pilotInfo.baroVario !== null && !pilotInfo.landed) {\n      const vario = Math.round(pilotInfo.baroVario * 10);\n      let varioAbs = Math.abs(vario);\n      if (varioAbs > 99) varioAbs = 99;\n      const varioStr =\n        (vario >= 0 ? \"&plus;\" : \"&minus;\") +\n        Math.floor(varioAbs / 10) +\n        \".\" +\n        (varioAbs % 10) +\n        \"m/s\";\n      newContent += \"<span>\" + varioStr + \"</span>&nbsp;&nbsp;\";\n    }\n\n    if (pilotInfo.velocity !== null && !pilotInfo.landed) {\n      newContent += Math.round(pilotInfo.velocity * 3.6) + \"km/h\";\n    }\n\n    if (this.infoWindow.getContent() !== newContent) {\n      this.infoWindow.setContent(newContent);\n    }\n  };\n}\n","import { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\nimport GoogleMapsTrack from \"./GoogleMapsTrack\";\nimport MapPilotInfoWindow from \"./MapPilotInfoWindow\";\n\nexport default class MapAnimator {\n  constructor(map, google) {\n    this.map = map;\n    this.google = google;\n    this.tracks = {};\n    this.infoWindow = new MapPilotInfoWindow(google);\n  }\n\n  cleanupOldTracks = data => {\n    const toRemove = [];\n    for (const pilot in this.tracks) {\n      if (!(pilot in data)) {\n        toRemove.push(pilot);\n      }\n    }\n    for (const pilot of toRemove) {\n      this.tracks[pilot].setMap(null);\n      delete this.tracks[pilot];\n    }\n  };\n\n  update = data => {\n    const pilotInfos = getXContestInterface().getPilotInfos();\n\n    // Remove tracks that we unsubscribed from\n    this.cleanupOldTracks(data);\n\n    // Update all pilots\n    Object.entries(data).forEach(([pilot, pilotData]) => {\n      if (!(pilot in pilotInfos)) return;\n      const info = pilotInfos[pilot];\n\n      // Add track if it doesn't exist\n      if (!(pilot in this.tracks)) {\n        this.tracks[pilot] = new GoogleMapsTrack(\n          this.google,\n          this.map,\n          info,\n          pilotData,\n          this.infoWindow\n        );\n      }\n\n      // Update all tracks properties\n      const track = this.tracks[pilot];\n      track.updateData(pilotData);\n    });\n\n    this.infoWindow.update(data);\n  };\n}\n","import { getSetting, Settings } from \"../common/PersistentState/Settings\";\n\nclass GPSProvider {\n  constructor() {\n    this._callbacks = [];\n    this._watchId = null;\n    this._gpsData = null;\n\n    let gpsEnabledSetting = getSetting(Settings.GPS_ENABLED);\n    gpsEnabledSetting.registerCallback(this._updateGPSState);\n    this._updateGPSState();\n  }\n\n  _updateGPSState = () => {\n    let gpssettingEnabled = getSetting(Settings.GPS_ENABLED).getValue();\n    let callbackRegistered = this._callbacks.length > 0;\n\n    let enableGps = gpssettingEnabled && callbackRegistered;\n\n    if (this._watchId === null && enableGps && navigator.geolocation) {\n      this._watchId = navigator.geolocation.watchPosition(\n        this._onNewGPSData,\n        this._onGPSError,\n        { enableHighAccuracy: true }\n      );\n      console.log(\"GPS: On\");\n    }\n\n    if (this._watchId !== null && !enableGps) {\n      navigator.geolocation.clearWatch(this._watchId);\n      this._watchId = null;\n      this._setGPSData(null);\n      console.log(\"GPS: Off\");\n    }\n\n    //console.log(\"UPDATE_GPS_STATE\", enableGps, this._callbacks.length);\n  };\n\n  _setGPSData = data => {\n    console.log(\"GPS DATA:\", data);\n    this._gpsData = data;\n    for (const cb of this._callbacks) {\n      cb(data);\n    }\n  };\n\n  _onNewGPSData = data => {\n    this._setGPSData(data);\n  };\n  _onGPSError = () => {\n    this._setGPSData(null);\n  };\n\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n    this._updateGPSState();\n    cb(this._gpsData);\n  };\n\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n    this._updateGPSState();\n  };\n\n  getData = () => {\n    return this._gpsData;\n  };\n}\n\n// Singleton stuff\nlet _instance = null;\nexport const getGPSProvider = () => {\n  if (!_instance) {\n    _instance = new GPSProvider();\n  }\n  return _instance;\n};\n","import { getMapViewportControllerService } from \"../../services/MapViewportControllerService\";\nimport { getGPSProvider } from \"../../services/GPSProvider\";\n\nexport default class GoogleMapsController {\n  constructor(google, map) {\n    this.google = google;\n    this.map = map;\n    this.lastUpdate = Date.now();\n\n    this.gpsState = getGPSProvider().getData();\n    getGPSProvider().registerCallback(this.onGpsUpdate);\n\n    this.viewportInitialized = false;\n    this.singlePersonMode = false;\n\n    this.userInputListeners = [\n      map.addListener(\"dragstart\", this.onUserInput),\n      map.addListener(\"center_changed\", this.onUserInput)\n    ];\n\n    this.insideMapsApiFunction = false;\n  }\n\n  zoomToSinglePilot = () => {\n    if (this.map.getZoom() < 12) this.map.setZoom(12);\n  };\n\n  shutdown = () => {\n    // Do nothing -- seems broken atm\n    //  for (let userInputListener in this.userInputListeners) {\n    //    userInputListener.remove();\n    //}\n    getGPSProvider().unregisterCallback(this.onGpsUpdate);\n  };\n\n  onGpsUpdate = gpsData => {\n    this.gpsState = gpsData;\n  };\n\n  onUserInput = () => {\n    if (!this.insideMapsApiFunction)\n      getMapViewportControllerService().setFreeMode();\n  };\n\n  updateViewport = watchedCoords => {\n    const previousSinglePersonMode = this.singlePersonMode;\n    this.singlePersonMode = false;\n\n    if (watchedCoords.length === 0) {\n      return;\n    }\n\n    if (watchedCoords.length === 1) {\n      this.insideMapsApiFunction = true;\n      this.map.panTo(watchedCoords[0]);\n      this.insideMapsApiFunction = false;\n\n      if (!previousSinglePersonMode) {\n        this.zoomToSinglePilot();\n      }\n      this.singlePersonMode = true;\n      return;\n    }\n\n    let bounds = new this.google.maps.LatLngBounds(\n      watchedCoords[0],\n      watchedCoords[0]\n    );\n\n    watchedCoords.forEach(coord => bounds.extend(coord));\n\n    this.insideMapsApiFunction = true;\n    this.map.fitBounds(bounds);\n    this.insideMapsApiFunction = false;\n  };\n\n  onAnimationFrame = (pilotInfos, controllerState) => {\n    // Set initial map position and scale if\n    if (!this.viewportInitialized) {\n      let watchedCoords = [];\n\n      for (const [, pilotInfo] of Object.entries(pilotInfos)) {\n        watchedCoords.push(pilotInfo.pos);\n      }\n\n      if (watchedCoords.length !== 0) {\n        this.updateViewport(watchedCoords);\n        this.viewportInitialized = true;\n      }\n    }\n\n    // Don't do anything if the controller is disabled\n    if (!controllerState.enabled) {\n      // Run a viewport update anyway, to register that we currently\n      // don't view anyone. Important for registering when we have to\n      // zoom in.\n      this.updateViewport([]);\n      return;\n    }\n\n    // If followSinglePilot is set,\n    if (controllerState.followSinglePilot !== null) {\n      const pilotName = controllerState.followSinglePilot;\n      if (pilotName in pilotInfos) {\n        this.updateViewport([pilotInfos[pilotName].pos]);\n        return;\n      }\n    }\n\n    let watchedCoords = [];\n    if (controllerState.includeSelf) {\n      if (this.gpsState) {\n        watchedCoords.push({\n          lat: this.gpsState.coords.latitude,\n          lng: this.gpsState.coords.longitude\n        });\n      }\n    }\n    for (const [pilotName, enabled] of Object.entries(controllerState.pilots)) {\n      if (enabled && pilotName in pilotInfos) {\n        watchedCoords.push(pilotInfos[pilotName].pos);\n      }\n    }\n    this.updateViewport(watchedCoords);\n  };\n}\n","import React, { useState, useRef, useLayoutEffect, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport useGoogleMapsApi from \"../../common/GoogleMapsApiLoader\";\nimport { LoadingPage, ErrorPage } from \"../StatusPages\";\nimport mapStyle from \"./MapStyle.json\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\nimport MapAnimator from \"./MapAnimator\";\nimport { pure } from \"recompose\";\nimport \"./gm-style-overrides.css\";\nimport { createGeolocationMarker } from \"../../ext/geolocation-marker\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\nimport { getMapViewportControllerService } from \"../../services/MapViewportControllerService\";\nimport GoogleMapsController from \"./GoogleMapsController\";\n\nconst LiveMap = () => {\n  const [mapReady, mapError, google] = useGoogleMapsApi();\n  const mapsRef = useRef();\n  const [map, setMap] = useState(null);\n\n  // Initialize Map\n  useLayoutEffect(() => {\n    if (mapReady && !map) {\n      setMap(\n        new google.maps.Map(mapsRef.current, {\n          center: { lat: 46.509012, lng: 11.827984 },\n          mapTypeId: \"terrain\",\n          zoom: 5,\n          maxZoom: 15,\n          disableDefaultUI: true,\n          zoomControl: true,\n          fullscreenControl: true,\n          styles: mapStyle\n        })\n      );\n    }\n  }, [mapReady, map, google, mapsRef]);\n\n  // Register map for updates\n  useEffect(() => {\n    if (map && google) {\n      const mapAnimator = new MapAnimator(map, google);\n      const mapAnimatorUpdateCallback = mapAnimator.update;\n      getXContestInterface().animation.registerCallback(\n        mapAnimatorUpdateCallback\n      );\n\n      const geolocationMarker = createGeolocationMarker(google, null);\n      geolocationMarker.setPositionOptions({ enableHighAccuracy: true });\n\n      // enable/disable geolocation marker on change\n      if (getSetting(Settings.GPS_ENABLED).getValue()) {\n        geolocationMarker.setMap(map);\n      }\n      const geolocationMarkerStateUpdater = enabled => {\n        if (enabled) {\n          geolocationMarker.setMap(map);\n        } else {\n          geolocationMarker.setMap(null);\n        }\n      };\n      getSetting(Settings.GPS_ENABLED).registerCallback(\n        geolocationMarkerStateUpdater\n      );\n\n      // Register Map Controller\n      let mapController = new GoogleMapsController(google, map);\n      getMapViewportControllerService().registerMapController(mapController);\n\n      return () => {\n        // Unregister Map Controller\n        getMapViewportControllerService().unregisterMapController(\n          mapController\n        );\n\n        // Shutdown mapController\n        mapController.shutdown();\n\n        // Stop animation\n        getXContestInterface().animation.unregisterCallback(\n          mapAnimatorUpdateCallback\n        );\n\n        // Unregister connection between GPS_ENABLED setting and geolocationMarker\n        getSetting(Settings.GPS_ENABLED).unregisterCallback(\n          geolocationMarkerStateUpdater\n        );\n\n        // Disable geolocationMarker\n        geolocationMarker.setMap(null);\n      };\n    }\n  }, [map, google]);\n\n  return (\n    <React.Fragment>\n      <Box\n        width=\"100%\"\n        height=\"100%\"\n        display={mapReady ? \"block\" : \"none\"}\n        ref={mapsRef}\n      ></Box>\n      <LoadingPage\n        message=\"Loading Maps ...\"\n        hideIf={mapReady || mapError}\n      ></LoadingPage>\n      <ErrorPage message=\"Unable to load map!\" hideIf={!mapError}></ErrorPage>\n    </React.Fragment>\n  );\n};\n\nexport default pure(LiveMap);\n","/**\n * @license geolocation-marker\n * @copyright 2012, 2015 Chad Killingsworth\n * @see https://github.com/ChadKillingsworth/geolocation-marker/blob/master/LICENSE.txt\n */\n\n/**\n * @name GeolocationMarker for Google Maps v3\n * @version version 1.1\n * @author Chad Killingsworth [chadkillingsworth at gmail.com]\n * Copyright 2012\n * @fileoverview\n * This library uses geolocation to add a marker and accuracy circle to a map.\n * The marker position is automatically updated as the user position changes.\n */\n\nexport function createGeolocationMarker(google, map) {\n  class GeolocationMarker extends google.maps.MVCObject {\n    /**\n     * @param {google.maps.Map=} opt_map\n     * @param {(google.maps.MarkerOptions|Object.<string>)=} opt_outerMarkerOpts\n     * @param {(google.maps.MarkerOptions|Object.<string>)=} opt_markerOpts\n     * @param {(google.maps.CircleOptions|Object.<string>)=} opt_circleOpts\n     */\n    constructor(opt_map, opt_outerMarkerOpts, opt_markerOpts, opt_circleOpts) {\n      super();\n\n      /**\n       * @private\n       * @type {google.maps.Marker}\n       */\n      this.outerMarker_ = null;\n\n      /**\n       * @private\n       * @type {google.maps.Marker}\n       */\n      this.marker_ = null;\n\n      /**\n       * @private\n       * @type {google.maps.Circle}\n       */\n      this.circle_ = null;\n\n      /**\n       * @private\n       * @type {number}\n       */\n      this.watchId_ = -1;\n\n      var outerMarkerOpts = {\n        clickable: false,\n        cursor: \"pointer\",\n        draggable: false,\n        flat: true,\n        icon: {\n          path: google.maps.SymbolPath.CIRCLE,\n          fillColor: \"#C8D6EC\",\n          fillOpacity: 0.7,\n          scale: 12,\n          strokeWeight: 0\n        },\n        position: new google.maps.LatLng(0, 0),\n        title: \"Current location\",\n        zIndex: 2\n      };\n\n      var markerOpts = {\n        clickable: false,\n        cursor: \"pointer\",\n        draggable: false,\n        flat: true,\n        icon: {\n          path: google.maps.SymbolPath.CIRCLE,\n          fillColor: \"#4285F4\",\n          fillOpacity: 1,\n          scale: 6,\n          strokeColor: \"white\",\n          strokeWeight: 2\n        },\n        // This marker may move frequently - don't force canvas tile redraw\n        optimized: false,\n        position: new google.maps.LatLng(0, 0),\n        title: \"Current location\",\n        zIndex: 3\n      };\n\n      if (opt_outerMarkerOpts) {\n        outerMarkerOpts = this.copyOptions_(\n          outerMarkerOpts,\n          opt_outerMarkerOpts\n        );\n      }\n\n      if (opt_markerOpts) {\n        markerOpts = this.copyOptions_(markerOpts, opt_markerOpts);\n      }\n\n      var circleOpts = {\n        clickable: false,\n        radius: 0,\n        strokeColor: \"1bb6ff\",\n        strokeOpacity: 0.4,\n        fillColor: \"61a0bf\",\n        fillOpacity: 0.4,\n        strokeWeight: 1,\n        zIndex: 1\n      };\n\n      if (opt_circleOpts) {\n        circleOpts = this.copyOptions_(circleOpts, opt_circleOpts);\n      }\n\n      this.outerMarker_ = new google.maps.Marker(outerMarkerOpts);\n      this.marker_ = new google.maps.Marker(markerOpts);\n      this.circle_ = new google.maps.Circle(circleOpts);\n\n      google.maps.MVCObject.prototype.set.call(this, \"accuracy\", null);\n      google.maps.MVCObject.prototype.set.call(this, \"position\", null);\n      google.maps.MVCObject.prototype.set.call(this, \"map\", null);\n\n      this.set(\"minimum_accuracy\", null);\n\n      this.set(\"position_options\" /** GeolocationPositionOptions */, {\n        enableHighAccuracy: true,\n        maximumAge: 1000\n      });\n\n      this.circle_.bindTo(\"map\", this.outerMarker_);\n      this.circle_.bindTo(\"map\", this.marker_);\n\n      if (opt_map) {\n        this.setMap(opt_map);\n      }\n    }\n\n    /**\n     * @override\n     * @param {string} key\n     * @param {*} value\n     */\n    set(key, value) {\n      if (GeolocationMarker.invalidPropertiesExpr_.test(key)) {\n        throw new Error(\"'\" + key + \"' is a read-only property.\");\n      } else if (key === \"map\") {\n        this.setMap(/** @type {google.maps.Map} */ (value));\n      } else {\n        google.maps.MVCObject.prototype.set.call(this, key, value);\n      }\n    }\n\n    /** @return {google.maps.Map} */\n    getMap() {\n      return /** @type {google.maps.Map|null} */ (this.get(\"map\"));\n    }\n\n    /** @return {GeolocationPositionOptions} */\n    getPositionOptions() {\n      return /** @type {GeolocationPositionOptions} */ (this.get(\n        \"position_options\"\n      ));\n    }\n\n    /** @param {!GeolocationPositionOptions|!Object.<string, *>} positionOpts */\n    setPositionOptions(positionOpts) {\n      this.set(\"position_options\", positionOpts);\n    }\n\n    /** @return {google.maps.LatLng|null} */\n    getPosition() {\n      return /** @type {google.maps.LatLng|null} */ (this.get(\"position\"));\n    }\n\n    /** @return {google.maps.LatLngBounds?} */\n    getBounds() {\n      if (this.get(\"position\")) {\n        return this.circle_.getBounds();\n      } else {\n        return null;\n      }\n    }\n\n    /** @return {number|null} */\n    getAccuracy() {\n      return /** @type {number|null} */ (this.get(\"accuracy\"));\n    }\n\n    /** @return {number|null} */\n    getMinimumAccuracy() {\n      return /** @type {number|null} */ (this.get(\"minimum_accuracy\"));\n    }\n\n    /** @param {number|null} accuracy */\n    setMinimumAccuracy(accuracy) {\n      this.set(\"minimum_accuracy\", accuracy);\n    }\n\n    /** @param {google.maps.Map|null} map */\n    setMap(map) {\n      google.maps.MVCObject.prototype.set.call(this, \"map\", map);\n      if (map) {\n        this.watchPosition_();\n      } else {\n        this.outerMarker_.unbind(\"position\");\n        this.marker_.unbind(\"position\");\n        this.circle_.unbind(\"center\");\n        this.circle_.unbind(\"radius\");\n        google.maps.MVCObject.prototype.set.call(this, \"accuracy\", null);\n        google.maps.MVCObject.prototype.set.call(this, \"position\", null);\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = -1;\n        this.outerMarker_.setMap(map);\n        this.marker_.setMap(map);\n      }\n    }\n\n    /** @param {google.maps.MarkerOptions|Object.<string>} outerMarkerOpts */\n    setOuterMarkerOptions(outerMarkerOpts) {\n      this.outerMarker_.setOptions(this.copyOptions_({}, outerMarkerOpts));\n    }\n\n    /** @param {google.maps.MarkerOptions|Object.<string>} markerOpts */\n    setMarkerOptions(markerOpts) {\n      this.marker_.setOptions(this.copyOptions_({}, markerOpts));\n    }\n\n    /** @param {google.maps.CircleOptions|Object.<string>} circleOpts */\n    setCircleOptions(circleOpts) {\n      this.circle_.setOptions(this.copyOptions_({}, circleOpts));\n    }\n\n    /**\n     * @private\n     * @param {GeolocationPosition} position\n     */\n    updatePosition_(position) {\n      var newPosition = new google.maps.LatLng(\n          position.coords.latitude,\n          position.coords.longitude\n        ),\n        mapNotSet = this.marker_.getMap() == null;\n\n      if (mapNotSet) {\n        if (\n          this.getMinimumAccuracy() != null &&\n          position.coords.accuracy > this.getMinimumAccuracy()\n        ) {\n          return;\n        }\n        this.outerMarker_.setMap(this.getMap());\n        this.marker_.setMap(this.getMap());\n        this.outerMarker_.bindTo(\"position\", this);\n        this.marker_.bindTo(\"position\", this);\n        this.circle_.bindTo(\"center\", this, \"position\");\n        this.circle_.bindTo(\"radius\", this, \"accuracy\");\n      }\n\n      if (this.getAccuracy() !== position.coords.accuracy) {\n        // The local set method does not allow accuracy to be updated\n        google.maps.MVCObject.prototype.set.call(\n          this,\n          \"accuracy\",\n          position.coords.accuracy\n        );\n      }\n\n      if (\n        mapNotSet ||\n        this.getPosition() == null ||\n        !this.getPosition().equals(newPosition)\n      ) {\n        // The local set method does not allow position to be updated\n        google.maps.MVCObject.prototype.set.call(this, \"position\", newPosition);\n      }\n    }\n\n    /**\n     * @private\n     */\n    watchPosition_() {\n      if (navigator.geolocation) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.updatePosition_.bind(this),\n          this.geolocationError_.bind(this),\n          this.getPositionOptions()\n        );\n      }\n    }\n\n    /**\n     * @private\n     * @param {GeolocationPositionError} data\n     */\n    geolocationError_(data) {\n      google.maps.event.trigger(this, \"geolocation_error\", data);\n    }\n\n    /**\n     * @private\n     * @param {Object.<string,*>} target\n     * @param {Object.<string,*>} source\n     * @return {Object.<string,*>}\n     */\n    copyOptions_(target, source) {\n      for (var opt in source) {\n        if (GeolocationMarker.DISALLOWED_OPTIONS[opt] !== true) {\n          target[opt] = source[opt];\n        }\n      }\n      return target;\n    }\n  }\n\n  /**\n   * @const\n   * @type {Object.<string, boolean>}\n   */\n  GeolocationMarker.DISALLOWED_OPTIONS = {\n    map: true,\n    position: true,\n    radius: true\n  };\n\n  /**\n   * @private\n   * @const\n   */\n  GeolocationMarker.invalidPropertiesExpr_ = /^(?:position|accuracy)$/i;\n\n  //export default GeolocationMarker;\n  return new GeolocationMarker(map);\n}\n","const ourHistory = [];\n\nwindow.addEventListener(\n  \"popstate\",\n  () => {\n    if (ourHistory.length === 0) {\n      console.warn(\"History was already 0!\");\n    }\n    const callback = ourHistory.pop();\n    console.debug(\"- History size:\", ourHistory.length);\n    if (ourHistory.length > 0) window.history.pushState({}, \"\");\n    if (callback) callback();\n  },\n  { passive: true }\n);\n\nexport const useHistory = () => {\n  const pushFunction = cb => {\n    const histSize = ourHistory.length;\n    ourHistory.push(cb);\n    console.debug(\"+ History size:\", ourHistory.length);\n    if (histSize === 0) {\n      window.history.pushState({}, \"\");\n    }\n  };\n\n  const popFunction = () => {\n    //console.log(\"window.history.back()\", window.history.length);\n    window.history.back();\n  };\n\n  return { push: pushFunction, pop: popFunction };\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Dialog } from \"@material-ui/core\";\nimport { useHistory } from \"../common/History\";\n\n// The difficult here is to fire exactly one history.back() for any case.\n// Cases:\n// - \"open\" changes to 'false'\n// - \"Dialog.onClose()\" => same as previous, as can be forwarded\n// - History gets reverted\n\nconst SubWindow = props => {\n  const [open, _setOpen] = useState(false);\n  const [historyOpen, _setHistoryOpen] = useState(false);\n  const history = useHistory();\n\n  const openWindow = () => {\n    // TODO create history entry\n    history.push(() => {\n      _setOpen(false);\n      props.onClose();\n    });\n    _setOpen(true);\n    _setHistoryOpen(true);\n  };\n\n  // If we should be open, initiate a window opening.\n  // Special case: if we just closed the window, don't immediately re-open it,\n  // but signal the parent class to close instead.\n  if (props.open && !open) {\n    if (historyOpen) {\n      // This creates an endless feedback loop if props.onClose doesn't set\n      // props.open to false. Therefore we require props.onClose to do so.\n      props.onClose();\n\n      // To further prevent the feedback loop, we now set the history open state.\n      // Now, if props.onClose failed to set props.open to false, the window\n      // will immediately re-open.\n      // Currently commented out, because it proved unstable and caused state\n      // fluctuations.\n      //_setHistoryOpen(false);\n    } else {\n      openWindow();\n    }\n  }\n\n  // If both the external and internal state agree that the window is now close,\n  // reset the history state. The history state prevents the window\n  // from immediately re-opening if the external and internal states disagree.\n  if (historyOpen && !open && !props.open) {\n    _setHistoryOpen(false);\n  }\n\n  // If we are open, the history entry still exists.\n  // Therefore, go back in history if we get signalled to close.\n  if (open && !props.open) {\n    history.pop();\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => {\n        props.onClose();\n      }}\n      fullScreen={props.fullScreen}\n      maxWidth={props.maxWidth}\n      fullWidth={props.fullWidth}\n      classes={props.classes}\n    >\n      {props.children}\n    </Dialog>\n  );\n};\n\nexport default SubWindow;\n","export const getRotationStyle = bearing => {\n  const transform = \"rotate(\" + bearing.toString() + \"deg)\";\n\n  const rotationStyle = {\n    transform: transform,\n\n    /* Safari */\n    WebkitTransform: transform,\n\n    /* Firefox */\n    MozTransform: transform,\n\n    /* IE */\n    msTransform: transform,\n\n    /* Opera */\n    OTransform: transform\n  };\n  return rotationStyle;\n};\n","import React from \"react\";\nimport { getGPSProvider } from \"../services/GPSProvider\";\nimport { getDistance, getRhumbLineBearing } from \"geolib\";\nimport { getRotationStyle } from \"./Rotation\";\n\nfunction formatTimeDiff(millis) {\n  let negative = \"\";\n\n  if (millis < 0) {\n    millis = -millis;\n    negative = \"-\";\n  }\n\n  let secs = Math.floor(millis / 1000);\n  if (secs < 90) {\n    return negative + secs + \" sec\";\n  }\n\n  let mins = Math.floor(secs / 60);\n  if (mins < 60) {\n    return negative + mins + \" min\";\n  }\n\n  let hours = Math.floor(mins / 60);\n  mins = mins - hours * 60;\n  if (hours < 24) {\n    return negative + hours + \":\" + mins.toString().padStart(2, \"0\") + \" h\";\n  }\n\n  let days = Math.floor(hours / 24);\n  hours = hours - days * 24;\n  return (\n    negative +\n    days +\n    \"d \" +\n    hours +\n    \":\" +\n    mins.toString().padStart(2, \"0\") +\n    \" h\"\n  );\n}\n\nfunction timestampToTimeString(timestamp) {\n  let time = new Date(timestamp);\n  return time.toLocaleTimeString();\n}\n\nexport class LastFixState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.msgRef = React.createRef();\n  }\n\n  getMessage = ({ timestamp, endOfTrack, landed, relative, showLastFix }) => {\n    if (timestamp == null) {\n      return [\"\", \"never\"];\n    }\n    let time_diff = new Date(timestamp).getTime() - Date.now();\n\n    let timeStr = \"\";\n    if (relative) timeStr = formatTimeDiff(time_diff);\n    else timeStr = timestampToTimeString(timestamp);\n\n    if (endOfTrack && landed) {\n      return [\"#346B8F\", \"\\u2714 \" + timeStr];\n    }\n\n    if (-time_diff < 120000 && !endOfTrack) {\n      if (relative)\n        if (showLastFix) return [\"green\", \"\\u26ab LIVE (\" + timeStr + \")\"];\n        else return [\"green\", \"\\u26ab LIVE\"];\n      else return [\"green\", \"\\u26ab \" + timeStr];\n    }\n\n    if (relative) return [\"red\", \"! LIVE (\" + timeStr + \")\"];\n    else return [\"red\", \"! \" + timeStr];\n  };\n\n  shallowRerender = props => {\n    if (this.msgRef.current !== null) {\n      const msgSpan = this.msgRef.current;\n      const [color, message] = this.getMessage(props);\n      Object.assign(msgSpan.style, { color: color });\n\n      if (msgSpan.innerHTML !== message) {\n        msgSpan.innerHTML = message;\n      }\n    }\n  };\n\n  render() {\n    const [color, message] = this.getMessage(this.props);\n    return (\n      <span style={{ color: color }} ref={this.msgRef}>\n        {message}\n      </span>\n    );\n  }\n}\n\nexport class LastFixArrow extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.gpsData = getGPSProvider().getData();\n\n    this.distanceRef = React.createRef();\n    this.arrowRef = React.createRef();\n    this.lastFix = this.props.lastFix;\n  }\n\n  onNewGPSDataReceived = gpsData => {\n    this.gpsData = gpsData;\n\n    // Directly update through the refs\n    this.updateThroughRef();\n  };\n\n  componentDidMount() {\n    getGPSProvider().registerCallback(this.onNewGPSDataReceived);\n  }\n  componentWillUnmount() {\n    getGPSProvider().unregisterCallback(this.onNewGPSDataReceived);\n  }\n\n  setFix = newFix => {\n    this.lastFix = newFix;\n\n    // Directly update through the refs\n    this.updateThroughRef();\n  };\n\n  updateThroughRef = () => {\n    if (this.arrowRef.current) {\n      const arrowStyle = LastFixArrow.getArrowRotationStyle(\n        this.gpsData,\n        this.lastFix\n      );\n      Object.assign(this.arrowRef.current.style, arrowStyle);\n    }\n    if (this.distanceRef.current) {\n      const newDistance = LastFixArrow.getDistance(this.gpsData, this.lastFix);\n      if (newDistance !== this.distanceRef.current.innerHTML)\n        this.distanceRef.current.innerHTML = newDistance;\n    }\n  };\n\n  static getDistance(myPosition, pilotFix) {\n    if (myPosition === null || pilotFix === null) return \"--km\";\n\n    const distance = getDistance(\n      { lat: myPosition.coords.latitude, lng: myPosition.coords.longitude },\n      pilotFix\n    );\n    return (Math.round(distance / 100) / 10).toString() + \"km\";\n  }\n\n  static getArrowRotationStyle(myPosition, pilotFix) {\n    if (myPosition === null || pilotFix === null) return getRotationStyle(0);\n    const bearing = getRhumbLineBearing(\n      { lat: myPosition.coords.latitude, lng: myPosition.coords.longitude },\n      pilotFix\n    );\n    return getRotationStyle(bearing);\n  }\n\n  render() {\n    this.lastFix = this.props.lastFix;\n    return (\n      <React.Fragment>\n        <span ref={this.distanceRef}>\n          {LastFixArrow.getDistance(this.gpsData, this.lastFix)}\n        </span>{\" \"}\n        <div\n          ref={this.arrowRef}\n          style={{\n            display: \"inline-block\",\n            ...LastFixArrow.getArrowRotationStyle(this.gpsData, this.lastFix)\n          }}\n        >\n          ↑\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { TableCell, Typography, Box } from \"@material-ui/core\";\nimport { LastFixState, LastFixArrow } from \"../../util/LastFixState\";\n\nexport const headerHeight = 37;\nexport const rowHeight = 57;\n\nexport const TableHeader = () => {\n  return (\n    <TableCell\n      component=\"div\"\n      variant=\"head\"\n      className=\"MuiTableCell-stickyHeader\"\n      style={{\n        height: headerHeight,\n        display: \"flex\",\n        alignItems: \"center\",\n        boxSizing: \"border-box\"\n      }}\n    >\n      <div style={{ flex: \"1\" }}>Name</div>\n      <div style={{ width: \"25%\", textAlign: \"right\" }}>State</div>\n      <div style={{ width: \"27%\", textAlign: \"right\" }}>Country</div>\n    </TableCell>\n  );\n};\n\nclass PilotSelectorListRow extends React.PureComponent {\n  render() {\n    const {\n      fullname,\n      username,\n      lastFix,\n      timestamp,\n      landed,\n      iso,\n      disabled\n    } = this.props;\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          boxSizing: \"border-box\",\n          filter: disabled ? \"grayscale(100%) opacity(30%)\" : undefined\n        }}\n      >\n        <Box flex=\"1\" paddingLeft={1} paddingTop={1} paddingBottom={1}>\n          <Typography variant=\"body2\">{fullname}</Typography>\n          <Typography\n            variant=\"caption\"\n            color=\"textSecondary\"\n            style={{ paddingLeft: \".5em\" }}\n          >\n            [{username}]\n          </Typography>\n        </Box>\n        <div style={{ width: \"25%\", textAlign: \"right\" }}>\n          <div>\n            <Typography variant=\"caption\">\n              <LastFixState\n                timestamp={timestamp}\n                landed={landed}\n                endOfTrack={landed}\n                relative\n              />\n            </Typography>\n          </div>\n          <div>\n            <Typography variant=\"caption\">\n              <LastFixArrow lastFix={lastFix} />\n            </Typography>\n          </div>\n        </div>\n        <div style={{ width: \"27%\", textAlign: \"right\" }}>\n          <Box paddingRight={1} paddingLeft={1}>\n            {iso}\n            <Box\n              fontSize=\"large\"\n              marginLeft=\"4px\"\n              boxShadow={1}\n              style={{ verticalAlign: \"middle\" }}\n              className={\"flag-icon flag-icon-\" + iso.toLowerCase()}\n            ></Box>\n          </Box>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const renderRow = ({ data, index, style }) => {\n  const pilotId = data.keys[index];\n  const pilotData = data.data[pilotId];\n\n  const fullname = pilotData ? pilotData.info.user.fullname : \"Offline User\";\n  const username = pilotData ? pilotData.info.user.username : pilotId;\n  const lastFix = pilotData ? pilotData.lastFix : null;\n  const timestamp = pilotData ? pilotData.lastFix.timestamp : null;\n  const landed = pilotData ? pilotData.landed : null;\n  const iso = pilotData ? pilotData.info.user.nationality.iso : \"--\";\n  const selected = data.selected.indexOf(pilotId) !== -1;\n  const disabled = data.alreadyAdded.indexOf(pilotId) !== -1;\n\n  return (\n    <TableCell\n      component=\"div\"\n      variant=\"body\"\n      padding=\"none\"\n      style={{\n        ...style,\n        backgroundColor:\n          selected && !disabled ? \"rgba(0, 0, 0, 0.04)\" : undefined\n      }}\n      onClick={() => {\n        if (!disabled) data.onPilotClicked(pilotId);\n      }}\n    >\n      <PilotSelectorListRow\n        fullname={fullname}\n        username={username}\n        lastFix={lastFix}\n        timestamp={timestamp}\n        landed={landed}\n        iso={iso}\n        disabled={disabled}\n      />\n    </TableCell>\n  );\n};\n","import React from \"react\";\n\nimport { CircularProgress } from \"@material-ui/core\";\n\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\n\nimport { arraysEqual } from \"../../util/CompareArrays\";\nimport { getGPSProvider } from \"../../services/GPSProvider\";\nimport { getDistance } from \"geolib\";\nimport { renderRow, TableHeader, rowHeight } from \"./PilotSelectorListRenderer\";\nimport { FixedSizeList } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nconst filterPilotList = (pilotList, pilotInfos, search) => {\n  const matchesSearch = name => {\n    if (search === \"\") {\n      return true;\n    }\n    return name.toLowerCase().includes(search.toLowerCase());\n  };\n\n  // Create virtual pilot if nobody found\n  let filteredPilots = pilotList.filter(pilotId => {\n    return (\n      matchesSearch(pilotInfos[pilotId].info.user.username) ||\n      matchesSearch(pilotInfos[pilotId].info.user.fullname)\n    );\n  });\n\n  // Add dummy pilot if list is empty and search string is valid\n  if (filteredPilots.length === 0 && !/\\s/.test(search) && search.length > 0) {\n    filteredPilots.push(search);\n  }\n\n  return filteredPilots;\n};\n\nconst sortPilotList = (pilotInfos, gps) => {\n  if (gps) {\n    // If gps, sort by distance\n    const myPos = { lat: gps.coords.latitude, lng: gps.coords.longitude };\n    let distances = Object.entries(pilotInfos).map(([pilotId, data]) => {\n      const distance = getDistance(myPos, data.lastFix);\n      return [pilotId, distance];\n    });\n    distances.sort((el1, el2) => el1[1] - el2[1]);\n    const pilotIds = distances.map(el => el[0]);\n    return pilotIds;\n  } else {\n    // Else, sort by name\n    let pilotIds = Object.keys(pilotInfos);\n    pilotIds.sort();\n    return pilotIds;\n  }\n};\n\n// The list content\nexport default class PilotSelectorList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { didMount: false };\n    this.gpsData = getGPSProvider().getData();\n    const pilotInfos = getXContestInterface().pilotInfos.getValue();\n    this.state = {\n      pilotInfos: pilotInfos,\n      sortedPilotList: sortPilotList(pilotInfos, this.gpsData)\n    };\n  }\n\n  startRendering = () => {\n    this.setState(state => ({ ...state, didMount: true }));\n  };\n\n  componentDidMount() {\n    getXContestInterface().pilotInfos.registerCallback(this.onNewPilotInfos);\n    getGPSProvider().registerCallback(this.onNewGpsData);\n\n    // This starts the actual rendering, as it can take quite a while.\n    // setTimeout forces the browser to present before loading the table.\n    // without setTimeout, the waiting symbol would never be shown.\n    setTimeout(this.startRendering);\n  }\n\n  componentWillUnmount() {\n    getXContestInterface().pilotInfos.unregisterCallback(this.onNewPilotInfos);\n    getGPSProvider().unregisterCallback(this.onNewGpsData);\n  }\n\n  updatePilotListIfNecessary = () => {\n    const newPilotList = sortPilotList(this.state.pilotInfos, this.gpsData);\n\n    if (!arraysEqual(this.state.sortedPilotList, newPilotList))\n      this.setState(state => ({ ...state, sortedPilotList: newPilotList }));\n  };\n\n  onNewGpsData = gpsData => {\n    // update only if gps position changed pilot list\n    this.gpsData = gpsData;\n    this.updatePilotListIfNecessary();\n  };\n\n  onNewPilotInfos = pilotInfos => {\n    // Always update on new pilot infos\n    this.setState(state => ({\n      ...state,\n      pilotInfos: pilotInfos,\n      sortedPilotList: sortPilotList(pilotInfos, this.gpsData)\n    }));\n  };\n\n  onPilotClicked = pilotId => {\n    if (this.props.onPilotClicked) this.props.onPilotClicked(pilotId);\n  };\n\n  render() {\n    if (!this.state.didMount) {\n      return (\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            overflow: \"hidden\"\n          }}\n        >\n          <CircularProgress disableShrink style={{ margin: \"2em\" }} />\n        </div>\n      );\n    }\n\n    const displayedPilots = filterPilotList(\n      this.state.sortedPilotList,\n      this.state.pilotInfos,\n      this.props.search\n    );\n\n    return (\n      <React.Fragment>\n        <TableHeader />\n        <div style={{ flex: \"1\" }}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <FixedSizeList\n                width={width}\n                height={height}\n                itemCount={displayedPilots.length}\n                itemSize={rowHeight}\n                itemData={{\n                  keys: displayedPilots,\n                  data: this.state.pilotInfos,\n                  selected: this.props.selected,\n                  alreadyAdded: this.props.alreadyAdded,\n                  onPilotClicked: this.onPilotClicked\n                }}\n                itemKey={(index, { keys }) => keys[index]}\n              >\n                {renderRow}\n              </FixedSizeList>\n            )}\n          </AutoSizer>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","// attach the .equals method to Array's prototype to call it on any array\nexport function arraysEqual(array1, array2) {\n  // if the other array is a falsy value, return\n  if (!array1 || !array2) return false;\n\n  // compare lengths - can save a lot of time\n  if (array1.length !== array2.length) return false;\n\n  for (var i = 0, l = array1.length; i < l; i++) {\n    /*// Check if we have nested arrays\n    if (array1[i] instanceof Array && array2[i] instanceof Array) {\n      // recurse into the nested arrays\n      if (!array1[i].equals(array2[i])) return false;\n    } else */\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","import React from \"react\";\nimport {\n  Box,\n  useMediaQuery,\n  useTheme,\n  Typography,\n  Toolbar\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport { Button, DialogActions, TextField } from \"@material-ui/core\";\n\nimport SubWindow from \"../../util/SubWindow\";\nimport PilotSelectorList from \"./PilotSelectorList\";\nimport { pure } from \"recompose\";\n\nconst useStyles = makeStyles({\n  fullHeightWindow: {\n    height: \"100%\"\n  }\n});\n\n// Base window, without the table\nconst PilotSelector = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  // State\n  const [selected, setSelected] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const numSelected = selected.length;\n\n  const closeWindow = () => {\n    // Reset state\n    setSearch(\"\");\n    setSelected([]);\n    props.onClose();\n  };\n\n  const pilotClicked = name => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  return (\n    <SubWindow\n      open={props.open}\n      onClose={closeWindow}\n      fullScreen={fullScreen}\n      maxWidth=\"xs\"\n      fullWidth={true}\n      classes={{ paper: classes.fullHeightWindow }}\n    >\n      <Toolbar\n        style={\n          numSelected === 0\n            ? {}\n            : theme.palette.type === \"light\"\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark\n              }\n        }\n      >\n        {numSelected > 0 ? (\n          <Typography component=\"div\" color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography component=\"div\" variant=\"h6\" id=\"tableTitle\">\n            Add new pilots:\n          </Typography>\n        )}\n      </Toolbar>\n      <Box paddingLeft=\"1em\" paddingRight=\"1em\" paddingTop=\"4px\">\n        <TextField\n          //autoFocus\n          margin=\"dense\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n          id=\"search_field\"\n          label=\"Search\"\n          type=\"search\"\n          fullWidth\n          onChange={event => setSearch(event.target.value)}\n        />\n      </Box>\n      <Box\n        flex=\"1 1 auto\"\n        marginY=\"8px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"stretch\"\n      >\n        <PilotSelectorList\n          alreadyAdded={props.alreadyAdded}\n          selected={selected}\n          onPilotClicked={pilotClicked}\n          search={search}\n        />\n      </Box>\n      <DialogActions>\n        <Button onClick={closeWindow} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          disabled={numSelected === 0}\n          onClick={() => {\n            props.onAddPilots(selected);\n            closeWindow();\n          }}\n          color=\"primary\"\n        >\n          Add\n        </Button>\n      </DialogActions>\n    </SubWindow>\n  );\n};\n\nexport default pure(PilotSelector);\n","const longPressDuration =\n  navigator.platform.indexOf(\"iPhone\") !== -1 ||\n  navigator.platform.indexOf(\"iPad\") !== -1 ||\n  navigator.platform.indexOf(\"iPod\") !== -1\n    ? 400\n    : 1000;\n\nexport default class ContextMenuHandler {\n  constructor(callback) {\n    this.callback = callback;\n    this.longPressCountdown = null;\n    this.contextMenuPossible = false;\n  }\n\n  onTouchStart = e => {\n    console.log(this.toString(), \"onTouchStart\");\n    this.contextMenuPossible = true;\n\n    const touch = e.touches[0];\n\n    this.longPressCountdown = setTimeout(() => {\n      this.contextMenuPossible = false;\n      this.callback(touch);\n      console.log(this.toString(), \"CONTEXT_MENU\");\n    }, longPressDuration);\n  };\n\n  onTouchMove = e => {\n    console.log(this.toString(), \"onTouchMove\");\n    clearTimeout(this.longPressCountdown);\n  };\n\n  onTouchCancel = e => {\n    console.log(this.toString(), \"onTouchCancel\");\n    this.contextMenuPossible = false;\n    clearTimeout(this.longPressCountdown);\n  };\n\n  onTouchEnd = e => {\n    console.log(this.toString(), \"onTouchEnd\");\n    this.contextMenuPossible = false;\n    clearTimeout(this.longPressCountdown);\n  };\n\n  onContextMenu = e => {\n    console.log(this.toString(), \"onContextMenu\");\n    this.contextMenuPossible = false;\n\n    clearTimeout(this.longPressCountdown);\n\n    this.callback(e);\n    e.preventDefault();\n  };\n}\n","import React from \"react\";\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  Typography,\n  ExpansionPanelDetails\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\nimport { getGPSProvider } from \"../../services/GPSProvider\";\nimport { LastFixState, LastFixArrow } from \"../../util/LastFixState\";\nimport { getPilotIcon, getPilotIconColor } from \"../../common/PilotIcon\";\nimport { styled, withStyles } from \"@material-ui/styles\";\nimport { getRotationStyle } from \"../../util/Rotation\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\nimport ContextMenuHandler from \"../../util/ContextMenuHandler\";\n\nconst FirstRowLeft = styled(Typography)({ overflow: \"hidden\", flex: \"1\" });\n\nconst FirstRowRight = styled(Typography)({\n  marginRight: \".2em\",\n  marginLeft: \".5em\"\n});\n\nconst SecondRow = styled(Typography)({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  paddingLeft: \".5em\"\n});\n\nconst PilotExpansionPanelSummary = withStyles({\n  root: {\n    paddingLeft: \"12px\"\n  },\n  content: {\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    whiteSpace: \"nowrap\"\n  }\n})(ExpansionPanelSummary);\n\nclass AnimatedPilotListEntry extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    // Get initial data\n    this.gpsData = getGPSProvider().getData();\n    this.pilotColor = getPilotIconColor(this.props.pilotId);\n\n    // References\n    this.lastFixRef = React.createRef();\n    this.heightRef = React.createRef();\n    this.liveStateRef = React.createRef();\n    this.iconRef = React.createRef();\n\n    this.contextMenuHandler = new ContextMenuHandler(e => {\n      this.props.onContextMenuHandler(\n        this.props.pilotId,\n        {\n          left: e.pageX,\n          top: e.pageY\n        },\n        this.pilotProps\n      );\n    });\n  }\n\n  //////////////////////////////////////////////////////////////\n  /// BOILERPLATE CODE FOR UPDATING THE COMPONENT\n  ///\n  extractImportantProps = pilotInfo => {\n    return {\n      height: pilotInfo.gpsAlt !== null ? pilotInfo.gpsAlt : pilotInfo.baroAlt,\n      elevation: pilotInfo.elevation,\n      vario: pilotInfo.baroVario,\n      startOfTrack: pilotInfo.startOfTrack,\n      endOfTrack: pilotInfo.endOfTrack,\n      landed: pilotInfo.landed,\n      newestDataTimestamp: pilotInfo.newestDataTimestamp,\n      lat: pilotInfo.pos.lat,\n      lng: pilotInfo.pos.lng,\n      velocityLat:\n        pilotInfo.velocityVec === null ? null : pilotInfo.velocityVec.lat,\n      velocityLng:\n        pilotInfo.velocityVec === null ? null : pilotInfo.velocityVec.lng,\n      velocity: pilotInfo.velocity\n    };\n  };\n\n  propsChanged = newProps => {\n    const oldProps = this.pilotProps;\n    for (let p in oldProps) {\n      if (!(p in newProps)) return true;\n    }\n    for (let p in newProps) {\n      if (!(p in oldProps)) return true;\n      if (oldProps[p] !== newProps[p]) return true;\n    }\n    return false;\n  };\n\n  onNewGPSDataReceived = gpsData => {\n    this.gpsData = gpsData;\n  };\n\n  onNewDataReceived = pilotData => {\n    if (!(this.props.pilotId in pilotData)) return;\n\n    const pilotInfo = pilotData[this.props.pilotId];\n    const newPilotProps = this.extractImportantProps(pilotInfo);\n\n    // Run shallow update without touching React\n    if (this.propsChanged(newPilotProps)) {\n      this.pilotProps = newPilotProps;\n      this.shallowRerender(true);\n    } else {\n      // If props didn't change, rerender anyways to update time stamps and time-dependent data\n      this.shallowRerender(false);\n    }\n  };\n\n  shallowRerender = propsChanged => {\n    // Update height\n    if (this.heightRef.current !== null && propsChanged) {\n      const newHeight = AnimatedPilotListEntry.renderHeight(this.pilotProps);\n      if (newHeight !== this.heightRef.current.innerHTML)\n        this.heightRef.current.innerHTML = newHeight;\n    }\n\n    // Update distance and direction\n    if (this.lastFixRef.current !== null && propsChanged) {\n      this.lastFixRef.current.setFix({\n        lat: this.pilotProps.lat,\n        lng: this.pilotProps.lng\n      });\n    }\n\n    // Update Pilot Icon\n    if (this.iconRef.current !== null && propsChanged) {\n      let icon = this.iconRef.current;\n\n      const newPilotIcon = getPilotIcon(\n        this.pilotProps.startOfTrack,\n        this.pilotProps.endOfTrack,\n        this.pilotProps.landed,\n        { lat: this.pilotProps.lat, lng: this.pilotProps.lng },\n        { lat: this.pilotProps.velocityLat, lng: this.pilotProps.velocityLng }\n      );\n\n      // Update svg path if necessary\n      if (icon.childNodes.length > 0) {\n        const path = icon.childNodes[0];\n        const oldPath = path.getAttribute(\"d\");\n        if (oldPath !== newPilotIcon.path) {\n          path.setAttribute(\"d\", newPilotIcon.path);\n        }\n      }\n\n      // Update rotation if necessary\n      const rotation =\n        newPilotIcon.rotation === undefined ? 0 : newPilotIcon.rotation;\n      Object.assign(icon.style, getRotationStyle(rotation));\n    }\n\n    // Update Live State\n    if (this.liveStateRef.current !== null) {\n      this.liveStateRef.current.shallowRerender({\n        timestamp: this.pilotProps.newestDataTimestamp * 1000,\n        landed: this.pilotProps.landed,\n        endOfTrack: this.pilotProps.endOfTrack,\n        relative: true,\n        showLastFix: getSetting(Settings.LOW_LATENCY).getValue()\n      });\n    }\n  };\n\n  componentDidMount() {\n    getXContestInterface().animation.registerCallback(this.onNewDataReceived);\n    getGPSProvider().registerCallback(this.onNewGPSDataReceived);\n  }\n\n  componentWillUnmount() {\n    getXContestInterface().animation.unregisterCallback(this.onNewDataReceived);\n    getGPSProvider().unregisterCallback(this.onNewGPSDataReceived);\n  }\n  ///\n  /////////////////////////////////////////////////////////////////\n\n  /////////////////////////////////////////////////////////////////\n  /// LAYOUT\n  ///\n\n  static renderHeight(pilotProps) {\n    const height = pilotProps.height;\n\n    return (\n      Math.round(height) +\n      \"m (\" +\n      Math.round(Math.max(0, height - pilotProps.elevation)) +\n      \"m)\"\n    );\n  }\n\n  render() {\n    {\n      const pilotData = getXContestInterface().animation.getData();\n      const pilotInfo =\n        this.props.pilotId in pilotData ? pilotData[this.props.pilotId] : null;\n      this.pilotProps = this.extractImportantProps(pilotInfo);\n    }\n\n    console.log(\n      \"RENDER \",\n      this.props.pilotId,\n      this.state,\n      this.props,\n      this.pilotProps\n    );\n\n    const pilotIcon = getPilotIcon(\n      this.pilotProps.startOfTrack,\n      this.pilotProps.endOfTrack,\n      this.pilotProps.landed,\n      { lat: this.pilotProps.lat, lng: this.pilotProps.lng },\n      { lat: this.pilotProps.velocityLat, lng: this.pilotProps.velocityLng }\n    );\n    const pilotIconRotation =\n      pilotIcon.rotation === undefined ? 0 : pilotIcon.rotation;\n\n    return (\n      <ExpansionPanel\n        TransitionProps={{ unmountOnExit: true }}\n        onContextMenu={this.contextMenuHandler.onContextMenu}\n        onTouchStart={this.contextMenuHandler.onTouchStart}\n        onTouchCancel={this.contextMenuHandler.onTouchCancel}\n        onTouchEnd={this.contextMenuHandler.onTouchEnd}\n        onTouchMove={this.contextMenuHandler.onTouchMove}\n      >\n        <PilotExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <svg\n            width=\"30px\"\n            height=\"30px\"\n            viewBox=\"0 0 24 24\"\n            display=\"block\"\n            style={{\n              flex: \"0 0 auto\",\n              ...getRotationStyle(pilotIconRotation)\n            }}\n            ref={this.iconRef}\n          >\n            <path d={pilotIcon.path} fill={this.pilotColor} stroke=\"black\" />\n          </svg>\n          <div\n            style={{\n              flex: \"1 1 auto\",\n              overflow: \"hidden\",\n              marginLeft: \"10px\"\n            }}\n          >\n            <div\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                overflow: \"hidden\"\n              }}\n            >\n              <FirstRowLeft variant=\"body2\">\n                {this.props.pilotName}\n              </FirstRowLeft>\n              <FirstRowRight variant=\"caption\">\n                <LastFixArrow\n                  ref={this.lastFixRef}\n                  lastFix={{\n                    lat: this.pilotProps.lat,\n                    lng: this.pilotProps.lng\n                  }}\n                />\n              </FirstRowRight>\n            </div>\n            <SecondRow variant=\"caption\">\n              <LastFixState\n                timestamp={this.pilotProps.newestDataTimestamp * 1000}\n                landed={this.pilotProps.landed}\n                endOfTrack={this.pilotProps.endOfTrack}\n                relative\n                ref={this.liveStateRef}\n                showLastFix={getSetting(Settings.LOW_LATENCY).getValue()}\n              />\n              <span ref={this.heightRef}>\n                {AnimatedPilotListEntry.renderHeight(this.pilotProps)}\n              </span>\n            </SecondRow>\n          </div>\n        </PilotExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography\n            style={{\n              MozUserSelect: \"none\",\n              WebkitUserSelect: \"none\",\n              msUserSelect: \"none\"\n            }}\n          >\n            TODO: Details\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n  }\n}\n\nexport default AnimatedPilotListEntry;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  Popover,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon\n} from \"@material-ui/core\";\nimport { getXContestInterface } from \"../../location_provider/XContest/XContestInterface\";\nimport AnimatedPilotListEntry from \"./AnimatedPilotListEntry\";\nimport { getGPSProvider } from \"../../services/GPSProvider\";\nimport { getDistance } from \"geolib\";\n\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DirectionsIcon from \"@material-ui/icons/Directions\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport { navigateTo } from \"../../util/MapLinks\";\n\nclass AnimatedPilotList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      onlinePilots: [],\n      contextMenu: null\n    };\n    this.gpsData = getGPSProvider().getData();\n  }\n\n  getSortedPilotList = pilotData => {\n    // If we have GPS, return pilot list in whatever order\n    if (this.gpsData === null) return Object.keys(pilotData);\n\n    // Get own position\n    const myPos = {\n      lat: this.gpsData.coords.latitude,\n      lng: this.gpsData.coords.longitude\n    };\n\n    // Get distances to pilots\n    let pilotsAndDistances = Object.entries(pilotData).map(([name, data]) => [\n      name,\n      getDistance(myPos, data.pos)\n    ]);\n\n    // Sort\n    pilotsAndDistances.sort((el1, el2) => el1[1] - el2[1]);\n\n    // Return the sorted pilot names\n    return pilotsAndDistances.map(el => el[0]);\n  };\n\n  onAnimationFrame = pilotData => {\n    // Sort\n    const sortedPilotList = this.getSortedPilotList(pilotData);\n\n    // Split pilots by landed and not landed\n    const landedPilotList = sortedPilotList.filter(\n      name => pilotData[name].endOfTrack && pilotData[name].landed\n    );\n    const notLandedPilotList = sortedPilotList.filter(\n      name => !(pilotData[name].endOfTrack && pilotData[name].landed)\n    );\n\n    // Show landed pilots at the end of the list\n    const pilotList = notLandedPilotList.concat(landedPilotList);\n\n    // Check if the pilot list changed\n    let pilotListChanged = false;\n    if (pilotList.length === this.state.onlinePilots.length) {\n      for (let i = 0; i < pilotList.length; i++) {\n        if (pilotList[i] !== this.state.onlinePilots[i]) {\n          pilotListChanged = true;\n          break;\n        }\n      }\n    } else {\n      pilotListChanged = true;\n    }\n\n    // If it changed, run a component update\n    if (pilotListChanged) {\n      this.setState(state => ({ ...state, onlinePilots: pilotList }));\n    }\n  };\n\n  onNewGPSDataReceived = gpsData => {\n    this.gpsData = gpsData;\n  };\n\n  componentDidMount() {\n    getXContestInterface().animation.registerCallback(this.onAnimationFrame);\n    getGPSProvider().registerCallback(this.onNewGPSDataReceived);\n  }\n  componentWillUnmount() {\n    getXContestInterface().animation.unregisterCallback(this.onAnimationFrame);\n    getGPSProvider().unregisterCallback(this.onNewGPSDataReceived);\n  }\n\n  removePilot = pilotId => {\n    this.props.removePilots([pilotId]);\n  };\n\n  showContextMenu = (pilotId, mousePos, pilotProps) => {\n    this.setState(oldState => ({\n      ...oldState,\n      contextMenu: { pilotId: pilotId, pos: mousePos, props: pilotProps }\n    }));\n  };\n\n  hideContextMenu = () => {\n    this.setState(oldState => ({ ...oldState, contextMenu: null }));\n  };\n\n  contextMenu_delete = () => {\n    if (this.state.contextMenu !== null)\n      this.removePilot(this.state.contextMenu.pilotId);\n    this.hideContextMenu();\n  };\n\n  contextMenu_navigateTo = () => {\n    if (this.state.contextMenu !== null) {\n      const pilotProps = this.state.contextMenu.props;\n      navigateTo({ lat: pilotProps.lat, lng: pilotProps.lng });\n    }\n    this.hideContextMenu();\n  };\n\n  render() {\n    let pilotIsOnline = new Set(this.state.onlinePilots);\n\n    // Show online pilots first\n    const onlinePilots = this.state.onlinePilots.filter(\n      pilotId => pilotId in this.props.pilots\n    );\n\n    const offlinePilots = Object.keys(this.props.pilots).filter(\n      pilotId => !pilotIsOnline.has(pilotId)\n    );\n\n    const getPilotName = pilotId => {\n      const name = this.props.pilots[pilotId];\n      if (name === undefined || name === null) return pilotId;\n      return name;\n    };\n\n    return (\n      <Box height=\"100%\" bgcolor=\"#eeeef5\" overflow=\"auto\">\n        <Box margin={1}>\n          {onlinePilots.map(pilotId => (\n            <AnimatedPilotListEntry\n              key={pilotId}\n              pilotId={pilotId}\n              pilotName={getPilotName(pilotId)}\n              removePilot={this.removePilot}\n              onContextMenuHandler={this.showContextMenu}\n            />\n          ))}\n        </Box>\n        <Box margin={1}>\n          {offlinePilots.map(pilotId => (\n            <Box\n              key={pilotId}\n              onClick={() => {\n                this.removePilot(pilotId);\n              }}\n              display=\"flex\"\n            >\n              <Typography variant=\"body2\">{getPilotName(pilotId)}</Typography>\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                style={{ paddingLeft: \".5em\" }}\n              >\n                [{pilotId}]\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n        <Popover\n          open={this.state.contextMenu !== null}\n          anchorReference=\"anchorPosition\"\n          anchorPosition={\n            this.state.contextMenu === null ? null : this.state.contextMenu.pos\n          }\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\"\n          }}\n          onClose={this.hideContextMenu}\n        >\n          <List component=\"nav\" dense>\n            <ListItem button disabled>\n              <ListItemIcon>\n                <PlayArrowIcon />\n              </ListItemIcon>\n              <ListItemText>Show Pilot on Map</ListItemText>\n            </ListItem>\n            <ListItem button disabled>\n              <ListItemIcon>\n                <DirectionsIcon />\n              </ListItemIcon>\n              <ListItemText>Live Navigation</ListItemText>\n            </ListItem>\n            <ListItem button onClick={this.contextMenu_navigateTo}>\n              <ListItemIcon>\n                <RoomIcon />\n              </ListItemIcon>\n              <ListItemText>Open in Maps</ListItemText>\n            </ListItem>\n            <ListItem button onClick={this.contextMenu_delete}>\n              <ListItemIcon>\n                <DeleteIcon />\n              </ListItemIcon>\n              <ListItemText>Remove Pilot</ListItemText>\n            </ListItem>\n          </List>\n        </Popover>\n      </Box>\n    );\n  }\n}\n\nexport default AnimatedPilotList;\n","export function navigateTo(pos) {\n  if (\n    /* if we're on iOS, open in Apple Maps */\n    navigator.platform.indexOf(\"iPhone\") !== -1 ||\n    navigator.platform.indexOf(\"iPad\") !== -1 ||\n    navigator.platform.indexOf(\"iPod\") !== -1\n  )\n    window.open(\n      \"https://maps.apple.com/maps?q=\" +\n        pos.lat.toString() +\n        \",\" +\n        pos.lng.toString()\n    );\n  /* else use Google */ else\n    window.open(\n      \"https://maps.google.com/maps?q=\" +\n        pos.lat.toString() +\n        \",\" +\n        pos.lng.toString()\n    );\n}\n","import React from \"react\";\nimport { Fab } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Box from \"@material-ui/core/Box\";\nimport PilotSelector from \"../PilotSelector/PilotSelector\";\nimport {\n  getChosenPilots,\n  addPilots,\n  removePilots,\n  getChosenPilotsObject\n} from \"../../common/PersistentState/ChosenPilots\";\nimport AnimatedPilotList from \"./AnimatedPilotList\";\n\nclass Pilots extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { pilotSelectorOpen: false, chosenPilots: getChosenPilots() };\n  }\n\n  openPilotSelector = () => {\n    if (this.state.pilotSelectorOpen === false)\n      this.setState(state => ({ ...state, pilotSelectorOpen: true }));\n  };\n\n  closePilotSelector = () => {\n    if (this.state.pilotSelectorOpen === true)\n      this.setState(state => ({ ...state, pilotSelectorOpen: false }));\n  };\n\n  chosenPilotsChanged = newChosenPilots => {\n    this.setState(state => ({\n      ...state,\n      chosenPilots: newChosenPilots\n    }));\n  };\n\n  componentDidMount() {\n    getChosenPilotsObject().registerCallback(this.chosenPilotsChanged);\n  }\n  componentWillUnmount() {\n    getChosenPilotsObject().unregisterCallback(this.chosenPilotsChanged);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <AnimatedPilotList\n          pilots={this.state.chosenPilots}\n          removePilots={removePilots}\n        ></AnimatedPilotList>\n\n        <Box position=\"absolute\" bottom=\"16px\" right=\"16px\">\n          <Fab size=\"small\" color=\"primary\" onClick={this.openPilotSelector}>\n            <AddIcon />\n          </Fab>\n        </Box>\n        <PilotSelector\n          open={this.state.pilotSelectorOpen}\n          onClose={this.closePilotSelector}\n          onAddPilots={addPilots}\n          alreadyAdded={Object.keys(this.state.chosenPilots)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Pilots;\n","import React from \"react\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\n\nexport default class NumberInput extends React.PureComponent {\n  state = {\n    internalUpdate: false,\n    value: null\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const resultState = { ...state, internalUpdate: false };\n\n    // Overwrite with external value if we got an update from the parent element\n    if (!state.internalUpdate) {\n      resultState.value = props.value;\n    }\n\n    return resultState;\n  }\n\n  render() {\n    return (\n      <TextField\n        onChange={event => {\n          const value = event.target.value;\n          // If the value is too small, send the smallest possible value to the parent,\n          // but keep the incorrect value in the text field.\n          // If the value is too large, send the largest possible value to the parent,\n          // and also set the text field to the largest possible value.\n          // Otherwise, just update.\n\n          if (value < this.props.min) {\n            // If those two messages get delivered out of order, this entire trick will stop working.\n            // But I think setting states will never be done in an incorrect order, that would really break things.\n            this.props.onChange(this.props.min);\n            this.setState(state => ({\n              ...state,\n              internalUpdate: true,\n              value: value\n            }));\n          } else if (value > this.props.max) {\n            this.props.onChange(this.props.max);\n          } else {\n            this.props.onChange(value);\n          }\n        }}\n        variant=\"outlined\"\n        disabled={this.props.disabled}\n        margin=\"dense\"\n        hiddenLabel\n        type=\"number\"\n        value={this.state.value}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">{this.props.unit}</InputAdornment>\n          )\n        }}\n        inputProps={{\n          min: this.props.min,\n          max: this.props.max\n        }}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { getSetting } from \"../../common/PersistentState/Settings\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch\n} from \"@material-ui/core\";\nimport NumberInput from \"../../util/NumberInput\";\nimport { pure } from \"recompose\";\n\nexport const BooleanSetting = pure(props => {\n  const [settingValue, setSettingValue] = getSetting(props.setting).use();\n  const flipSetting = () => setSettingValue(!settingValue);\n\n  return (\n    <ListItem button onClick={flipSetting}>\n      <ListItemText\n        primary={props.primaryText}\n        secondary={props.secondaryText}\n      />\n      <ListItemSecondaryAction>\n        <Switch edge=\"end\" onChange={flipSetting} checked={settingValue} />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n});\n\nexport const NumberSetting = pure(props => {\n  const [settingValue, setSettingValue] = getSetting(props.setting).use();\n\n  return (\n    <ListItem disabled={props.disabled}>\n      <ListItemText\n        primary={props.primaryText}\n        secondary={props.secondaryText}\n      />\n      <ListItemSecondaryAction>\n        <NumberInput\n          value={settingValue}\n          onChange={setSettingValue}\n          disabled={props.disabled}\n          unit={props.unit}\n          min={props.min}\n          max={props.max}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n});\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Box,\n  Typography,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SubWindow from \"../../util/SubWindow\";\nimport { resetAllSettings } from \"../../common/PersistentState/Settings\";\nimport { pure } from \"recompose\";\n\nconst SettingsPageTitleBar = pure(props => {\n  const [resetAllSettingsDialogOpen, setResetAllSettingsDialogOpen] = useState(\n    false\n  );\n\n  return (\n    <React.Fragment>\n      <AppBar style={{ position: \"static\" }}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={props.onClose}>\n            <ArrowBackIcon />\n          </IconButton>\n\n          <Box marginLeft={2} flexGrow={1}>\n            <Typography variant=\"h6\">Settings</Typography>\n          </Box>\n\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={() => setResetAllSettingsDialogOpen(true)}\n          >\n            <UndoIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      {/* RESET ALL SETTINGS DIALOG */}\n      <SubWindow\n        open={resetAllSettingsDialogOpen}\n        onClose={() => setResetAllSettingsDialogOpen(false)}\n      >\n        <DialogTitle>{\"Reset all settings?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This sets all settings to their default values.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              resetAllSettings();\n              setResetAllSettingsDialogOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Yes\n          </Button>\n          <Button\n            onClick={() => setResetAllSettingsDialogOpen(false)}\n            color=\"primary\"\n            autoFocus\n          >\n            No\n          </Button>\n        </DialogActions>\n      </SubWindow>\n    </React.Fragment>\n  );\n});\n\nexport default SettingsPageTitleBar;\n","import React from \"react\";\n\nimport { List, Divider } from \"@material-ui/core\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\nimport SubWindow from \"../../util/SubWindow\";\nimport { BooleanSetting, NumberSetting } from \"./SettingsPageEntries\";\nimport SettingsPageTitleBar from \"./SettingsPageTitleBar\";\n\nconst SettingsPage = props => {\n  // Retreive the settings that enable/disable other settings\n  const [settingLimitPaths] = getSetting(Settings.LIMIT_PATHS).use();\n  const [settingFpsLimit] = getSetting(Settings.FPS_LIMIT).use();\n  //const [settingLowLatency] = getSetting(Settings.LOW_LATENCY).use();\n\n  return (\n    <SubWindow fullScreen open={props.open} onClose={props.onClose}>\n      <SettingsPageTitleBar onClose={props.onClose} />\n\n      <List>\n        {/* ANIMATION DELAY */}\n        <BooleanSetting\n          setting={Settings.LOW_LATENCY}\n          primaryText=\"Low Latency Mode\"\n          secondaryText=\"disables animations\"\n        />\n        {/*<NumberSetting\n          primaryText=\"Animation Delay\"\n          secondaryText=\"70-120 sec (default: 80)\"\n          setting={Settings.ANIMATION_DELAY}\n          disabled={settingLowLatency}\n          unit=\"sec\"\n          min={70}\n          max={120}\n        />*/}\n\n        {/* TRACK LENGTH */}\n        <Divider />\n        <BooleanSetting\n          setting={Settings.LIMIT_PATHS}\n          primaryText=\"Limit Track Length\"\n          secondaryText=\"prevents map clutter\"\n        />\n        <NumberSetting\n          primaryText=\"Track Length\"\n          secondaryText=\"Valid: 1-999 min\"\n          setting={Settings.PATH_LENGTH}\n          disabled={!settingLimitPaths}\n          unit=\"min\"\n          min={1}\n          max={999}\n        />\n\n        {/* FRAMERATE */}\n        <Divider />\n        <BooleanSetting\n          setting={Settings.FPS_LIMIT}\n          primaryText=\"Limit Framerate\"\n          secondaryText=\"reduces energy consumption\"\n        />\n        <NumberSetting\n          primaryText=\"Framerate\"\n          secondaryText=\"Valid: 1-60 fps\"\n          setting={Settings.FPS_RATE}\n          disabled={!settingFpsLimit}\n          unit=\"fps\"\n          min={1}\n          max={60}\n        />\n\n        {/* GPS */}\n        <Divider />\n        <BooleanSetting\n          setting={Settings.GPS_ENABLED}\n          primaryText=\"Enable GPS\"\n          secondaryText=\"required for advanced features\"\n        />\n      </List>\n    </SubWindow>\n  );\n};\n\nexport default SettingsPage;\n","import React, { useState } from \"react\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Box,\n  Typography,\n  Toolbar,\n  useTheme\n} from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport SettingsPage from \"./SettingsPage/SettingsPage\";\n\nconst MainMenu = props => {\n  const theme = useTheme();\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  return (\n    <React.Fragment>\n      <SwipeableDrawer\n        disableSwipeToOpen\n        open={props.open}\n        onOpen={() => {}}\n        onClose={props.onClose}\n      >\n        <Toolbar\n          style={{\n            backgroundColor: theme.palette.primary.light,\n            minWidth: \"200px\"\n          }}\n          onClick={props.onClose}\n        >\n          <Box flexGrow={1} clone>\n            <Typography variant=\"h6\">Menu</Typography>\n          </Box>\n          <IconButton edge=\"end\" color=\"inherit\">\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n\n        <List>\n          <ListItem\n            button\n            onClick={() => {\n              props.onClose();\n              setSettingsOpen(true);\n            }}\n          >\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n      <SettingsPage\n        open={settingsOpen}\n        onClose={() => setSettingsOpen(false)}\n      ></SettingsPage>\n    </React.Fragment>\n  );\n};\n\nexport default MainMenu;\n","import React from \"react\";\nimport { useState } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ErrorIcon from \"@material-ui/icons/ErrorRounded\";\nimport SignalCellular4BarIcon from \"@material-ui/icons/SignalCellular4Bar\";\nimport SignalCellularConnectedNoInternet4BarIcon from \"@material-ui/icons/SignalCellularConnectedNoInternet4Bar\";\nimport SignalCellularNullIcon from \"@material-ui/icons/SignalCellularNull\";\n\nimport { useXContestConnectionState } from \"../location_provider/XContest/XContestInterface\";\nimport { ConnectionState } from \"../location_provider/XContest/XContestInterface\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport MainMenu from \"./MainMenu\";\nimport { pure } from \"recompose\";\n\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    padding: theme.spacing(1),\n    align: \"right\"\n  }\n}));\n\nconst LoadingBadge = props => {\n  return (\n    <Badge\n      //overlap=\"circle\"\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      }}\n      badgeContent={\n        <CircularProgress\n          disableShrink={props.disableShrink}\n          color=\"secondary\"\n          size={15}\n          thickness={10}\n        />\n      }\n    >\n      {props.children}\n    </Badge>\n  );\n};\n\nconst TitleBar = () => {\n  const classes = useStyles();\n  const connectionState = useXContestConnectionState();\n\n  const popoverActions = React.useRef();\n  const [connectionPopAnchor, setConnectionPopAnchor] = useState(null);\n\n  const [mainMenuOpen, setMainMenuOpen] = useState(false);\n\n  React.useLayoutEffect(() => {\n    if (popoverActions.current) {\n      popoverActions.current.updatePosition();\n    }\n  }, [connectionState, connectionPopAnchor]);\n\n  const renderConnectionIcon = () => {\n    switch (connectionState) {\n      case ConnectionState.ACTIVE:\n        return <SignalCellular4BarIcon />;\n      case ConnectionState.CONNECTING:\n        return (\n          <LoadingBadge>\n            <SignalCellularNullIcon />\n          </LoadingBadge>\n        );\n      case ConnectionState.ERROR:\n        return <ErrorIcon color=\"error\" />;\n      case ConnectionState.ESTABLISHED:\n        return (\n          <LoadingBadge disableShrink>\n            <SignalCellularNullIcon />\n          </LoadingBadge>\n        );\n      case ConnectionState.INACTIVE:\n        return <SignalCellularConnectedNoInternet4BarIcon />;\n      case ConnectionState.NO_CONNECTION:\n        return <SignalCellularNullIcon />;\n      default:\n        return <SignalCellularNullIcon />;\n    }\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => setMainMenuOpen(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Box marginLeft={2} flexGrow={1}>\n            <Typography variant=\"h6\">XC Live Viewer</Typography>\n          </Box>\n\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={event => setConnectionPopAnchor(event.currentTarget)}\n          >\n            {renderConnectionIcon()}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Popover\n        open={Boolean(connectionPopAnchor)}\n        anchorEl={connectionPopAnchor}\n        onClose={() => setConnectionPopAnchor(null)}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        action={popoverActions}\n      >\n        <Box className={classes.popover}>\n          <Typography>{connectionState}</Typography>\n        </Box>\n      </Popover>\n      <MainMenu\n        open={mainMenuOpen}\n        onClose={() => setMainMenuOpen(false)}\n      ></MainMenu>\n    </div>\n  );\n};\n\nexport default pure(TitleBar);\n","import { registerPersistentState } from \"./PersistentState\";\n\nconst TabID = registerPersistentState(\"global.tab_id\", 1);\nconst switchToMap = () => {\n  TabID.setValue(0);\n};\n\nexport default {\n  TabID,\n  switchToMap\n};\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  useMediaQuery,\n  useTheme\n} from \"@material-ui/core\";\n\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport MapIcon from \"@material-ui/icons/Map\";\n\nimport \"./MainPage.css\";\n\n// TODO import LazyLoading from \"./util/LazyLoading\";\n\nimport LiveMap from \"./pages/GoogleMapsPage/LiveMap\";\nimport Pilots from \"./pages/PilotList/Pilots\";\nimport TitleBar from \"./pages/TitleBar\";\n\nimport PageState from \"./common/PersistentState/PageState\";\n\nconst MainPage = () => {\n  const [tabId, setTabId] = PageState.TabID.use();\n  const [windowHeight, setWindowHeight] = React.useState(0);\n  const theme = useTheme();\n  const isSmartphone = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  // Workaround for mobile screens reporting an incorrect window height\n  const updateWindowHeight = () => {\n    setWindowHeight(window.innerHeight);\n  };\n  React.useLayoutEffect(() => {\n    updateWindowHeight();\n    window.addEventListener(\"resize\", updateWindowHeight);\n    return () => window.removeEventListener(\"resize\", updateWindowHeight);\n  }, []);\n\n  // Callbacks for changing the current page\n  const handleNavigationButton = (_event, newValue) => setTabId(newValue);\n\n  const content = isSmartphone ? (\n    <React.Fragment>\n      <Box flexGrow={1} clone display=\"flex\">\n        <SwipeableViews disabled index={tabId}>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            <LiveMap></LiveMap>\n          </Box>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            <Pilots></Pilots>\n          </Box>\n        </SwipeableViews>\n      </Box>\n      <Box zIndex={100} boxShadow={3}>\n        <BottomNavigation\n          value={tabId}\n          onChange={handleNavigationButton}\n          showLabels\n        >\n          <BottomNavigationAction label=\"Map\" icon={<MapIcon />} />\n          <BottomNavigationAction label=\"Pilots\" icon={<PeopleIcon />} />\n        </BottomNavigation>\n      </Box>\n    </React.Fragment>\n  ) : (\n    <Box width=\"100%\" flexGrow={1} display=\"flex\">\n      <Box flexGrow={1} height=\"100%\">\n        <LiveMap></LiveMap>\n      </Box>\n      <Box width=\"450px\" height=\"100%\" zIndex={50} boxShadow={3}>\n        <Pilots></Pilots>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <Box height={windowHeight} display=\"flex\" flexDirection=\"column\">\n      <Box zIndex={100}>\n        <TitleBar></TitleBar>\n      </Box>\n\n      {content}\n    </Box>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport MainPage from \"./MainPage\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport \"flag-icon-css/css/flag-icon.min.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Read the .env file\nrequire(\"dotenv\").config();\n\n// Render the page\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}