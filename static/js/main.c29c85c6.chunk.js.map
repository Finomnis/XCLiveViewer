{"version":3,"sources":["common/GoogleMapsApiLoader.js","pages/StatusPages.jsx","common/PersistentState/PersistentState.js","common/PersistentState/Settings.js","location_provider/XContest/XContestSocket.js","common/PersistentState/ChosenPilots.js","util/Interpolation.js","util/RunningDerivation.js","util/FindBisect.js","location_provider/XContest/FlightAnimationData.js","location_provider/XContest/FlightAnimation.js","util/HighPrecisionTimeSync.js","location_provider/XContest/XContestAnimation.js","util/EventfulState.js","location_provider/XContest/XContestInterface.js","pages/MapAnimator.js","pages/LiveMap.jsx","pages/PilotSelector.jsx","pages/AnimatedPilotList.jsx","pages/Pilots.jsx","util/NumberInput.jsx","pages/SettingsPage.jsx","pages/MainMenu.jsx","pages/TitleBar.jsx","MainPage.jsx","App.jsx","serviceWorker.jsx","index.js"],"names":["googleMapsApiPromise","useGoogleMapsApi","useState","ready","error","state","setState","useEffect","Promise","resolve","_reject","console","log","script","document","createElement","src","async","addEventListener","body","appendChild","then","success","window","google","useStyles","makeStyles","theme","progress","margin","spacing","LoadingPage","message","hideIf","subRef","classes","Box","width","height","display","alignItems","justifyContent","ref","textAlign","CircularProgress","className","Typography","ErrorPage","fontSize","color","PersistentState","key","initialValue","getValue","value","JSON","parse","localStorage","getItem","_notifyAll","callbacks","cb","registerCallback","includes","push","unregisterCallback","index","indexOf","splice","setValue","removeItem","setItem","stringify","use","newValue","this","registerPersistentState","name","Settings","PATH_LENGTH","LIMIT_PATHS","LOW_LATENCY","ANIMATION_DELAY","FPS_LIMIT","FPS_RATE","createSetting","settingsObjects","getSetting","XContestSocket","onStateChanged","onInfoMessage","onTracklogMessage","onFlightLanded","formatSubscribedFlights","setting_pathLength","setting_limitPath","startIsoDate","startDate","Date","now","setMilliseconds","toISOString","subscribedFlights","map","flight","flightUuid","start","refreshSubscribedFlights","sock","readyState","WebSocket","OPEN","connected","send","tag","contents","setSubscribedFlights","flights","onOpen","handleReset","debug","setConnectionState","ConnectionState","ESTABLISHED","area","lat","lon","onMessage","evt","ACTIVE","msg","data","clearTimeout","watchdog","setTimeout","INACTIVE","processMessage","onClose","NO_CONNECTION","connect","bind","onError","dispatchInfoMessage","dispatchTracklogMessage","dispatchFlightLandedMessage","warn","CONNECTING","onopen","onmessage","onclose","onerror","ERROR","alert","persistentChosenPilots","lerp","val1","val2","pct","RunningDerivation","smoothingFactor","derivation_func","a","b","invalid_func","computeDiff","isInvalid","old_val","old_t","running_avg","new_val","new_t","dt","deriv","weight","Math","pow","findBisect","targetValue","length","dataFn","minIndex","maxIndex","currentIndex","parseTime","isoStr","round","FlightAnimationData","at","timestamp","pos","t","findForwardSwipe","startPos","counter_gpsVario","counter_baroVarion","counter_velocity","end","getDistance","elem","lng","baroAlt","gpsAlt","gpsVario","update","baroVario","velocity","newElem","elevation","clear","append","newElements","oldElements","oldPos","newPos","oldEl","newEl","reset","FlightAnimationDataCache","currentArrayPos","mapsPath","DataGens","data1","data2","data0","data3","fallbackData","flightInfos","lastFix","FlightAnimation","updateInfos","infos","landed","flightInfoData","replace","track","flightInfoDataCache","updateData","data_start_time","liveData","isAfterLastElement","insert","liveDataCache","updateLanded","getInterpolatedData","cache","timeStamp","blendedData","endOfTrack","startOfTrack","takeData","blend","blendData","getFallbackData","updateAnimation","animationTimeMillis","lowLatencyMode","animationTimeSeconds","animationResult","HighPrecisionTimeSync","tolerance","get","currentHighPrecisionTime","currentTime","estimatedTime","offset","offBy","XContestAnimation","_lastUpdate","animationLoop","absTime","_setting_limitFps","_setting_fps","offsetTime","_setting_timeOffset","newAnimationData","Object","keys","_subscribedPilots","forEach","pilot","_pilotInfos","flightId","_flightAnimations","flightAnim","_setting_lowLatencyMode","_submitAnimationFrame","requestAnimationFrame","_currentAnimationData","_callbacks","setSubscribedPilots","subscribedPilots","_updateImportantFlights","pushNewInfo","pilotInfo","values","flightInfo","pushNewData","trackId","trackData","pushFlightLanded","useAnimatedData","importantFlights","filter","val","info","user","username","importantFlightSet","Set","toRemove","entries","as","bs","size","has","eqSet","_subscribedFlights","_setSubscribedFlightsCallback","_highPrecisionTimeSync","settings_timeOffset","settings_lowLatencyMode","settings_limitFps","settings_fps","Array","from","EventfulState","set","_callbackData","NO_INFORMATION","XContestInterface","socket","getPilotInfos","pilots","onConnectionStateChanged","connectionState","onInfoMessageReceived","overriden","animation","pilotInfos","onTracklogMessageReceived","trackChunk","onFlightLandedMessageReceived","_instance","getXContestInterface","MapAnimator","cleanupOldMarkers","markers","setMap","pilotData","maps","Marker","position","title","fullname","setPosition","LiveMap","mapReady","mapError","mapsRef","useRef","useLayoutEffect","Map","current","center","mapTypeId","zoom","maxZoom","disableDefaultUI","scaleControl","fullscreenControl","styles","mapStyle","mapAnimatorUpdateCallback","Fragment","columns","id","label","minWidth","render","row","component","variant","style","paddingLeft","align","nationality","iso","marginLeft","boxShadow","verticalAlign","toLowerCase","PilotSelector","props","useTheme","pilotList","selected","setSelected","search","setSearch","numSelected","closeWindow","fullScreen","useMediaQuery","breakpoints","down","matchesSearch","filteredPilots","userData","test","login","gender","Dialog","open","Toolbar","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","paddingRight","paddingTop","TextField","autoComplete","fullWidth","onChange","event","target","flex","marginY","overflowY","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","isItemSelected","isSelected","itemDisabled","alreadyAdded","wasAlreadyAdded","columnContent","onClick","_event","selectedIndex","newSelected","concat","slice","handleClick","DialogActions","Button","disabled","onAddPilots","AnimatedPilotList","animatedData","content","pilotId","pilotName","displayedName","pilotDebugOutput","animatedPilotData","toString","removePilots","Pilots","pilotSelectorOpen","setPilotSelectorOpen","chosenPilots","setChosenPilots","pilotIds","newPilotState","changed","useChosenPilots","addPilots","bottom","right","Fab","NumberInput","internalUpdate","min","max","hiddenLabel","InputProps","endAdornment","InputAdornment","unit","inputProps","resultState","Component","SettingsPage","resetAllSettingsDialogOpen","setResetAllSettingsDialogOpen","settingPathLength","setSettingPathLength","settingLimitPaths","setSettingLimitPaths","settingLowLatency","setSettingLowLatency","settingAnimationDelay","setSettingAnimationDelay","settingFpsLimit","setSettingFpsLimit","settingFpsRate","setSettingFpsRate","flipLimitPaths","flipLowLatency","flipFpsLimit","AppBar","IconButton","edge","flexGrow","DialogTitle","DialogContent","DialogContentText","settingsObj","autoFocus","List","ListItem","button","ListItemText","ListItemSecondaryAction","Switch","checked","Divider","MainMenu","settingsOpen","setSettingsOpen","SwipeableDrawer","disableSwipeToOpen","clone","ListItemIcon","popover","padding","LoadingBadge","Badge","anchorOrigin","vertical","horizontal","badgeContent","disableShrink","thickness","children","TitleBar","popoverActions","React","connectionPopAnchor","setConnectionPopAnchor","mainMenuOpen","setMainMenuOpen","updatePosition","currentTarget","renderConnectionIcon","Popover","Boolean","anchorEl","transformOrigin","action","MainPage","tabId","setTabId","windowHeight","setWindowHeight","updateWindowHeight","innerHeight","removeEventListener","flexDirection","zIndex","BottomNavigation","showLabels","BottomNavigationAction","icon","App","location","hostname","match","require","config","ReactDOM","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.c29c85c6.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\n// Hook\nlet googleMapsApiPromise = null;\nfunction useGoogleMapsApi() {\n  // Keeping track of script loaded and error state\n  const [state, setState] = useState({\n    ready: false,\n    error: false\n  });\n\n  useEffect(\n    () => {\n      if (googleMapsApiPromise === null) {\n        googleMapsApiPromise = new Promise((resolve, _reject) => {\n          console.log(\"Loading Google Maps API ...\");\n          // Create script\n          let script = document.createElement(\"script\");\n          script.src =\n            \"https://maps.googleapis.com/maps/api/js?key=\" +\n            process.env.REACT_APP_GAPI_KEY;\n          script.async = true;\n\n          script.addEventListener(\"load\", () => resolve(true));\n          script.addEventListener(\"error\", () => resolve(false));\n\n          // Add script to document body\n          document.body.appendChild(script);\n        });\n      }\n\n      googleMapsApiPromise.then(success => {\n        if (success) {\n          console.log(\"Google Maps API loaded.\");\n          setState({\n            ready: true,\n            error: false\n          });\n        } else {\n          console.log(\"Error: Cannot load Google Maps API.\");\n          setState({\n            ready: false,\n            error: true\n          });\n        }\n      });\n    },\n    [] // Don't re-run\n  );\n\n  return [state.ready, state.error, state.ready ? window.google : null];\n}\n\nexport default useGoogleMapsApi;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2)\n  }\n}));\n\nexport const LoadingPage = ({ message, hideIf, subRef }) => {\n  const classes = useStyles();\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      display={hideIf ? \"none\" : \"flex\"}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      ref={subRef}\n    >\n      <Box textAlign=\"center\">\n        <CircularProgress className={classes.progress} />\n        <Typography>{message}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport const ErrorPage = ({ message, hideIf }) => {\n  const classes = useStyles();\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      display={hideIf ? \"none\" : \"flex\"}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box textAlign=\"center\">\n        <ErrorIcon\n          fontSize=\"large\"\n          color=\"error\"\n          className={classes.progress}\n        />\n        <Typography color=\"error\">{message}</Typography>\n      </Box>\n    </Box>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nclass PersistentState {\n  constructor(key, initialValue) {\n    this.key = key;\n    this.initialValue = initialValue;\n    this.callbacks = [];\n  }\n\n  getValue = () => {\n    const value = JSON.parse(localStorage.getItem(this.key));\n    if (value === null) return this.initialValue;\n    return value;\n  };\n\n  _notifyAll = () => {\n    const value = this.getValue();\n    for (const cb of this.callbacks) {\n      cb(value);\n    }\n  };\n\n  registerCallback = cb => {\n    if (!this.callbacks.includes(cb)) this.callbacks.push(cb);\n  };\n\n  unregisterCallback = cb => {\n    const index = this.callbacks.indexOf(cb);\n    if (index >= 0) {\n      this.callbacks.splice(index, 1);\n    }\n  };\n\n  setValue = value => {\n    if (value == null) {\n      localStorage.removeItem(this.key);\n    } else {\n      localStorage.setItem(this.key, JSON.stringify(value));\n    }\n\n    this._notifyAll();\n  };\n\n  use = () => {\n    const [value, setValue] = useState(this.getValue);\n\n    useEffect(() => {\n      const cb = newValue => {\n        // trigger component update on change\n        setValue(newValue);\n      };\n\n      this.registerCallback(cb);\n      return () => this.unregisterCallback(cb);\n    }, []);\n\n    return [value, this.setValue];\n  };\n}\n\nexport const registerPersistentState = (name, initialValue) => {\n  return new PersistentState(name, initialValue);\n};\n","import { registerPersistentState } from \"./PersistentState\";\n\n// Keys\nexport const Settings = {\n  PATH_LENGTH: \"PATH_LENGTH\",\n  LIMIT_PATHS: \"LIMIT_PATHS\",\n  LOW_LATENCY: \"LOW_LATENCY\",\n  ANIMATION_DELAY: \"ANIMATION_DELAY\",\n  FPS_LIMIT: \"FPS_LIMIT\",\n  FPS_RATE: \"FPS_RATE\"\n};\n\n// Wrapper for simplification\nconst createSetting = (key, value) =>\n  registerPersistentState(\"SETTINGS_\" + key, value);\n\n// Settings objects\nconst settingsObjects = {\n  PATH_LENGTH: createSetting(Settings.PATH_LENGTH, 15),\n  LIMIT_PATHS: createSetting(Settings.LIMIT_PATHS, true),\n  LOW_LATENCY: createSetting(Settings.LOW_LATENCY, false),\n  ANIMATION_DELAY: createSetting(Settings.ANIMATION_DELAY, 80),\n  FPS_LIMIT: createSetting(Settings.FPS_LIMIT, true),\n  FPS_RATE: createSetting(Settings.FPS_RATE, 10)\n};\n\nexport const getSetting = key => settingsObjects[key];\n\nexport const resetAllSettings = () => {\n  Object.values(settingsObjects).forEach(settingsObj =>\n    settingsObj.setValue(null)\n  );\n};\n","import { ConnectionState } from \"./XContestInterface\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\n\nexport default class XContestSocket {\n  constructor(\n    onStateChanged,\n    onInfoMessage,\n    onTracklogMessage,\n    onFlightLanded\n  ) {\n    this.setConnectionState = onStateChanged;\n    this.dispatchInfoMessage = onInfoMessage;\n    this.dispatchTracklogMessage = onTracklogMessage;\n    this.dispatchFlightLandedMessage = onFlightLanded;\n    this.subscribedFlights = [];\n    this.connect();\n    this.connected = false;\n\n    // Register hooks, so we get notified when these settings change\n    getSetting(Settings.PATH_LENGTH).registerCallback(\n      this.refreshSubscribedFlights\n    );\n    getSetting(Settings.LIMIT_PATHS).registerCallback(\n      this.refreshSubscribedFlights\n    );\n  }\n\n  connect() {\n    if (\"WebSocket\" in window) {\n      this.connected = false;\n      this.setConnectionState(ConnectionState.CONNECTING);\n      this.sock = new WebSocket(\"wss://live.xcontest.org/websock/webclient\");\n      this.sock.onopen = this.onOpen;\n      this.sock.onmessage = this.onMessage;\n      this.sock.onclose = this.onClose;\n      this.sock.onerror = this.onError;\n    } else {\n      this.setConnectionState(ConnectionState.ERROR);\n      // The browser doesn't support WebSocket\n      alert(\"WebSocket NOT supported by your Browser!\");\n    }\n  }\n\n  formatSubscribedFlights = () => {\n    const setting_pathLength = getSetting(Settings.PATH_LENGTH).getValue();\n    const setting_limitPath = getSetting(Settings.LIMIT_PATHS).getValue();\n\n    let startIsoDate = null;\n    if (setting_limitPath) {\n      const startDate = new Date(Date.now() - 1000 * 60 * setting_pathLength);\n      startDate.setMilliseconds(0);\n      startIsoDate = startDate.toISOString();\n    }\n\n    const formattedFlights = this.subscribedFlights.map(flight => {\n      return { flightUuid: flight, start: startIsoDate };\n    });\n\n    return formattedFlights;\n  };\n\n  refreshSubscribedFlights = () => {\n    if (this.sock.readyState === WebSocket.OPEN && this.connected) {\n      this.sock.send(\n        JSON.stringify({\n          tag: \"WebFollow\",\n          contents: this.formatSubscribedFlights()\n        })\n      );\n    }\n  };\n\n  setSubscribedFlights = flights => {\n    this.subscribedFlights = flights;\n    this.refreshSubscribedFlights();\n  };\n\n  onOpen = () => {\n    this.handleReset();\n    console.debug(\"WebSocket: Open!\");\n    this.setConnectionState(ConnectionState.ESTABLISHED);\n    this.connected = true;\n\n    // Set area filter to the entire world\n    this.sock.send(\n      JSON.stringify({\n        tag: \"WebFilterArea\",\n        area: [{ lat: -90, lon: -180 }, { lat: 90, lon: 180 }]\n      })\n    );\n\n    // Use current 'fake' contest that is valid for the current alpha phase.\n    // Primarily sent to match the messages from their reverse engineered websocket\n    this.sock.send(\n      JSON.stringify({ tag: \"WebFilterContest\", contents: \"alpha9999\" })\n    );\n\n    // Tell the webserver which flights we want in more detail. TODO.\n    this.sock.send(\n      JSON.stringify({\n        tag: \"WebFollow\",\n        contents: this.formatSubscribedFlights()\n      })\n    );\n  };\n\n  onMessage = evt => {\n    console.debug(\"WebSocket: Message!\");\n    this.setConnectionState(ConnectionState.ACTIVE);\n\n    let msg = JSON.parse(evt.data);\n\n    // Expect the next message in 60 seconds. If not, change the status message.\n    clearTimeout(this.watchdog);\n    this.watchdog = setTimeout(() => {\n      this.setConnectionState(ConnectionState.INACTIVE);\n    }, 70000);\n\n    // Process the message\n    this.processMessage(msg);\n  };\n\n  onClose = evt => {\n    this.connected = false;\n    console.debug(\"WebSocket: Close!\");\n    this.setConnectionState(ConnectionState.NO_CONNECTION);\n    // websocket is closed.\n    setTimeout(this.connect.bind(this), 1000);\n  };\n\n  onError = evt => {\n    this.connected = false;\n    console.debug(\"WebSocket: Error!\");\n  };\n\n  // Message Processing\n  handleReset = () => {\n    console.log(\"TODO: handle reset!\");\n  };\n  processMessage = msg => {\n    if (!(\"tag\" in msg)) {\n      console.warn(\"Warning: Invalid message format!\", msg);\n      return;\n    }\n    switch (msg.tag) {\n      case \"LiveFlightInfos\":\n        this.dispatchInfoMessage(msg.contents);\n        break;\n      case \"LiveFlightChunk\":\n        this.dispatchTracklogMessage(msg);\n        break;\n      case \"LiveFlightLanded\":\n        this.dispatchFlightLandedMessage(msg.flightUuid);\n        break;\n      default:\n        console.warn(`Warning: Unknown message tag '${msg.tag}'!`, msg);\n    }\n  };\n}\n","import { registerPersistentState } from \"./PersistentState\";\n\nconst persistentChosenPilots = registerPersistentState(\"chosen-pilots\", {});\n\nexport const getChosenPilotsObject = () => persistentChosenPilots;\n\nexport function getChosenPilots() {\n  return persistentChosenPilots.getValue();\n}\n\nexport function useChosenPilots() {\n  const [chosenPilots, setChosenPilots] = persistentChosenPilots.use();\n\n  // Add new pilots\n  const addPilots = pilotIds => {\n    const newPilotState = { ...chosenPilots };\n\n    let changed = false;\n    for (const pilotId of pilotIds) {\n      if (!(pilotId in newPilotState)) {\n        newPilotState[pilotId] = null;\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      setChosenPilots(newPilotState);\n    }\n  };\n\n  // Remove pilots\n  const removePilots = pilotIds => {\n    const newPilotState = { ...chosenPilots };\n\n    let changed = false;\n    for (const pilotId of pilotIds) {\n      if (pilotId in newPilotState) {\n        delete newPilotState[pilotId];\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      setChosenPilots(newPilotState);\n    }\n  };\n\n  return [chosenPilots, addPilots, removePilots];\n}\n","export const lerp = (val1, val2, pct) => {\n  if (val2 === null) {\n    return val1;\n  }\n  if (val1 === null) {\n    return val2;\n  }\n  return (1.0 - pct) * val1 + pct * val2;\n};\n\n// TODO catmull-rom\n","export default class RunningDerivation {\n  constructor(\n    smoothingFactor,\n    derivation_func = (a, b) => b - a,\n    invalid_func = a => a === null\n  ) {\n    this.computeDiff = derivation_func;\n    this.isInvalid = invalid_func;\n    this.old_val = null;\n    this.old_t = null;\n    this.running_avg = null;\n    this.smoothingFactor = smoothingFactor;\n  }\n\n  update(new_val, new_t) {\n    if (\n      this.old_val === null ||\n      new_val === null ||\n      this.old_t === null ||\n      new_t === null ||\n      this.isInvalid(this.old_val) ||\n      this.isInvalid(new_val) ||\n      this.old_t === this.new_t\n    ) {\n      this.old_val = new_val;\n      this.old_t = new_t;\n      return null;\n    }\n\n    let dt = new_t - this.old_t;\n    let diff = this.computeDiff(this.old_val, new_val);\n    let deriv = diff / dt;\n\n    let weight = Math.pow(this.smoothingFactor, dt);\n    if (this.running_avg === null) {\n      this.running_avg = deriv;\n    } else {\n      this.running_avg = weight * this.running_avg + (1.0 - weight) * deriv;\n    }\n\n    this.old_val = new_val;\n    this.old_t = new_t;\n    return this.running_avg;\n  }\n\n  reset() {\n    this.old_val = null;\n    this.old_t = null;\n    this.running_avg = null;\n  }\n}\n","const findBisect = (targetValue, length, dataFn) => {\n  if (length < 1) return 0;\n\n  let minIndex = -1;\n  let maxIndex = length;\n  let currentIndex = 0;\n  let currentValue = null;\n\n  while (minIndex < maxIndex - 1) {\n    currentIndex = ((minIndex + maxIndex) / 2) | 0;\n    currentValue = dataFn(currentIndex);\n\n    if (currentValue < targetValue) {\n      minIndex = currentIndex;\n    } else {\n      maxIndex = currentIndex;\n    }\n  }\n\n  return maxIndex;\n};\n\nexport default findBisect;\n","import RunningDerivation from \"../../util/RunningDerivation\";\nimport { getDistance } from \"geolib\";\nimport findBisect from \"../../util/FindBisect\";\n\nexport const parseTime = isoStr => {\n  return Math.round(Date.parse(isoStr) / 1000);\n};\n\nexport default class FlightAnimationData {\n  constructor() {\n    this.data = [];\n    this.counter_gpsVario = new RunningDerivation(0.7);\n    this.counter_baroVarion = new RunningDerivation(0.7);\n    this.counter_velocity = new RunningDerivation(\n      0.7,\n      (start, end) => getDistance(start, end, 0.01),\n      () => false\n    );\n  }\n\n  at = index => this.data[index];\n\n  clear() {\n    // reset everything\n    this.data = [];\n    this.counter_gpsVario = new RunningDerivation(0.7);\n    this.counter_baroVarion = new RunningDerivation(0.7);\n    this.counter_velocity = new RunningDerivation(\n      0.7,\n      (start, end) => getDistance(start, end, 0.01),\n      () => false\n    );\n  }\n\n  get length() {\n    return this.data.length;\n  }\n\n  isAfterLastElement(timestamp) {\n    if (this.data.length <= 0) return true;\n    return this.data[this.data.length - 1].t < timestamp;\n  }\n\n  append(data) {\n    for (const elem of data) {\n      const timestamp = parseTime(elem.timestamp);\n      const pos = { lat: elem.lat, lng: elem.lon };\n\n      const baroAlt = elem.baroAlt === 0 ? null : elem.baroAlt;\n      const gpsAlt = elem.gpsAlt === 0 ? null : elem.gpsAlt;\n\n      // Compute new running average values\n      const gpsVario = this.counter_gpsVario.update(gpsAlt, timestamp);\n      const baroVario = this.counter_baroVarion.update(baroAlt, timestamp);\n      const velocity = this.counter_velocity.update(pos, timestamp);\n\n      const newElem = {\n        baroAlt: baroAlt,\n        gpsAlt: gpsAlt,\n        elevation: elem.elevation,\n        pos: pos,\n        gpsVario: gpsVario,\n        baroVario: baroVario,\n        velocity: velocity,\n        t: timestamp\n      };\n      this.data.push(newElem);\n    }\n  }\n\n  replace(data) {\n    this.clear();\n    this.append(data);\n  }\n\n  insert(data) {\n    const newElements = [];\n    for (const elem of data) {\n      const timestamp = parseTime(elem.timestamp);\n      const pos = { lat: elem.lat, lng: elem.lon };\n      const baroAlt = elem.baroAlt === 0 ? null : elem.baroAlt;\n      const gpsAlt = elem.gpsAlt === 0 ? null : elem.gpsAlt;\n\n      const newElem = {\n        baroAlt: baroAlt,\n        gpsAlt: gpsAlt,\n        elevation: elem.elevation,\n        pos: pos,\n        gpsVario: null,\n        baroVario: null,\n        velocity: null,\n        t: timestamp\n      };\n      newElements.push(newElem);\n    }\n\n    // Merge\n    const oldElements = this.data;\n    this.data = [];\n\n    let oldPos = 0;\n    let newPos = 0;\n\n    while (true) {\n      if (oldPos >= oldElements.length && newPos >= newElements.length) break;\n      else if (oldPos >= oldElements.length) {\n        this.data.push(newElements[newPos]);\n        newPos += 1;\n      } else if (newPos >= newElements.length) {\n        this.data.push(oldElements[oldPos]);\n        oldPos += 1;\n      } else {\n        const oldEl = oldElements[oldPos];\n        const newEl = newElements[newPos];\n\n        if (newEl.t < oldEl.t) {\n          this.data.push(newEl);\n          newPos += 1;\n        } else if (oldEl.t < newEl.t) {\n          this.data.push(oldEl);\n          oldPos += 1;\n        } else {\n          this.data.push(newEl);\n          oldPos += 1;\n          newPos += 1;\n        }\n      }\n    }\n\n    // Re-compute derivatives\n    this.counter_gpsVario.reset();\n    this.counter_baroVarion.reset();\n    this.counter_velocity.reset();\n    for (let elem of this.data) {\n      const gpsVario = this.counter_gpsVario.update(elem.gpsAlt, elem.t);\n      const baroVario = this.counter_baroVarion.update(elem.baroAlt, elem.t);\n      const velocity = this.counter_velocity.update(elem.pos, elem.t);\n\n      elem.gpsVario = gpsVario;\n      elem.baroVario = baroVario;\n      elem.velocity = velocity;\n    }\n  }\n\n  findBisect = timestamp => {\n    return findBisect(timestamp, this.data.length, pos => this.data[pos].t);\n  };\n\n  findForwardSwipe = (timestamp, startPos) => {\n    let pos = startPos;\n    while (pos < this.data.length && this.data[pos].t < timestamp) {\n      pos += 1;\n    }\n    return pos;\n  };\n}\n","import { lerp } from \"../../util/Interpolation\";\nimport FlightAnimationData, { parseTime } from \"./FlightAnimationData\";\n\nclass FlightAnimationDataCache {\n  constructor() {\n    this.currentArrayPos = null;\n    this.mapsPath = [];\n  }\n\n  reset = () => {\n    this.currentArrayPos = null;\n    this.mapsPath = [];\n  };\n}\n\nclass DataGens {\n  static fallbackData = flightInfos => {\n    return {\n      baroAlt: flightInfos.lastFix.baroAlt,\n      gpsAlt: flightInfos.lastFix.gpsAlt,\n      elevation: flightInfos.lastFix.elevation,\n      pos: {\n        lat: flightInfos.lastFix.lat,\n        lng: flightInfos.lastFix.lon\n      },\n      gpsVario: null,\n      baroVario: null,\n      velocity: null\n    };\n  };\n\n  static takeData(data) {\n    return {\n      baroAlt: data.baroAlt,\n      gpsAlt: data.gpsAlt,\n      elevation: data.elevation,\n      pos: {\n        lat: data.pos.lat,\n        lng: data.pos.lng\n      },\n      gpsVario: data.gpsVario,\n      baroVario: data.baroVario,\n      velocity: data.velocity\n    };\n  }\n\n  static blendData(data1, data2, pct) {\n    return {\n      baroAlt: lerp(data1.baroAlt, data2.baroAlt, pct),\n      gpsAlt: lerp(data1.gpsAlt, data2.gpsAlt, pct),\n      elevation: lerp(data1.elevation, data2.elevation, pct),\n      pos: {\n        lat: lerp(data1.pos.lat, data2.pos.lat, pct),\n        lng: lerp(data1.pos.lng, data2.pos.lng, pct)\n      },\n      gpsVario: lerp(data1.gpsVario, data2.gpsVario, pct),\n      baroVario: lerp(data1.baroVario, data2.baroVario, pct),\n      velocity: lerp(data1.velocity, data2.velocity, pct)\n    };\n  }\n\n  static blendDataSpline(data0, data1, data2, data3, pct) {\n    // TODO add catmull-rom spline interpolation\n    return null;\n  }\n}\n\nclass FlightAnimation {\n  constructor(flightInfos) {\n    // Live data\n    this.liveData = new FlightAnimationData();\n    this.liveDataCache = new FlightAnimationDataCache();\n\n    // Data from flight infos, used as fallback\n    this.flightInfos = null;\n    this.flightInfoData = new FlightAnimationData();\n    this.flightInfoDataCache = new FlightAnimationDataCache();\n\n    // 'landed' state\n    this.landed = flightInfos.landed;\n\n    // Set flight infos\n    this.updateInfos(flightInfos);\n  }\n\n  updateInfos = infos => {\n    this.landed |= infos.landed;\n    this.flightInfos = infos;\n    this.flightInfoData.replace(infos.track);\n    this.flightInfoDataCache.reset();\n  };\n\n  updateData = data => {\n    if (data.length < 1) return;\n\n    // Compute start time\n    const data_start_time = parseTime(data[0].timestamp);\n    if (this.liveData.isAfterLastElement(data_start_time)) {\n      // If the new data is newer than everything in the existing data, append\n      this.liveData.append(data);\n    } else {\n      // Otherwise, merge\n      this.liveData.insert(data);\n\n      // Reset animation\n      this.liveDataCache.reset();\n    }\n  };\n\n  updateLanded = () => {\n    console.log(\"Received flight landed message!\");\n    this.landed = true;\n  };\n\n  getInterpolatedData = (data, cache, timeStamp) => {\n    if (data.length < 1) return null;\n\n    if (cache.currentArrayPos === null) {\n      cache.currentArrayPos = data.findBisect(timeStamp);\n    } else {\n      // Optimization because we assume that time runs forward and the next value is after the current value\n      cache.currentArrayPos = data.findForwardSwipe(\n        timeStamp,\n        cache.currentArrayPos\n      );\n    }\n\n    // Compute\n    let blendedData = null;\n    let endOfTrack = false;\n    let startOfTrack = false;\n    if (cache.currentArrayPos <= 0) {\n      // If the timestamp is before our track, return first element\n      blendedData = DataGens.takeData(data.at(0));\n      startOfTrack = true;\n    } else if (cache.currentArrayPos >= data.length) {\n      // If the timestamp is after our track, return last element\n      blendedData = DataGens.takeData(data.at(data.length - 1));\n      endOfTrack = true;\n    } else {\n      // If it is in between, return interpolated value\n      const data0 = data.at(cache.currentArrayPos - 1);\n      const data1 = data.at(cache.currentArrayPos);\n      const blend = (timeStamp - data0.t) / (data1.t - data0.t);\n      blendedData = DataGens.blendData(data0, data1, blend);\n    }\n\n    return [blendedData, startOfTrack, endOfTrack];\n  };\n\n  getFallbackData = () => {\n    return [\n      DataGens.fallbackData(this.flightInfos),\n      false,\n      this.flightInfos.landed\n    ];\n  };\n\n  updateAnimation = (animationTimeMillis, lowLatencyMode) => {\n    const animationTimeSeconds = animationTimeMillis / 1000;\n\n    let animationResult = this.getInterpolatedData(\n      this.liveData,\n      this.liveDataCache,\n      animationTimeSeconds\n    );\n    if (!animationResult) {\n      animationResult = this.getInterpolatedData(\n        this.flightInfoData,\n        this.flightInfoDataCache,\n        animationTimeSeconds\n      );\n    }\n    if (!animationResult) {\n      animationResult = this.getFallbackData();\n    }\n\n    const [blendedData, startOfTrack, endOfTrack] = animationResult;\n\n    const result = {\n      ...blendedData,\n      startOfTrack: startOfTrack,\n      endOfTrack: endOfTrack,\n      landed: this.landed\n    };\n\n    return result;\n  };\n}\n\nexport default FlightAnimation;\n","class HighPrecisionTimeSync {\n  // Tolerance should be larger than the duration of one animation frame.\n  // Most animations are 60Hz, meaning 16ms, so 20ms is fine.\n  constructor(tolerance = 20) {\n    this.offset = 0.0;\n    this.tolerance = tolerance;\n  }\n\n  get = (currentHighPrecisionTime, currentTime) => {\n    let estimatedTime = currentHighPrecisionTime + this.offset;\n    const offBy = estimatedTime - currentTime;\n\n    if (offBy > this.tolerance || offBy < -this.tolerance) {\n      this.offset -= offBy;\n      estimatedTime = currentHighPrecisionTime + this.offset;\n    }\n\n    return estimatedTime;\n  };\n}\n\nexport default HighPrecisionTimeSync;\n","import {\n  getChosenPilots,\n  getChosenPilotsObject\n} from \"../../common/PersistentState/ChosenPilots\";\nimport { useState, useEffect } from \"react\";\nimport FlightAnimation from \"./FlightAnimation\";\nimport HighPrecisionTimeSync from \"../../util/HighPrecisionTimeSync\";\nimport { Settings, getSetting } from \"../../common/PersistentState/Settings\";\n\nfunction eqSet(as, bs) {\n  if (as.size !== bs.size) return false;\n  for (const a of as) if (!bs.has(a)) return false;\n  return true;\n}\n\nexport default class XContestAnimation {\n  constructor(setSubscribedFlights) {\n    this._currentAnimationData = {};\n    this._callbacks = [];\n    this._subscribedPilots = getChosenPilots();\n    this._subscribedFlights = new Set();\n    this._pilotInfos = {};\n    this._flightAnimations = {};\n    this._highPrecisionTimeSync = new HighPrecisionTimeSync();\n    const settings_timeOffset = getSetting(Settings.ANIMATION_DELAY);\n    const settings_lowLatencyMode = getSetting(Settings.LOW_LATENCY);\n    const settings_limitFps = getSetting(Settings.FPS_LIMIT);\n    const settings_fps = getSetting(Settings.FPS_RATE);\n\n    // Cached settings values for performance improvements. Not sure if actually worth\n    this._setting_timeOffset = settings_timeOffset.getValue();\n    this._setting_lowLatencyMode = settings_lowLatencyMode.getValue();\n    this._setting_limitFps = settings_limitFps.getValue();\n    this._setting_fps = settings_fps.getValue();\n    settings_timeOffset.registerCallback(value => {\n      this._setting_timeOffset = value;\n    });\n    settings_lowLatencyMode.registerCallback(value => {\n      this._setting_lowLatencyMode = value;\n    });\n    settings_limitFps.registerCallback(value => {\n      this._setting_limitFps = value;\n    });\n    settings_fps.registerCallback(value => {\n      this._setting_fps = value;\n    });\n\n    this._setSubscribedFlightsCallback = flights => {\n      this._subscribedFlights = flights;\n      setSubscribedFlights(Array.from(flights));\n    };\n    getChosenPilotsObject().registerCallback(this.setSubscribedPilots);\n    requestAnimationFrame(this.animationLoop);\n  }\n\n  // Animation loop\n  _lastUpdate = Date.now();\n  animationLoop = () => {\n    // Can't use time of function parameter, because we need absolute time\n    const absTime = Date.now();\n\n    if (\n      !this._setting_limitFps ||\n      absTime >= this._lastUpdate + 1000.0 / this._setting_fps\n    ) {\n      this._lastUpdate = absTime;\n\n      const offsetTime = absTime - 1000 * this._setting_timeOffset;\n      const newAnimationData = {};\n      Object.keys(this._subscribedPilots).forEach(pilot => {\n        if (pilot in this._pilotInfos) {\n          const flightId = this._pilotInfos[pilot].flightId;\n          if (flightId in this._flightAnimations) {\n            const flightAnim = this._flightAnimations[flightId];\n            newAnimationData[pilot] = flightAnim.updateAnimation(\n              offsetTime,\n              this._setting_lowLatencyMode\n            );\n          }\n        }\n      });\n      this._submitAnimationFrame(newAnimationData);\n    }\n    requestAnimationFrame(this.animationLoop);\n  };\n\n  _submitAnimationFrame = data => {\n    this._currentAnimationData = data;\n    for (const cb of this._callbacks) {\n      cb(data);\n    }\n  };\n\n  // External\n  setSubscribedPilots = subscribedPilots => {\n    this._subscribedPilots = subscribedPilots;\n    this._updateImportantFlights();\n  };\n\n  pushNewInfo = pilotInfo => {\n    console.log(\"newInfo: \", pilotInfo);\n    this._pilotInfos = pilotInfo;\n    this._updateImportantFlights();\n\n    // Update flight info in flightAnimations\n    Object.values(pilotInfo).forEach(flightInfo => {\n      const flightId = flightInfo.flightId;\n      if (flightId in this._flightAnimations) {\n        this._flightAnimations[flightId].updateInfos(flightInfo);\n      }\n    });\n  };\n\n  pushNewData = (trackId, trackData) => {\n    console.log(\"newTrackdata: \", trackId, trackData);\n    if (trackId in this._flightAnimations)\n      this._flightAnimations[trackId].updateData(trackData);\n  };\n\n  pushFlightLanded = flightId => {\n    if (flightId in this._flightAnimations)\n      this._flightAnimations[flightId].updateLanded();\n  };\n\n  // callback gets called every frame with new data\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n  };\n\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n  };\n\n  useAnimatedData = () => {\n    const [value, setValue] = useState(this._currentAnimationData);\n\n    useEffect(() => {\n      const cb = newValue => {\n        // trigger component update on change\n        setValue(newValue);\n      };\n\n      this.registerCallback(cb);\n      return () => this.unregisterCallback(cb);\n    }, []);\n\n    return value;\n  };\n\n  // Internal\n  _updateImportantFlights = () => {\n    // Filter important flights\n    let importantFlights = {};\n    Object.values(this._pilotInfos)\n      .filter(val => val.info.user.username in this._subscribedPilots)\n      .forEach(val => {\n        importantFlights[val.flightId] = val;\n      });\n\n    let importantFlightSet = new Set(Object.keys(importantFlights));\n\n    // Cleanup old entries of _flightAnimations\n    {\n      const toRemove = [];\n      for (const flightId in this._flightAnimations) {\n        if (!(flightId in importantFlights)) {\n          toRemove.push(flightId);\n        }\n      }\n      for (const flightId of toRemove) {\n        console.log(\"Removing flightAnimation of '\" + flightId + \"' ...\");\n        delete this._flightAnimations[flightId];\n      }\n    }\n\n    // Add new flightAnimations\n    Object.entries(importantFlights).forEach(([flightId, flightInfo]) => {\n      if (!(flightId in this._flightAnimations)) {\n        this._flightAnimations[flightId] = new FlightAnimation(flightInfo);\n      }\n    });\n\n    // Send subscription change to socket\n    if (!eqSet(importantFlightSet, this._subscribedFlights)) {\n      console.log(\n        \"Changing flight subscribtion: \",\n        this._subscribedFlights,\n        importantFlightSet\n      );\n      this._setSubscribedFlightsCallback(importantFlightSet);\n    }\n  };\n}\n","import { useState, useEffect } from \"react\";\n\nclass EventfulState {\n  constructor(initialValue) {\n    this._callbacks = [];\n    this._callbackData = initialValue;\n  }\n\n  set = value => {\n    this._callbackData = value;\n    for (const cb of this._callbacks) {\n      cb(value);\n    }\n  };\n\n  getValue = () => this._callbackData;\n\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n  };\n\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n  };\n\n  use = () => {\n    const [value, setValue] = useState(this._callbackData);\n\n    useEffect(() => {\n      // trigger component update on change\n      this.registerCallback(setValue);\n      return () => this.unregisterCallback(setValue);\n    }, []);\n\n    return value;\n  };\n}\n\nexport default EventfulState;\n","import XContestSocket from \"./XContestSocket\";\nimport XContestAnimation from \"./XContestAnimation\";\nimport EventfulState from \"../../util/EventfulState\";\n\nexport const ConnectionState = {\n  CONNECTING: \"connecting\", //orange\n  ERROR: \"error\", //red\n  ESTABLISHED: \"established\", //yellow\n  ACTIVE: \"active\", //green\n  INACTIVE: \"inactive\", //orange\n  NO_CONNECTION: \"no connection\", //red\n  NO_INFORMATION: \"no information\" //gray\n};\n\nclass XContestInterface {\n  constructor() {\n    this.pilots = [];\n    this.connectionState = new EventfulState(ConnectionState.NO_INFORMATION);\n    this.pilotInfos = new EventfulState([]);\n    this.socket = new XContestSocket(\n      this.onConnectionStateChanged,\n      this.onInfoMessageReceived,\n      this.onTracklogMessageReceived,\n      this.onFlightLandedMessageReceived\n    );\n    this.animation = new XContestAnimation(this.setSubscribedFlights);\n  }\n\n  setSubscribedFlights = flights => {\n    this.socket.setSubscribedFlights(flights);\n  };\n\n  getPilotInfos = () => this.pilots;\n\n  onConnectionStateChanged = state => {\n    this.connectionState.set(state);\n  };\n\n  onInfoMessageReceived = msg => {\n    this.pilots = {};\n    for (const [trackId, track] of msg) {\n      // Skip if we have a newer track of the same person\n      if (track.overriden) continue;\n\n      track.flightId = trackId;\n\n      this.pilots[track.info.user.username] = track;\n    }\n    this.animation.pushNewInfo(this.pilots);\n    this.pilotInfos.set(this.pilots);\n  };\n\n  onTracklogMessageReceived = msg => {\n    this.animation.pushNewData(msg.flightUuid, msg.trackChunk);\n  };\n\n  onFlightLandedMessageReceived = flightId => {\n    this.animation.pushFlightLanded(flightId);\n  };\n}\n\n// Singleton stuff\nlet _instance = null;\nexport const getXContestInterface = () => {\n  if (!_instance) {\n    _instance = new XContestInterface();\n  }\n  return _instance;\n};\n\nexport const useXContestPilots = () => getXContestInterface().pilotInfos.use();\nexport const useXContestConnectionState = () =>\n  getXContestInterface().connectionState.use();\n","import { getXContestInterface } from \"../location_provider/XContest/XContestInterface\";\n\nexport default class MapAnimator {\n  constructor(map, google) {\n    this.map = map;\n    this.google = google;\n    this.markers = {};\n  }\n\n  cleanupOldMarkers = data => {\n    const toRemove = [];\n    for (const pilot in this.markers) {\n      if (!(pilot in data)) {\n        toRemove.push(pilot);\n      }\n    }\n    for (const pilot of toRemove) {\n      this.markers[pilot].setMap(null);\n      delete this.markers[pilot];\n    }\n  };\n\n  update = data => {\n    const pilotInfos = getXContestInterface().getPilotInfos();\n\n    // Remove markers that we unsubscribed from\n    this.cleanupOldMarkers(data);\n\n    Object.entries(data).forEach(([pilot, pilotData]) => {\n      if (!(pilot in pilotInfos)) return;\n      const info = pilotInfos[pilot];\n\n      const pos = { lat: pilotData.pos.lat, lng: pilotData.pos.lng };\n\n      // Add marker if it doesn't exist\n      if (!(pilot in this.markers)) {\n        this.markers[pilot] = new this.google.maps.Marker({\n          map: this.map,\n          position: pos,\n          title: info.info.user.fullname\n        });\n      }\n\n      // Update all marker properties\n      const marker = this.markers[pilot];\n      marker.setPosition(pos);\n    });\n    //console.log(data);\n  };\n}\n","import React, { useState, useRef, useLayoutEffect, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport useGoogleMapsApi from \"../common/GoogleMapsApiLoader\";\nimport { LoadingPage, ErrorPage } from \"./StatusPages\";\nimport mapStyle from \"./MapStyle.json\";\nimport { getXContestInterface } from \"../location_provider/XContest/XContestInterface\";\nimport MapAnimator from \"./MapAnimator\";\n\nconst LiveMap = () => {\n  const [mapReady, mapError, google] = useGoogleMapsApi();\n  const mapsRef = useRef();\n  const [map, setMap] = useState(null);\n\n  // Initialize Map\n  useLayoutEffect(() => {\n    if (mapReady && !map) {\n      setMap(\n        new google.maps.Map(mapsRef.current, {\n          center: { lat: 46.509012, lng: 11.827984 },\n          mapTypeId: \"terrain\",\n          zoom: 12,\n          maxZoom: 15,\n          disableDefaultUI: true,\n          scaleControl: true,\n          fullscreenControl: true,\n          styles: mapStyle\n        })\n      );\n    }\n  }, [mapReady, map, google, mapsRef]);\n\n  // Register map for updates\n  useEffect(() => {\n    if (map && google) {\n      const mapAnimator = new MapAnimator(map, google);\n      const mapAnimatorUpdateCallback = mapAnimator.update;\n      getXContestInterface().animation.registerCallback(\n        mapAnimatorUpdateCallback\n      );\n\n      return () => {\n        getXContestInterface().animation.unregisterCallback(\n          mapAnimatorUpdateCallback\n        );\n      };\n    }\n  }, [map, google]);\n\n  return (\n    <React.Fragment>\n      <Box\n        width=\"100%\"\n        height=\"100%\"\n        display={mapReady ? \"block\" : \"none\"}\n        ref={mapsRef}\n      ></Box>\n      <LoadingPage\n        message=\"Loading Maps ...\"\n        hideIf={mapReady || mapError}\n      ></LoadingPage>\n      <ErrorPage message=\"Unable to load map!\" hideIf={!mapError}></ErrorPage>\n    </React.Fragment>\n  );\n};\n\nexport default LiveMap;\n","import React from \"react\";\nimport {\n  Box,\n  useMediaQuery,\n  useTheme,\n  Typography,\n  Toolbar\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nimport { lighten } from \"@material-ui/core/styles\";\nimport { Button, Dialog, DialogActions, TextField } from \"@material-ui/core\";\n\nimport {\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell\n} from \"@material-ui/core\";\n\nimport { useXContestPilots } from \"../location_provider/XContest/XContestInterface\";\n\nconst columns = [\n  {\n    id: \"name\",\n    label: \"Name\",\n    minWidth: 0,\n    render: row => {\n      return (\n        <React.Fragment>\n          {row.user.fullname}\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            color=\"textSecondary\"\n            style={{ paddingLeft: \".3em\" }}\n          >\n            [{row.user.username}]\n          </Typography>\n        </React.Fragment>\n      );\n    }\n  },\n  {\n    id: \"country\",\n    label: \"Country\",\n    minWidth: \"4em\",\n    align: \"right\",\n    render: row => {\n      return (\n        <React.Fragment>\n          {row.user.nationality.iso}\n          <Box\n            fontSize=\"large\"\n            marginLeft=\"4px\"\n            boxShadow={1}\n            style={{ verticalAlign: \"middle\" }}\n            className={\n              \"flag-icon flag-icon-\" + row.user.nationality.iso.toLowerCase()\n            }\n          ></Box>\n        </React.Fragment>\n      );\n    }\n  }\n];\n\nfunction createPlaceholderPilot(name) {\n  return {\n    info: {\n      user: {\n        login: null,\n        username: name,\n        fullname: \"Offline User\",\n        gender: \"-\",\n        nationality: { iso: \"--\", name: \"--\" }\n      },\n      flightId: null\n    }\n  };\n}\n\nconst PilotSelector = props => {\n  const theme = useTheme();\n  const pilotList = useXContestPilots();\n\n  // State\n  const [selected, setSelected] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const numSelected = selected.length;\n\n  const closeWindow = () => {\n    // Reset state\n    setSearch(\"\");\n    setSelected([]);\n    props.onClose();\n  };\n\n  const handleClick = (_event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n  const wasAlreadyAdded = name => props.alreadyAdded.indexOf(name) !== -1;\n  const matchesSearch = name => {\n    if (search === \"\") {\n      return true;\n    }\n    return name.toLowerCase().includes(search.toLowerCase());\n  };\n\n  // Create virtual pilot if nobody found\n  let filteredPilots = Object.values(pilotList).filter(userData => {\n    return (\n      matchesSearch(userData.info.user.username) ||\n      matchesSearch(userData.info.user.fullname)\n    );\n  });\n\n  // Add dummy pilot if list is empty and search string is valid\n  if (filteredPilots.length === 0 && !/\\s/.test(search) && search.length > 0) {\n    filteredPilots.push(createPlaceholderPilot(search));\n  }\n\n  return (\n    <Dialog open={props.open} onClose={closeWindow} fullScreen={fullScreen}>\n      <Toolbar\n        style={\n          numSelected === 0\n            ? {}\n            : theme.palette.type === \"light\"\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark\n              }\n        }\n      >\n        {numSelected > 0 ? (\n          <Typography component=\"div\" color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography component=\"div\" variant=\"h6\" id=\"tableTitle\">\n            Add new pilots:\n          </Typography>\n        )}\n      </Toolbar>\n      <Box paddingLeft=\"1em\" paddingRight=\"1em\" paddingTop=\"4px\">\n        <TextField\n          //autoFocus\n          margin=\"dense\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n          id=\"search_field\"\n          label=\"Search\"\n          type=\"search\"\n          fullWidth\n          onChange={event => setSearch(event.target.value)}\n        />\n      </Box>\n      <Box flex=\"1 1 auto\" marginY=\"8px\" style={{ overflowY: \"auto\" }}>\n        <Table stickyHeader size=\"small\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                  component=\"th\"\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredPilots.map(row => {\n              const username = row.info.user.username;\n\n              const isItemSelected = isSelected(username);\n\n              const itemDisabled = wasAlreadyAdded(username);\n              const style = itemDisabled\n                ? { filter: \"grayscale(100%) opacity(30%)\" }\n                : {};\n\n              const columnContent = columns.map(column => {\n                return (\n                  <TableCell key={column.id} align={column.align}>\n                    <Box style={style}>{column.render(row.info)}</Box>\n                  </TableCell>\n                );\n              });\n\n              if (itemDisabled) {\n                return <TableRow key={username}>{columnContent}</TableRow>;\n              }\n\n              return (\n                <TableRow\n                  key={username}\n                  selected={isItemSelected}\n                  onClick={event => handleClick(event, username)}\n                >\n                  {columnContent}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Box>\n      <DialogActions>\n        <Button onClick={closeWindow} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          disabled={numSelected === 0}\n          onClick={() => {\n            props.onAddPilots(selected);\n            closeWindow();\n          }}\n          color=\"primary\"\n        >\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default PilotSelector;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { getXContestInterface } from \"../location_provider/XContest/XContestInterface\";\n\nconst AnimatedPilotList = props => {\n  const animatedData = getXContestInterface().animation.useAnimatedData();\n\n  const content = Object.entries(props.pilots).map(([pilotId, pilotName]) => {\n    let displayedName = pilotName;\n    if (pilotName === null) {\n      displayedName = pilotId;\n    }\n\n    let pilotDebugOutput = [];\n    if (pilotId in animatedData) {\n      const animatedPilotData = animatedData[pilotId];\n\n      for (const key in animatedPilotData) {\n        pilotDebugOutput.push(\n          <tr key={key}>\n            <td>{key}</td>\n            <td>\n              {(Math.round(100 * animatedPilotData[key]) / 100).toString()}\n            </td>\n          </tr>\n        );\n      }\n    }\n\n    return (\n      <Box\n        margin=\"10px\"\n        key={pilotId}\n        onClick={() => props.removePilots([pilotId])}\n      >\n        {displayedName}\n        <table>\n          <tbody>{pilotDebugOutput}</tbody>\n        </table>\n      </Box>\n    );\n  });\n\n  // console.log(\"Data:\", animatedData);\n  return (\n    <Box height=\"100%\" style={{ overflowY: \"auto\" }}>\n      {content}\n    </Box>\n  );\n};\n\nexport default AnimatedPilotList;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Fab } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Box from \"@material-ui/core/Box\";\nimport PilotSelector from \"./PilotSelector\";\nimport { useChosenPilots } from \"../common/PersistentState/ChosenPilots\";\nimport AnimatedPilotList from \"./AnimatedPilotList\";\n\nconst Pilots = () => {\n  const theme = useTheme();\n  const [pilotSelectorOpen, setPilotSelectorOpen] = useState(false);\n\n  const [pilots, addPilots, removePilots] = useChosenPilots();\n\n  // TODO sort pilots\n\n  return (\n    <React.Fragment>\n      <AnimatedPilotList\n        pilots={pilots}\n        removePilots={removePilots}\n      ></AnimatedPilotList>\n\n      <Box\n        position=\"absolute\"\n        bottom={theme.spacing(2)}\n        right={theme.spacing(2)}\n      >\n        <Fab\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => setPilotSelectorOpen(true)}\n        >\n          <AddIcon />\n        </Fab>\n      </Box>\n      <PilotSelector\n        open={pilotSelectorOpen}\n        onClose={() => setPilotSelectorOpen(false)}\n        onAddPilots={addPilots}\n        alreadyAdded={Object.keys(pilots)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Pilots;\n","import React, { Component } from \"react\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\n\nexport default class NumberInput extends Component {\n  state = {\n    internalUpdate: false,\n    value: null\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const resultState = { ...state, internalUpdate: false };\n\n    // Overwrite with external value if we got an update from the parent element\n    if (!state.internalUpdate) {\n      resultState.value = props.value;\n    }\n\n    return resultState;\n  }\n\n  render() {\n    console.log(localStorage);\n    return (\n      <TextField\n        onChange={event => {\n          const value = event.target.value;\n          // If the value is too small, send the smallest possible value to the parent,\n          // but keep the incorrect value in the text field.\n          // If the value is too large, send the largest possible value to the parent,\n          // and also set the text field to the largest possible value.\n          // Otherwise, just update.\n\n          if (value < this.props.min) {\n            // If those two messages get delivered out of order, this entire trick will stop working.\n            // But I think setting states will never be done in an incorrect order, that would really break things.\n            this.props.onChange(this.props.min);\n            this.setState({\n              ...this.state,\n              internalUpdate: true,\n              value: value\n            });\n          } else if (value > this.props.max) {\n            this.props.onChange(this.props.max);\n          } else {\n            this.props.onChange(value);\n          }\n        }}\n        variant=\"outlined\"\n        disabled={this.props.disabled}\n        margin=\"dense\"\n        hiddenLabel\n        type=\"number\"\n        value={this.state.value}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">{this.props.unit}</InputAdornment>\n          )\n        }}\n        inputProps={{\n          min: this.props.min,\n          max: this.props.max\n        }}\n      />\n    );\n  }\n}\n","import React, { useState } from \"react\";\n\nimport {\n  Dialog,\n  AppBar,\n  Toolbar,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  IconButton,\n  Box,\n  Switch,\n  ListItemSecondaryAction,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n  Button\n} from \"@material-ui/core\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport {\n  getSetting,\n  Settings,\n  resetAllSettings\n} from \"../common/PersistentState/Settings\";\nimport NumberInput from \"../util/NumberInput\";\n\nconst SettingsPage = props => {\n  const [resetAllSettingsDialogOpen, setResetAllSettingsDialogOpen] = useState(\n    false\n  );\n\n  // Retreive the settings we want to change\n  const [settingPathLength, setSettingPathLength] = getSetting(\n    Settings.PATH_LENGTH\n  ).use();\n  const [settingLimitPaths, setSettingLimitPaths] = getSetting(\n    Settings.LIMIT_PATHS\n  ).use();\n  const [settingLowLatency, setSettingLowLatency] = getSetting(\n    Settings.LOW_LATENCY\n  ).use();\n  const [settingAnimationDelay, setSettingAnimationDelay] = getSetting(\n    Settings.ANIMATION_DELAY\n  ).use();\n  const [settingFpsLimit, setSettingFpsLimit] = getSetting(\n    Settings.FPS_LIMIT\n  ).use();\n  const [settingFpsRate, setSettingFpsRate] = getSetting(\n    Settings.FPS_RATE\n  ).use();\n\n  const flipLimitPaths = () => setSettingLimitPaths(!settingLimitPaths);\n  const flipLowLatency = () => setSettingLowLatency(!settingLowLatency);\n  const flipFpsLimit = () => setSettingFpsLimit(!settingFpsLimit);\n\n  return (\n    <Dialog fullScreen open={props.open} onClose={props.onClose}>\n      {/* THE TITLE BAR */}\n      <AppBar style={{ position: \"static\" }}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={props.onClose}>\n            <ArrowBackIcon />\n          </IconButton>\n\n          <Box marginLeft={2} flexGrow={1}>\n            <Typography variant=\"h6\">Settings</Typography>\n          </Box>\n\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={() => setResetAllSettingsDialogOpen(true)}\n          >\n            <UndoIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      {/* RESET ALL SETTINGS DIALOG */}\n      <Dialog\n        open={resetAllSettingsDialogOpen}\n        onClose={() => setResetAllSettingsDialogOpen(false)}\n      >\n        <DialogTitle>{\"Reset all settings?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This sets all settings to their default values.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              resetAllSettings();\n              setResetAllSettingsDialogOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Yes\n          </Button>\n          <Button\n            onClick={() => setResetAllSettingsDialogOpen(false)}\n            color=\"primary\"\n            autoFocus\n          >\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* THE ACTUAL OPTIONS */}\n      <List>\n        {/* FRAMERATE */}\n        <ListItem button onClick={flipFpsLimit}>\n          <ListItemText\n            primary=\"Limit Framerate\"\n            secondary=\"reduces energy consumption\"\n          />\n          <ListItemSecondaryAction>\n            <Switch\n              edge=\"end\"\n              onChange={flipFpsLimit}\n              checked={settingFpsLimit}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem disabled={!settingFpsLimit}>\n          <ListItemText primary=\"Framerate\" secondary=\"Valid: 1-60 fps\" />\n          <ListItemSecondaryAction>\n            <NumberInput\n              value={settingFpsRate}\n              onChange={setSettingFpsRate}\n              disabled={!settingFpsLimit}\n              unit=\"fps\"\n              min={1}\n              max={60}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n\n        {/* TRACK LENGTH */}\n        <ListItem button onClick={flipLimitPaths}>\n          <ListItemText\n            primary=\"Limit Track Length\"\n            secondary=\"reduces data consumption\"\n          />\n          <ListItemSecondaryAction>\n            <Switch\n              edge=\"end\"\n              onChange={flipLimitPaths}\n              checked={settingLimitPaths}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem disabled={!settingLimitPaths}>\n          <ListItemText primary=\"Track Length\" secondary=\"Valid: 1-999 min\" />\n          <ListItemSecondaryAction>\n            <NumberInput\n              disabled={!settingLimitPaths}\n              value={settingPathLength}\n              onChange={setSettingPathLength}\n              unit=\"min\"\n              min={1}\n              max={999}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n\n        {/* ANIMATION DELAY */}\n        <ListItem button onClick={flipLowLatency}>\n          <ListItemText\n            primary=\"Low Latency Mode\"\n            secondary=\"disables animations\"\n          />\n          <ListItemSecondaryAction>\n            <Switch\n              edge=\"end\"\n              onChange={flipLowLatency}\n              checked={settingLowLatency}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem disabled={settingLowLatency}>\n          <ListItemText\n            primary=\"Animation Delay\"\n            secondary=\"70-120 sec (default: 80)\"\n          />\n          <ListItemSecondaryAction>\n            <NumberInput\n              disabled={settingLowLatency}\n              value={settingAnimationDelay}\n              onChange={setSettingAnimationDelay}\n              unit=\"sec\"\n              min={70}\n              max={120}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n};\n\nexport default SettingsPage;\n","import React, { useState } from \"react\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Box,\n  Typography,\n  Toolbar,\n  useTheme\n} from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport SettingsPage from \"./SettingsPage\";\n\nconst MainMenu = props => {\n  const theme = useTheme();\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  return (\n    <React.Fragment>\n      <SwipeableDrawer\n        disableSwipeToOpen\n        open={props.open}\n        onOpen={() => {}}\n        onClose={props.onClose}\n      >\n        <Toolbar\n          style={{\n            backgroundColor: theme.palette.primary.light,\n            minWidth: \"200px\"\n          }}\n          onClick={props.onClose}\n        >\n          <Box flexGrow={1} clone>\n            <Typography variant=\"h6\">Menu</Typography>\n          </Box>\n          <IconButton edge=\"end\" color=\"inherit\">\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n\n        <List>\n          <ListItem\n            button\n            onClick={() => {\n              props.onClose();\n              setSettingsOpen(true);\n            }}\n          >\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n      <SettingsPage\n        open={settingsOpen}\n        onClose={() => setSettingsOpen(false)}\n      ></SettingsPage>\n    </React.Fragment>\n  );\n};\n\nexport default MainMenu;\n","import React from \"react\";\nimport { useState } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ErrorIcon from \"@material-ui/icons/ErrorRounded\";\nimport SignalCellular4BarIcon from \"@material-ui/icons/SignalCellular4Bar\";\nimport SignalCellularConnectedNoInternet4BarIcon from \"@material-ui/icons/SignalCellularConnectedNoInternet4Bar\";\nimport SignalCellularNullIcon from \"@material-ui/icons/SignalCellularNull\";\n\nimport { useXContestConnectionState } from \"../location_provider/XContest/XContestInterface\";\nimport { ConnectionState } from \"../location_provider/XContest/XContestInterface\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport MainMenu from \"./MainMenu\";\n\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    padding: theme.spacing(1),\n    align: \"right\"\n  }\n}));\n\nconst LoadingBadge = props => {\n  return (\n    <Badge\n      //overlap=\"circle\"\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      }}\n      badgeContent={\n        <CircularProgress\n          disableShrink={props.disableShrink}\n          color=\"secondary\"\n          size={15}\n          thickness={10}\n        />\n      }\n    >\n      {props.children}\n    </Badge>\n  );\n};\n\nconst TitleBar = () => {\n  const classes = useStyles();\n  const connectionState = useXContestConnectionState();\n\n  const popoverActions = React.useRef();\n  const [connectionPopAnchor, setConnectionPopAnchor] = useState(null);\n\n  const [mainMenuOpen, setMainMenuOpen] = useState(false);\n\n  React.useLayoutEffect(() => {\n    if (popoverActions.current) {\n      popoverActions.current.updatePosition();\n    }\n  }, [connectionState, connectionPopAnchor]);\n\n  const renderConnectionIcon = () => {\n    switch (connectionState) {\n      case ConnectionState.ACTIVE:\n        return <SignalCellular4BarIcon />;\n      case ConnectionState.CONNECTING:\n        return (\n          <LoadingBadge>\n            <SignalCellularNullIcon />\n          </LoadingBadge>\n        );\n      case ConnectionState.ERROR:\n        return <ErrorIcon color=\"error\" />;\n      case ConnectionState.ESTABLISHED:\n        return (\n          <LoadingBadge disableShrink>\n            <SignalCellularNullIcon />\n          </LoadingBadge>\n        );\n      case ConnectionState.INACTIVE:\n        return <SignalCellularConnectedNoInternet4BarIcon />;\n      case ConnectionState.NO_CONNECTION:\n        return <SignalCellularNullIcon />;\n      default:\n        return <SignalCellularNullIcon />;\n    }\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => setMainMenuOpen(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Box marginLeft={2} flexGrow={1}>\n            <Typography variant=\"h6\">XC Live Viewer</Typography>\n          </Box>\n\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={event => setConnectionPopAnchor(event.currentTarget)}\n          >\n            {renderConnectionIcon()}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Popover\n        open={Boolean(connectionPopAnchor)}\n        anchorEl={connectionPopAnchor}\n        onClose={() => setConnectionPopAnchor(null)}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        action={popoverActions}\n      >\n        <Box className={classes.popover}>\n          <Typography>{connectionState}</Typography>\n        </Box>\n      </Popover>\n      <MainMenu\n        open={mainMenuOpen}\n        onClose={() => setMainMenuOpen(false)}\n      ></MainMenu>\n    </div>\n  );\n};\n\nexport default TitleBar;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\n\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport MapIcon from \"@material-ui/icons/Map\";\n\nimport \"./MainPage.css\";\n\n// TODO import LazyLoading from \"./util/LazyLoading\";\n\nimport LiveMap from \"./pages/LiveMap\";\nimport Pilots from \"./pages/Pilots\";\nimport TitleBar from \"./pages/TitleBar\";\n\nconst MainPage = () => {\n  const [tabId, setTabId] = React.useState(1);\n  const [windowHeight, setWindowHeight] = React.useState(0);\n\n  // Workaround for mobile screens reporting an incorrect window height\n  const updateWindowHeight = () => {\n    setWindowHeight(window.innerHeight);\n  };\n  React.useLayoutEffect(() => {\n    updateWindowHeight();\n    window.addEventListener(\"resize\", updateWindowHeight);\n    return () => window.removeEventListener(\"resize\", updateWindowHeight);\n  }, []);\n\n  // Callbacks for changing the current page\n  const handleNavigationButton = (_event, newValue) => setTabId(newValue);\n\n  return (\n    <Box height={windowHeight} display=\"flex\" flexDirection=\"column\">\n      <Box zIndex={100}>\n        <TitleBar></TitleBar>\n      </Box>\n      <Box flexGrow={1} clone>\n        <SwipeableViews disabled index={tabId}>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            <LiveMap></LiveMap>\n          </Box>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            <Pilots></Pilots>\n          </Box>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            Item Three\n          </Box>\n        </SwipeableViews>\n      </Box>\n      <Box zIndex={100} boxShadow={3}>\n        <BottomNavigation\n          value={tabId}\n          onChange={handleNavigationButton}\n          showLabels\n        >\n          <BottomNavigationAction label=\"Map\" icon={<MapIcon />} />\n          <BottomNavigationAction label=\"Pilots\" icon={<PeopleIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport MainPage from \"./MainPage\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport \"flag-icon-css/css/flag-icon.min.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Read the .env file\nrequire(\"dotenv\").config();\n\n// Render the page\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}