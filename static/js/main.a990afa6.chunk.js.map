{"version":3,"sources":["common/GoogleMapsApiLoader.js","pages/StatusPages.jsx","util/EventToReactState.js","common/PersistentState/PersistentState.js","common/PersistentState/Settings.js","location_provider/XContest/XContestSocket.js","common/PersistentState/ChosenPilots.js","util/RunningDerivation.js","util/FindBisect.js","util/Interpolation.js","location_provider/XContest/FlightAnimation.js","util/HighPrecisionTimeSync.js","location_provider/XContest/XContestAnimation.js","location_provider/XContest/XContestInterface.js","pages/MapAnimator.js","pages/LiveMap.jsx","pages/PilotSelector.jsx","pages/AnimatedPilotList.jsx","pages/Pilots.jsx","pages/TitleBar.jsx","MainPage.jsx","App.jsx","serviceWorker.jsx","index.js"],"names":["googleMapsApiPromise","useGoogleMapsApi","useState","ready","error","state","setState","useEffect","Promise","resolve","_reject","console","log","script","document","createElement","src","async","addEventListener","body","appendChild","then","success","window","google","useStyles","makeStyles","theme","progress","margin","spacing","LoadingPage","message","hideIf","subRef","classes","Box","width","height","display","alignItems","justifyContent","ref","textAlign","CircularProgress","className","Typography","ErrorPage","fontSize","color","mapEventToState","eventTarget","messageName","initialState","innerState","setInnerState","eventTargetObj","Function","onEvent","data","addListener","removeListener","PersistentState","key","initialValue","getValue","value","JSON","parse","localStorage","getItem","_notifyAll","callbacks","cb","registerCallback","includes","push","unregisterCallback","index","indexOf","splice","setValue","removeItem","setItem","stringify","use","newValue","this","registerPersistentState","name","Settings","PATH_LENGTH","FULL_PATHS","LOW_LATENCY","ANIMATION_DELAY","createSetting","settingsObjects","getSetting","XContestSocket","onStateChanged","onInfoMessage","onTracklogMessage","formatSubscribedFlights","setting_pathLength","setting_fullPath","startIsoDate","startDate","Date","now","setMilliseconds","toISOString","subscribedFlights","map","flight","flightUuid","start","refreshSubscribedFlights","sock","readyState","WebSocket","OPEN","connected","send","tag","contents","setSubscribedFlights","flights","onOpen","handleReset","setConnectionState","ConnectionState","ESTABLISHED","area","lat","lon","onMessage","evt","ACTIVE","msg","clearTimeout","watchdog","setTimeout","INACTIVE","processMessage","onClose","NO_CONNECTION","connect","bind","onError","dispatchInfoMessage","dispatchTracklogMessage","CONNECTING","onopen","onmessage","onclose","onerror","ERROR","alert","persistentChosenPilots","RunningDerivation","smoothingFactor","derivation_func","a","b","invalid_func","computeDiff","isInvalid","old_val","old_t","running_avg","new_val","new_t","dt","deriv","weight","Math","pow","findBisect","targetValue","length","dataFn","minIndex","maxIndex","currentIndex","lerp","val1","val2","pct","FlightAnimation","updateData","parseTime","isoStr","round","data_start_time","timestamp","t","elem","pos","lng","baroAlt","gpsAlt","gpsVario","counter_gpsVario","update","baroVario","counter_baroVarion","velocity","counter_velocity","newElem","elevation","newElements","oldElements","oldPos","newPos","oldEl","newEl","reset","resetAnimation","animationArrayPos","mapsPath","takeData","blendData","data1","data2","updateAnimation","animationTimeMillis","lowLatencyMode","animationTimeSeconds","blendedData","endOfTrack","startOfTrack","data0","blend","currentPos","end","getDistance","HighPrecisionTimeSync","tolerance","get","currentHighPrecisionTime","currentTime","estimatedTime","offset","offBy","XContestAnimation","animationLoop","highPrecisionTime","absTime","offsetTime","_highPrecisionTimeSync","_setting_timeOffset","newAnimationData","Object","keys","_subscribedPilots","forEach","pilot","_pilotInfos","flightId","_flightAnimations","flightAnim","_setting_lowLatencyMode","_updateAnimationData","requestAnimationFrame","_currentAnimationData","_callbacks","setSubscribedPilots","subscribedPilots","_updateSubscribedFlights","pushNewInfo","pilotInfo","pushNewData","trackId","trackData","useAnimatedData","importantFlights","values","filter","val","info","user","username","importantFlightSet","Set","as","bs","size","has","eqSet","_subscribedFlights","_setSubscribedFlights","settings_timeOffset","settings_lowLatencyMode","Array","from","NO_INFORMATION","XContestInterface","socket","onConnectionStateChanged","eventEmitter","emit","onInfoMessageReceived","pilots","track","overriden","animation","getPilotInfos","onTracklogMessageReceived","trackChunk","EventEmitter","_instance","getXContestInterface","useXContestPilots","useXContestConnectionState","MapAnimator","cleanupOldMarkers","toRemove","markers","setMap","pilotsInfo","pilotData","maps","Marker","position","title","fullname","setPosition","LiveMap","mapReady","mapError","mapsRef","useRef","useLayoutEffect","Map","current","center","mapTypeId","zoom","maxZoom","disableDefaultUI","scaleControl","fullscreenControl","styles","mapStyle","mapAnimator","mapAnimatorUpdateCallback","Fragment","columns","id","label","minWidth","render","row","component","variant","style","paddingLeft","align","nationality","iso","marginLeft","boxShadow","verticalAlign","toLowerCase","PilotSelector","props","useTheme","pilotList","selected","setSelected","search","setSearch","numSelected","closeWindow","fullScreen","useMediaQuery","breakpoints","down","matchesSearch","filteredPilots","userData","test","login","gender","Dialog","open","Toolbar","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","paddingRight","paddingTop","TextField","autoComplete","fullWidth","onChange","event","target","flex","marginY","overflowY","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","isItemSelected","isSelected","itemDisabled","alreadyAdded","wasAlreadyAdded","columnContent","onClick","_event","selectedIndex","newSelected","concat","slice","handleClick","DialogActions","Button","disabled","onAddPilots","AnimatedPilotList","animatedData","content","entries","pilotId","pilotName","displayedName","pilotDebugOutput","animatedPilotData","toString","removePilots","Pilots","pilotSelectorOpen","setPilotSelectorOpen","chosenPilots","setChosenPilots","pilotIds","newPilotState","changed","useChosenPilots","addPilots","bottom","right","Fab","menuButton","marginRight","popover","padding","LoadingBadge","Badge","anchorOrigin","vertical","horizontal","badgeContent","disableShrink","thickness","children","TitleBar","connectionState","popoverActions","React","connectionPopAnchor","setConnectionPopAnchor","updatePosition","AppBar","clone","IconButton","edge","flexGrow","currentTarget","renderConnectionIcon","Popover","Boolean","anchorEl","transformOrigin","action","MainPage","tabId","setTabId","windowHeight","setWindowHeight","updateWindowHeight","innerHeight","removeEventListener","flexDirection","zIndex","BottomNavigation","showLabels","BottomNavigationAction","icon","App","location","hostname","match","require","config","ReactDOM","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.a990afa6.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\n// Hook\nlet googleMapsApiPromise = null;\nfunction useGoogleMapsApi() {\n  // Keeping track of script loaded and error state\n  const [state, setState] = useState({\n    ready: false,\n    error: false\n  });\n\n  useEffect(\n    () => {\n      if (googleMapsApiPromise === null) {\n        googleMapsApiPromise = new Promise((resolve, _reject) => {\n          console.log(\"Loading Google Maps API ...\");\n          // Create script\n          let script = document.createElement(\"script\");\n          script.src =\n            \"https://maps.googleapis.com/maps/api/js?key=\" +\n            process.env.REACT_APP_GAPI_KEY;\n          script.async = true;\n\n          script.addEventListener(\"load\", () => resolve(true));\n          script.addEventListener(\"error\", () => resolve(false));\n\n          // Add script to document body\n          document.body.appendChild(script);\n        });\n      }\n\n      googleMapsApiPromise.then(success => {\n        if (success) {\n          console.log(\"Google Maps API loaded.\");\n          setState({\n            ready: true,\n            error: false\n          });\n        } else {\n          console.log(\"Error: Cannot load Google Maps API.\");\n          setState({\n            ready: false,\n            error: true\n          });\n        }\n      });\n    },\n    [] // Don't re-run\n  );\n\n  return [state.ready, state.error, state.ready ? window.google : null];\n}\n\nexport default useGoogleMapsApi;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2)\n  }\n}));\n\nexport const LoadingPage = ({ message, hideIf, subRef }) => {\n  const classes = useStyles();\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      display={hideIf ? \"none\" : \"flex\"}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      ref={subRef}\n    >\n      <Box textAlign=\"center\">\n        <CircularProgress className={classes.progress} />\n        <Typography>{message}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport const ErrorPage = ({ message, hideIf }) => {\n  const classes = useStyles();\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      display={hideIf ? \"none\" : \"flex\"}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box textAlign=\"center\">\n        <ErrorIcon\n          fontSize=\"large\"\n          color=\"error\"\n          className={classes.progress}\n        />\n        <Typography color=\"error\">{message}</Typography>\n      </Box>\n    </Box>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nexport default function mapEventToState(\n  eventTarget,\n  messageName,\n  initialState\n) {\n  return () => {\n    const [innerState, setInnerState] = useState(initialState);\n\n    useEffect(() => {\n      let eventTargetObj =\n        eventTarget instanceof Function ? eventTarget() : eventTarget;\n\n      const onEvent = data => {\n        setInnerState(data);\n      };\n\n      // Register\n      eventTargetObj.addListener(messageName, onEvent);\n\n      // Unregister on component unmount\n      return () => {\n        eventTargetObj.removeListener(messageName, onEvent);\n      };\n    }, []);\n\n    return innerState;\n  };\n}\n","import { useState, useEffect } from \"react\";\n\nclass PersistentState {\n  constructor(key, initialValue) {\n    this.key = key;\n    this.initialValue = initialValue;\n    this.callbacks = [];\n  }\n\n  getValue = () => {\n    const value = JSON.parse(localStorage.getItem(this.key));\n    if (value === null) return this.initialValue;\n    return value;\n  };\n\n  _notifyAll = () => {\n    const value = this.getValue();\n    for (const cb of this.callbacks) {\n      cb(value);\n    }\n  };\n\n  registerCallback = cb => {\n    if (!this.callbacks.includes(cb)) this.callbacks.push(cb);\n  };\n\n  unregisterCallback = cb => {\n    const index = this.callbacks.indexOf(cb);\n    if (index >= 0) {\n      this.callbacks.splice(index, 1);\n    }\n  };\n\n  setValue = value => {\n    if (value == null) {\n      localStorage.removeItem(this.key);\n    } else {\n      localStorage.setItem(this.key, JSON.stringify(value));\n    }\n\n    this._notifyAll();\n  };\n\n  use = () => {\n    const [value, setValue] = useState(this.getValue);\n\n    useEffect(() => {\n      const cb = newValue => {\n        // trigger component update on change\n        setValue(newValue);\n      };\n\n      this.registerCallback(cb);\n      return () => this.unregisterCallback(cb);\n    }, []);\n\n    return [value, this.setValue];\n  };\n}\n\nexport const registerPersistentState = (name, initialValue) => {\n  return new PersistentState(name, initialValue);\n};\n","import { registerPersistentState } from \"./PersistentState\";\n\n// Keys\nexport const Settings = {\n  PATH_LENGTH: \"PATH_LENGTH\",\n  FULL_PATHS: \"FULL_PATHS\",\n  LOW_LATENCY: \"LOW_LATENCY\",\n  ANIMATION_DELAY: \"ANIMATION_DELAY\"\n};\n\n// Wrapper for simplification\nconst createSetting = (key, value) =>\n  registerPersistentState(\"SETTINGS_\" + key, value);\n\n// Settings objects\nconst settingsObjects = {\n  PATH_LENGTH: createSetting(Settings.PATH_LENGTH, 15 * 60),\n  FULL_PATHS: createSetting(Settings.FULL_PATHS, false),\n  LOW_LATENCY: createSetting(Settings.LOW_LATENCY, false),\n  ANIMATION_DELAY: createSetting(Settings.ANIMATION_DELAY, 80)\n};\n\nexport const getSetting = key => settingsObjects[key];\n","import { ConnectionState } from \"./XContestInterface\";\nimport { getSetting, Settings } from \"../../common/PersistentState/Settings\";\n\nexport default class XContestSocket {\n  constructor(onStateChanged, onInfoMessage, onTracklogMessage) {\n    this.setConnectionState = onStateChanged;\n    this.dispatchInfoMessage = onInfoMessage;\n    this.dispatchTracklogMessage = onTracklogMessage;\n    this.subscribedFlights = [];\n    this.connect();\n    this.connected = false;\n\n    // Register hooks, so we get notified when these settings change\n    getSetting(Settings.PATH_LENGTH).registerCallback(\n      this.refreshSubscribedFlights\n    );\n    getSetting(Settings.FULL_PATHS).registerCallback(\n      this.refreshSubscribedFlights\n    );\n  }\n\n  connect() {\n    if (\"WebSocket\" in window) {\n      this.connected = false;\n      this.setConnectionState(ConnectionState.CONNECTING);\n      this.sock = new WebSocket(\"wss://live.xcontest.org/websock/webclient\");\n      this.sock.onopen = this.onOpen;\n      this.sock.onmessage = this.onMessage;\n      this.sock.onclose = this.onClose;\n      this.sock.onerror = this.onError;\n    } else {\n      this.setConnectionState(ConnectionState.ERROR);\n      // The browser doesn't support WebSocket\n      alert(\"WebSocket NOT supported by your Browser!\");\n    }\n  }\n\n  formatSubscribedFlights = () => {\n    const setting_pathLength = getSetting(Settings.PATH_LENGTH).getValue();\n    const setting_fullPath = getSetting(Settings.FULL_PATHS).getValue();\n\n    let startIsoDate = null;\n    if (!setting_fullPath) {\n      const startDate = new Date(Date.now() - 1000 * setting_pathLength);\n      startDate.setMilliseconds(0);\n      startIsoDate = startDate.toISOString();\n    }\n\n    const formattedFlights = this.subscribedFlights.map(flight => {\n      return { flightUuid: flight, start: startIsoDate };\n    });\n\n    return formattedFlights;\n  };\n\n  refreshSubscribedFlights = () => {\n    if (this.sock.readyState === WebSocket.OPEN && this.connected) {\n      this.sock.send(\n        JSON.stringify({\n          tag: \"WebFollow\",\n          contents: this.formatSubscribedFlights()\n        })\n      );\n    }\n  };\n\n  setSubscribedFlights = flights => {\n    this.subscribedFlights = flights;\n    this.refreshSubscribedFlights();\n  };\n\n  onOpen = () => {\n    this.handleReset();\n    console.log(\"WebSocket: Open!\");\n    this.setConnectionState(ConnectionState.ESTABLISHED);\n    this.connected = true;\n\n    // Set area filter to the entire world\n    this.sock.send(\n      JSON.stringify({\n        tag: \"WebFilterArea\",\n        area: [{ lat: -90, lon: -180 }, { lat: 90, lon: 180 }]\n      })\n    );\n\n    // Use current 'fake' contest that is valid for the current alpha phase.\n    // Primarily sent to match the messages from their reverse engineered websocket\n    this.sock.send(\n      JSON.stringify({ tag: \"WebFilterContest\", contents: \"alpha9999\" })\n    );\n\n    // Tell the webserver which flights we want in more detail. TODO.\n    this.sock.send(\n      JSON.stringify({\n        tag: \"WebFollow\",\n        contents: this.formatSubscribedFlights()\n      })\n    );\n  };\n\n  onMessage = evt => {\n    console.log(\"WebSocket: Message!\");\n    this.setConnectionState(ConnectionState.ACTIVE);\n\n    let msg = JSON.parse(evt.data);\n\n    // Expect the next message in 60 seconds. If not, change the status message.\n    clearTimeout(this.watchdog);\n    this.watchdog = setTimeout(() => {\n      this.setConnectionState(ConnectionState.INACTIVE);\n    }, 70000);\n\n    // Process the message\n    this.processMessage(msg);\n  };\n\n  onClose = evt => {\n    this.connected = false;\n    console.log(\"WebSocket: Close!\");\n    this.setConnectionState(ConnectionState.NO_CONNECTION);\n    // websocket is closed.\n    setTimeout(this.connect.bind(this), 1000);\n  };\n\n  onError = evt => {\n    this.connected = false;\n    console.log(\"WebSocket: Error!\");\n  };\n\n  // Message Processing\n  handleReset = () => {\n    console.log(\"TODO: handle reset!\");\n  };\n  processMessage = msg => {\n    if (!(\"tag\" in msg)) {\n      console.log(\"Warning: Invalid message format!\", msg);\n      return;\n    }\n    switch (msg.tag) {\n      case \"LiveFlightInfos\":\n        this.dispatchInfoMessage(msg.contents);\n        break;\n      case \"LiveFlightChunk\":\n        this.dispatchTracklogMessage(msg);\n        break;\n      default:\n        console.log(`Warning: Unknown message tag '${msg.tag}'!`, msg);\n    }\n  };\n}\n","import { registerPersistentState } from \"./PersistentState\";\n\nconst persistentChosenPilots = registerPersistentState(\"chosen-pilots\", {});\n\nexport const getChosenPilotsObject = () => persistentChosenPilots;\n\nexport function getChosenPilots() {\n  return persistentChosenPilots.getValue();\n}\n\nexport function useChosenPilots() {\n  const [chosenPilots, setChosenPilots] = persistentChosenPilots.use();\n\n  // Add new pilots\n  const addPilots = pilotIds => {\n    const newPilotState = { ...chosenPilots };\n\n    let changed = false;\n    for (const pilotId of pilotIds) {\n      if (!(pilotId in newPilotState)) {\n        newPilotState[pilotId] = null;\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      setChosenPilots(newPilotState);\n    }\n  };\n\n  // Remove pilots\n  const removePilots = pilotIds => {\n    const newPilotState = { ...chosenPilots };\n\n    let changed = false;\n    for (const pilotId of pilotIds) {\n      if (pilotId in newPilotState) {\n        delete newPilotState[pilotId];\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      setChosenPilots(newPilotState);\n    }\n  };\n\n  return [chosenPilots, addPilots, removePilots];\n}\n","export default class RunningDerivation {\n  constructor(\n    smoothingFactor,\n    derivation_func = (a, b) => b - a,\n    invalid_func = a => a === null\n  ) {\n    this.computeDiff = derivation_func;\n    this.isInvalid = invalid_func;\n    this.old_val = null;\n    this.old_t = null;\n    this.running_avg = null;\n    this.smoothingFactor = smoothingFactor;\n  }\n\n  update(new_val, new_t) {\n    if (\n      this.old_val === null ||\n      new_val === null ||\n      this.old_t === null ||\n      new_t === null ||\n      this.isInvalid(this.old_val) ||\n      this.isInvalid(new_val) ||\n      this.old_t === this.new_t\n    ) {\n      this.old_val = new_val;\n      this.old_t = new_t;\n      return null;\n    }\n\n    let dt = new_t - this.old_t;\n    let diff = this.computeDiff(this.old_val, new_val);\n    let deriv = diff / dt;\n\n    let weight = Math.pow(this.smoothingFactor, dt);\n    if (this.running_avg === null) {\n      this.running_avg = deriv;\n    } else {\n      this.running_avg = weight * this.running_avg + (1.0 - weight) * deriv;\n    }\n\n    this.old_val = new_val;\n    this.old_t = new_t;\n    return this.running_avg;\n  }\n\n  reset() {\n    this.old_val = null;\n    this.old_t = null;\n    this.running_avg = null;\n  }\n}\n","const findBisect = (targetValue, length, dataFn) => {\n  if (length < 1) return 0;\n\n  let minIndex = -1;\n  let maxIndex = length;\n  let currentIndex = 0;\n  let currentValue = null;\n\n  while (minIndex < maxIndex - 1) {\n    currentIndex = ((minIndex + maxIndex) / 2) | 0;\n    currentValue = dataFn(currentIndex);\n\n    if (currentValue < targetValue) {\n      minIndex = currentIndex;\n    } else {\n      maxIndex = currentIndex;\n    }\n  }\n\n  return maxIndex;\n};\n\nexport default findBisect;\n","export const lerp = (val1, val2, pct) => {\n  if (val2 === null) {\n    return val1;\n  }\n  if (val1 === null) {\n    return val2;\n  }\n  return (1.0 - pct) * val1 + pct * val2;\n};\n\n// TODO catmull-rom\n","import RunningDerivation from \"../../util/RunningDerivation\";\nimport { getDistance } from \"geolib\";\nimport findBisect from \"../../util/FindBisect\";\nimport { lerp } from \"../../util/Interpolation\";\n\nclass FlightAnimation {\n  constructor() {\n    this.data = [];\n    this.counter_gpsVario = new RunningDerivation(0.7);\n    this.counter_baroVarion = new RunningDerivation(0.7);\n    this.counter_velocity = new RunningDerivation(\n      0.7,\n      (start, end) => getDistance(start, end, 0.01),\n      () => false\n    );\n\n    // Animation\n    this.animationArrayPos = null;\n    this.mapsPath = [];\n  }\n\n  updateData = data => {\n    const parseTime = isoStr => {\n      return Math.round(Date.parse(isoStr) / 1000);\n    };\n\n    if (data.length < 1) return;\n\n    // Compute start time\n    const data_start_time = parseTime(data[0].timestamp);\n    if (\n      this.data.length === 0 ||\n      this.data[this.data.length - 1].t < data_start_time\n    ) {\n      // If start time is after our own data, simply append\n      for (const elem of data) {\n        const timestamp = parseTime(elem.timestamp);\n        const pos = { lat: elem.lat, lng: elem.lon };\n\n        const baroAlt = elem.baroAlt === 0 ? null : elem.baroAlt;\n        const gpsAlt = elem.gpsAlt === 0 ? null : elem.gpsAlt;\n\n        // Compute new running average values\n        const gpsVario = this.counter_gpsVario.update(gpsAlt, timestamp);\n        const baroVario = this.counter_baroVarion.update(baroAlt, timestamp);\n        const velocity = this.counter_velocity.update(pos, timestamp);\n\n        const newElem = {\n          baroAlt: baroAlt,\n          gpsAlt: gpsAlt,\n          elevation: elem.elevation,\n          pos: pos,\n          gpsVario: gpsVario,\n          baroVario: baroVario,\n          velocity: velocity,\n          t: timestamp\n        };\n        this.data.push(newElem);\n      }\n    }\n    // TODO add else back in. Out for now, to ensure both paths are working as intended\n    else {\n      // Otherwise, merge\n\n      // Compute new elements\n      const newElements = [];\n      for (const elem of data) {\n        const timestamp = parseTime(elem.timestamp);\n        const pos = { lat: elem.lat, lng: elem.lon };\n        const baroAlt = elem.baroAlt === 0 ? null : elem.baroAlt;\n        const gpsAlt = elem.gpsAlt === 0 ? null : elem.gpsAlt;\n\n        const newElem = {\n          baroAlt: baroAlt,\n          gpsAlt: gpsAlt,\n          elevation: elem.elevation,\n          pos: pos,\n          gpsVario: null,\n          baroVario: null,\n          velocity: null,\n          t: timestamp\n        };\n        newElements.push(newElem);\n      }\n\n      // Merge\n      const oldElements = this.data;\n      this.data = [];\n\n      let oldPos = 0;\n      let newPos = 0;\n\n      while (true) {\n        if (oldPos >= oldElements.length && newPos >= newElements.length) break;\n        else if (oldPos >= oldElements.length) {\n          this.data.push(newElements[newPos]);\n          newPos += 1;\n        } else if (newPos >= newElements.length) {\n          this.data.push(oldElements[oldPos]);\n          oldPos += 1;\n        } else {\n          const oldEl = oldElements[oldPos];\n          const newEl = newElements[newPos];\n\n          if (newEl.t < oldEl.t) {\n            this.data.push(newEl);\n            newPos += 1;\n          } else if (oldEl.t < newEl.t) {\n            this.data.push(oldEl);\n            oldPos += 1;\n          } else {\n            this.data.push(newEl);\n            oldPos += 1;\n            newPos += 1;\n          }\n        }\n      }\n\n      // Re-compute derivatives\n      this.counter_gpsVario.reset();\n      this.counter_baroVarion.reset();\n      this.counter_velocity.reset();\n      for (let elem of this.data) {\n        const gpsVario = this.counter_gpsVario.update(elem.gpsAlt, elem.t);\n        const baroVario = this.counter_baroVarion.update(elem.baroAlt, elem.t);\n        const velocity = this.counter_velocity.update(elem.pos, elem.t);\n\n        elem.gpsVario = gpsVario;\n        elem.baroVario = baroVario;\n        elem.velocity = velocity;\n      }\n\n      // Reset animation\n      this.resetAnimation();\n    }\n\n    console.log(\"Animation updated.\", this.data);\n  };\n\n  resetAnimation = () => {\n    this.animationArrayPos = null;\n    this.mapsPath = [];\n  };\n\n  takeData = data => {\n    return {\n      baroAlt: data.baroAlt,\n      gpsAlt: data.gpsAlt,\n      elevation: data.elevation,\n      pos: {\n        lat: data.pos.lat,\n        lng: data.pos.lng\n      },\n      gpsVario: data.gpsVario,\n      baroVario: data.baroVario,\n      velocity: data.velocity\n    };\n  };\n\n  blendData = (data1, data2, pct) => {\n    return {\n      baroAlt: lerp(data1.baroAlt, data2.baroAlt, pct),\n      gpsAlt: lerp(data1.gpsAlt, data2.gpsAlt, pct),\n      elevation: lerp(data1.elevation, data2.elevation, pct),\n      pos: {\n        lat: lerp(data1.pos.lat, data2.pos.lat, pct),\n        lng: lerp(data1.pos.lng, data2.pos.lng, pct)\n      },\n      gpsVario: lerp(data1.gpsVario, data2.gpsVario, pct),\n      baroVario: lerp(data1.baroVario, data2.baroVario, pct),\n      velocity: lerp(data1.velocity, data2.velocity, pct)\n    };\n  };\n\n  updateAnimation = (animationTimeMillis, lowLatencyMode) => {\n    const animationTimeSeconds = animationTimeMillis / 1000;\n\n    // Compute current array position\n    if (this.animationArrayPos === null) {\n      this.animationArrayPos = findBisect(\n        animationTimeSeconds,\n        this.data.length,\n        pos => this.data[pos].t\n      );\n    } else {\n      while (\n        this.animationArrayPos < this.data.length &&\n        this.data[this.animationArrayPos].t < animationTimeSeconds\n      ) {\n        this.animationArrayPos += 1;\n      }\n    }\n\n    let blendedData = null;\n    let endOfTrack = false;\n    let startOfTrack = false;\n    if (this.data.length > 0) {\n      if (this.animationArrayPos <= 0) {\n        blendedData = this.takeData(this.data[0]);\n        startOfTrack = true;\n      } else if (this.animationArrayPos >= this.data.length) {\n        blendedData = this.takeData(this.data[this.data.length - 1]);\n        endOfTrack = true;\n      } else {\n        const data0 = this.data[this.animationArrayPos - 1];\n        const data1 = this.data[this.animationArrayPos];\n        const blend = (animationTimeSeconds - data0.t) / (data1.t - data0.t);\n        blendedData = this.blendData(data0, data1, blend);\n      }\n    }\n\n    const result = {\n      ...blendedData,\n      currentPos: this.animationArrayPos,\n      startOfTrack: startOfTrack,\n      endOfTrack: endOfTrack\n    };\n\n    return result;\n  };\n}\n\nexport default FlightAnimation;\n","class HighPrecisionTimeSync {\n  // Tolerance should be larger than the duration of one animation frame.\n  // Most animations are 60Hz, meaning 16ms, so 20ms is fine.\n  constructor(tolerance = 20) {\n    this.offset = 0.0;\n    this.tolerance = tolerance;\n  }\n\n  get = (currentHighPrecisionTime, currentTime) => {\n    let estimatedTime = currentHighPrecisionTime + this.offset;\n    const offBy = estimatedTime - currentTime;\n\n    if (offBy > this.tolerance || offBy < -this.tolerance) {\n      this.offset -= offBy;\n      estimatedTime = currentHighPrecisionTime + this.offset;\n    }\n\n    return estimatedTime;\n  };\n}\n\nexport default HighPrecisionTimeSync;\n","import {\n  getChosenPilots,\n  getChosenPilotsObject\n} from \"../../common/PersistentState/ChosenPilots\";\nimport { useState, useEffect } from \"react\";\nimport FlightAnimation from \"./FlightAnimation\";\nimport HighPrecisionTimeSync from \"../../util/HighPrecisionTimeSync\";\nimport { Settings, getSetting } from \"../../common/PersistentState/Settings\";\n\nfunction eqSet(as, bs) {\n  if (as.size !== bs.size) return false;\n  for (const a of as) if (!bs.has(a)) return false;\n  return true;\n}\n\nexport default class XContestAnimation {\n  constructor(setSubscribedFlights) {\n    this._currentAnimationData = {};\n    this._callbacks = [];\n    this._subscribedPilots = getChosenPilots();\n    this._subscribedFlights = new Set();\n    this._pilotInfos = {};\n    this._flightAnimations = {};\n    this._highPrecisionTimeSync = new HighPrecisionTimeSync();\n    const settings_timeOffset = getSetting(Settings.ANIMATION_DELAY);\n    const settings_lowLatencyMode = getSetting(Settings.LOW_LATENCY);\n    this._setting_timeOffset = settings_timeOffset.getValue();\n    this._setting_lowLatencyMode = settings_lowLatencyMode.getValue();\n    settings_timeOffset.registerCallback(value => {\n      this._setting_timeOffset = value;\n    });\n    settings_lowLatencyMode.registerCallback(value => {\n      this._setting_lowLatencyMode = value;\n    });\n\n    this._setSubscribedFlights = flights => {\n      this._subscribedFlights = flights;\n      setSubscribedFlights(Array.from(flights));\n    };\n    getChosenPilotsObject().registerCallback(this.setSubscribedPilots);\n    requestAnimationFrame(this.animationLoop);\n  }\n\n  // Animation loop\n  animationLoop = highPrecisionTime => {\n    const absTime = Date.now();\n    const syncedTime = this._highPrecisionTimeSync.get(\n      highPrecisionTime,\n      absTime\n    );\n\n    const offsetTime = syncedTime - 1000 * this._setting_timeOffset;\n    const newAnimationData = {};\n    Object.keys(this._subscribedPilots).forEach(pilot => {\n      if (pilot in this._pilotInfos) {\n        const flightId = this._pilotInfos[pilot].flightId;\n        if (flightId in this._flightAnimations) {\n          const flightAnim = this._flightAnimations[flightId];\n          newAnimationData[pilot] = flightAnim.updateAnimation(\n            offsetTime,\n            this._setting_lowLatencyMode\n          );\n        }\n      }\n    });\n\n    this._updateAnimationData(newAnimationData);\n    requestAnimationFrame(this.animationLoop);\n  };\n\n  _updateAnimationData = data => {\n    this._currentAnimationData = data;\n    for (const cb of this._callbacks) {\n      cb(data);\n    }\n  };\n\n  // External\n  setSubscribedPilots = subscribedPilots => {\n    this._subscribedPilots = subscribedPilots;\n    this._updateSubscribedFlights();\n  };\n  pushNewInfo = pilotInfo => {\n    console.log(\"newInfo: \", pilotInfo);\n    this._pilotInfos = pilotInfo;\n    this._updateSubscribedFlights();\n  };\n  pushNewData = (trackId, trackData) => {\n    console.log(\"newTrackdata: \", trackId, trackData);\n    if (!(trackId in this._flightAnimations))\n      this._flightAnimations[trackId] = new FlightAnimation();\n    this._flightAnimations[trackId].updateData(trackData);\n  };\n\n  // callback gets called every frame with new data\n  registerCallback = cb => {\n    if (!this._callbacks.includes(cb)) this._callbacks.push(cb);\n  };\n  unregisterCallback = cb => {\n    const index = this._callbacks.indexOf(cb);\n    if (index >= 0) {\n      this._callbacks.splice(index, 1);\n    }\n  };\n\n  useAnimatedData = () => {\n    const [value, setValue] = useState(this._currentAnimationData);\n\n    useEffect(() => {\n      const cb = newValue => {\n        // trigger component update on change\n        setValue(newValue);\n      };\n\n      this.registerCallback(cb);\n      return () => this.unregisterCallback(cb);\n    }, []);\n\n    return value;\n  };\n\n  // Internal\n  _updateSubscribedFlights = () => {\n    let importantFlights = Object.values(this._pilotInfos)\n      .filter(val => val.info.user.username in this._subscribedPilots)\n      .map(val => val.flightId);\n\n    let importantFlightSet = new Set(importantFlights);\n\n    if (!eqSet(importantFlightSet, this._subscribedFlights)) {\n      console.log(\"Swap: \", this._subscribedFlights, importantFlightSet);\n      this._setSubscribedFlights(importantFlightSet);\n    }\n  };\n}\n","import { EventEmitter } from \"events\";\nimport mapEventToState from \"../../util/EventToReactState\";\nimport XContestSocket from \"./XContestSocket\";\nimport XContestAnimation from \"./XContestAnimation\";\n\nexport const ConnectionState = {\n  CONNECTING: \"connecting\", //orange\n  ERROR: \"error\", //red\n  ESTABLISHED: \"established\", //yellow\n  ACTIVE: \"active\", //green\n  INACTIVE: \"inactive\", //orange\n  NO_CONNECTION: \"no connection\", //red\n  NO_INFORMATION: \"no information\" //gray\n};\n\nclass XContestInterface {\n  constructor() {\n    this.pilots = [];\n    this.eventEmitter = new EventEmitter();\n    this.socket = new XContestSocket(\n      this.onConnectionStateChanged,\n      this.onInfoMessageReceived,\n      this.onTracklogMessageReceived\n    );\n    this.animation = new XContestAnimation(this.setSubscribedFlights);\n  }\n\n  setSubscribedFlights = flights => {\n    this.socket.setSubscribedFlights(flights);\n  };\n\n  onConnectionStateChanged = state => {\n    this.eventEmitter.emit(\"connectionStateChanged\", state);\n  };\n\n  onInfoMessageReceived = msg => {\n    this.pilots = {};\n    for (const [trackId, track] of msg) {\n      // Skip if we have a newer track of the same person\n      if (track.overriden) continue;\n\n      track.flightId = trackId;\n\n      this.pilots[track.info.user.username] = track;\n    }\n    this.eventEmitter.emit(\"pilotStateChanged\", this.pilots);\n    this.animation.pushNewInfo(this.pilots);\n  };\n\n  getPilotInfos = () => this.pilots;\n\n  onTracklogMessageReceived = msg => {\n    this.animation.pushNewData(msg.flightUuid, msg.trackChunk);\n  };\n}\n\n// Singleton stuff\nlet _instance = null;\nexport const getXContestInterface = () => {\n  if (!_instance) {\n    _instance = new XContestInterface();\n  }\n  return _instance;\n};\n\nexport const useXContestPilots = mapEventToState(\n  () => getXContestInterface().eventEmitter,\n  \"pilotStateChanged\",\n  []\n);\n\nexport const useXContestConnectionState = mapEventToState(\n  () => getXContestInterface().eventEmitter,\n  \"connectionStateChanged\",\n  ConnectionState.NO_INFORMATION\n);\n","import { getXContestInterface } from \"../location_provider/XContest/XContestInterface\";\n\nexport default class MapAnimator {\n  constructor(map, google) {\n    this.map = map;\n    this.google = google;\n    this.markers = {};\n  }\n\n  cleanupOldMarkers = data => {\n    const toRemove = [];\n    for (const pilot in this.markers) {\n      if (!(pilot in data)) {\n        toRemove.push(pilot);\n      }\n    }\n    for (const pilot of toRemove) {\n      this.markers[pilot].setMap(null);\n      delete this.markers[pilot];\n    }\n  };\n\n  update = data => {\n    const pilotsInfo = getXContestInterface().getPilotInfos();\n    this.cleanupOldMarkers(data);\n    for (const pilot in data) {\n      if (!(pilot in pilotsInfo)) continue;\n      const pilotInfo = pilotsInfo[pilot];\n\n      const pilotData = data[pilot];\n      if (pilotData === null || pilotData.pos.lat === null) continue;\n\n      if (!(pilot in this.markers)) {\n        this.markers[pilot] = new this.google.maps.Marker({\n          map: this.map,\n          position: pilotData.pos,\n          title: pilotInfo.info.user.fullname\n        });\n        console.log(\"Marker:\", pilotData.pos);\n      }\n\n      const marker = this.markers[pilot];\n      marker.setPosition(pilotData.pos);\n    }\n    //console.log(data);\n  };\n}\n","import React, { useState, useRef, useLayoutEffect, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport useGoogleMapsApi from \"../common/GoogleMapsApiLoader\";\nimport { LoadingPage, ErrorPage } from \"./StatusPages\";\nimport mapStyle from \"./MapStyle.json\";\nimport { getXContestInterface } from \"../location_provider/XContest/XContestInterface\";\nimport MapAnimator from \"./MapAnimator\";\n\nconst LiveMap = () => {\n  const [mapReady, mapError, google] = useGoogleMapsApi();\n  const mapsRef = useRef();\n  const [map, setMap] = useState(null);\n\n  // Initialize Map\n  useLayoutEffect(() => {\n    if (mapReady && !map) {\n      setMap(\n        new google.maps.Map(mapsRef.current, {\n          center: { lat: 46.509012, lng: 11.827984 },\n          mapTypeId: \"terrain\",\n          zoom: 12,\n          maxZoom: 15,\n          disableDefaultUI: true,\n          scaleControl: true,\n          fullscreenControl: true,\n          styles: mapStyle\n        })\n      );\n    }\n  }, [mapReady, map, google, mapsRef]);\n\n  // Register map for updates\n  useEffect(() => {\n    if (map && google) {\n      const mapAnimator = new MapAnimator(map, google);\n      const mapAnimatorUpdateCallback = data => mapAnimator.update(data);\n      getXContestInterface().animation.registerCallback(\n        mapAnimatorUpdateCallback\n      );\n\n      return () => {\n        getXContestInterface().animation.unregisterCallback(\n          mapAnimatorUpdateCallback\n        );\n      };\n    }\n  }, [map, google]);\n\n  return (\n    <React.Fragment>\n      <Box\n        width=\"100%\"\n        height=\"100%\"\n        display={mapReady ? \"block\" : \"none\"}\n        ref={mapsRef}\n      ></Box>\n      <LoadingPage\n        message=\"Loading Maps ...\"\n        hideIf={mapReady || mapError}\n      ></LoadingPage>\n      <ErrorPage message=\"Unable to load map!\" hideIf={!mapError}></ErrorPage>\n    </React.Fragment>\n  );\n};\n\nexport default LiveMap;\n","import React from \"react\";\nimport {\n  Box,\n  useMediaQuery,\n  useTheme,\n  Typography,\n  Toolbar\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nimport { lighten } from \"@material-ui/core/styles\";\nimport { Button, Dialog, DialogActions, TextField } from \"@material-ui/core\";\n\nimport {\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell\n} from \"@material-ui/core\";\n\nimport { useXContestPilots } from \"../location_provider/XContest/XContestInterface\";\n\nconst columns = [\n  {\n    id: \"name\",\n    label: \"Name\",\n    minWidth: 0,\n    render: row => {\n      return (\n        <React.Fragment>\n          {row.user.fullname}\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            color=\"textSecondary\"\n            style={{ paddingLeft: \".3em\" }}\n          >\n            [{row.user.username}]\n          </Typography>\n        </React.Fragment>\n      );\n    }\n  },\n  {\n    id: \"country\",\n    label: \"Country\",\n    minWidth: \"4em\",\n    align: \"right\",\n    render: row => {\n      return (\n        <React.Fragment>\n          {row.user.nationality.iso}\n          <Box\n            fontSize=\"large\"\n            marginLeft=\"4px\"\n            boxShadow={1}\n            style={{ verticalAlign: \"middle\" }}\n            className={\n              \"flag-icon flag-icon-\" + row.user.nationality.iso.toLowerCase()\n            }\n          ></Box>\n        </React.Fragment>\n      );\n    }\n  }\n];\n\nfunction createPlaceholderPilot(name) {\n  return {\n    info: {\n      user: {\n        login: null,\n        username: name,\n        fullname: \"Offline User\",\n        gender: \"-\",\n        nationality: { iso: \"--\", name: \"--\" }\n      },\n      flightId: null\n    }\n  };\n}\n\nconst PilotSelector = props => {\n  const theme = useTheme();\n  const pilotList = useXContestPilots();\n\n  // State\n  const [selected, setSelected] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const numSelected = selected.length;\n\n  const closeWindow = () => {\n    // Reset state\n    setSearch(\"\");\n    setSelected([]);\n    props.onClose();\n  };\n\n  const handleClick = (_event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n  const wasAlreadyAdded = name => props.alreadyAdded.indexOf(name) !== -1;\n  const matchesSearch = name => {\n    if (search === \"\") {\n      return true;\n    }\n    return name.toLowerCase().includes(search.toLowerCase());\n  };\n\n  // Create virtual pilot if nobody found\n  let filteredPilots = Object.values(pilotList).filter(userData => {\n    return (\n      matchesSearch(userData.info.user.username) ||\n      matchesSearch(userData.info.user.fullname)\n    );\n  });\n\n  // Add dummy pilot if list is empty and search string is valid\n  if (filteredPilots.length === 0 && !/\\s/.test(search) && search.length > 0) {\n    filteredPilots.push(createPlaceholderPilot(search));\n  }\n\n  return (\n    <Dialog open={props.open} onClose={closeWindow} fullScreen={fullScreen}>\n      <Toolbar\n        style={\n          numSelected === 0\n            ? {}\n            : theme.palette.type === \"light\"\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark\n              }\n        }\n      >\n        {numSelected > 0 ? (\n          <Typography component=\"div\" color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography component=\"div\" variant=\"h6\" id=\"tableTitle\">\n            Add new pilots:\n          </Typography>\n        )}\n      </Toolbar>\n      <Box paddingLeft=\"1em\" paddingRight=\"1em\" paddingTop=\"4px\">\n        <TextField\n          //autoFocus\n          margin=\"dense\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n          id=\"search_field\"\n          label=\"Search\"\n          type=\"search\"\n          fullWidth\n          onChange={event => setSearch(event.target.value)}\n        />\n      </Box>\n      <Box flex=\"1 1 auto\" marginY=\"8px\" style={{ overflowY: \"auto\" }}>\n        <Table stickyHeader size=\"small\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                  component=\"th\"\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredPilots.map(row => {\n              const username = row.info.user.username;\n\n              const isItemSelected = isSelected(username);\n\n              const itemDisabled = wasAlreadyAdded(username);\n              const style = itemDisabled\n                ? { filter: \"grayscale(100%) opacity(30%)\" }\n                : {};\n\n              const columnContent = columns.map(column => {\n                return (\n                  <TableCell key={column.id} align={column.align}>\n                    <Box style={style}>{column.render(row.info)}</Box>\n                  </TableCell>\n                );\n              });\n\n              if (itemDisabled) {\n                return <TableRow key={username}>{columnContent}</TableRow>;\n              }\n\n              return (\n                <TableRow\n                  key={username}\n                  selected={isItemSelected}\n                  onClick={event => handleClick(event, username)}\n                >\n                  {columnContent}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Box>\n      <DialogActions>\n        <Button onClick={closeWindow} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          disabled={numSelected === 0}\n          onClick={() => {\n            props.onAddPilots(selected);\n            closeWindow();\n          }}\n          color=\"primary\"\n        >\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default PilotSelector;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { getXContestInterface } from \"../location_provider/XContest/XContestInterface\";\n\nconst AnimatedPilotList = props => {\n  const animatedData = getXContestInterface().animation.useAnimatedData();\n\n  const content = Object.entries(props.pilots).map(([pilotId, pilotName]) => {\n    let displayedName = pilotName;\n    if (pilotName === null) {\n      displayedName = pilotId;\n    }\n\n    let pilotDebugOutput = [];\n    if (pilotId in animatedData) {\n      const animatedPilotData = animatedData[pilotId];\n\n      for (const key in animatedPilotData) {\n        pilotDebugOutput.push(\n          <tr key={key}>\n            <td>{key}</td>\n            <td>\n              {(Math.round(100 * animatedPilotData[key]) / 100).toString()}\n            </td>\n          </tr>\n        );\n      }\n    }\n\n    return (\n      <Box\n        margin=\"10px\"\n        key={pilotId}\n        onClick={() => props.removePilots([pilotId])}\n      >\n        {displayedName}\n        <table>\n          <tbody>{pilotDebugOutput}</tbody>\n        </table>\n      </Box>\n    );\n  });\n\n  // console.log(\"Data:\", animatedData);\n  return (\n    <Box height=\"100%\" style={{ overflowY: \"auto\" }}>\n      {content}\n    </Box>\n  );\n};\n\nexport default AnimatedPilotList;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Fab } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Box from \"@material-ui/core/Box\";\nimport PilotSelector from \"./PilotSelector\";\nimport { useChosenPilots } from \"../common/PersistentState/ChosenPilots\";\nimport AnimatedPilotList from \"./AnimatedPilotList\";\n\nconst Pilots = () => {\n  const theme = useTheme();\n  const [pilotSelectorOpen, setPilotSelectorOpen] = useState(false);\n\n  const [pilots, addPilots, removePilots] = useChosenPilots();\n\n  // TODO sort pilots\n\n  return (\n    <React.Fragment>\n      <AnimatedPilotList\n        pilots={pilots}\n        removePilots={removePilots}\n      ></AnimatedPilotList>\n\n      <Box\n        position=\"absolute\"\n        bottom={theme.spacing(2)}\n        right={theme.spacing(2)}\n      >\n        <Fab\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => setPilotSelectorOpen(true)}\n        >\n          <AddIcon />\n        </Fab>\n      </Box>\n      <PilotSelector\n        open={pilotSelectorOpen}\n        onClose={() => setPilotSelectorOpen(false)}\n        onAddPilots={addPilots}\n        alreadyAdded={Object.keys(pilots)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Pilots;\n","import React from \"react\";\nimport { useState } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ErrorIcon from \"@material-ui/icons/ErrorRounded\";\nimport SignalCellular4BarIcon from \"@material-ui/icons/SignalCellular4Bar\";\nimport SignalCellularConnectedNoInternet4BarIcon from \"@material-ui/icons/SignalCellularConnectedNoInternet4Bar\";\nimport SignalCellularNullIcon from \"@material-ui/icons/SignalCellularNull\";\n\nimport { useXContestConnectionState } from \"../location_provider/XContest/XContestInterface\";\nimport { ConnectionState } from \"../location_provider/XContest/XContestInterface\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  popover: {\n    padding: theme.spacing(1),\n    align: \"right\"\n  }\n}));\n\nconst LoadingBadge = props => {\n  return (\n    <Badge\n      //overlap=\"circle\"\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      }}\n      badgeContent={\n        <CircularProgress\n          disableShrink={props.disableShrink}\n          color=\"secondary\"\n          size={15}\n          thickness={10}\n        />\n      }\n    >\n      {props.children}\n    </Badge>\n  );\n};\n\nconst TitleBar = () => {\n  const classes = useStyles();\n  const connectionState = useXContestConnectionState();\n\n  const popoverActions = React.useRef();\n  const [connectionPopAnchor, setConnectionPopAnchor] = useState(null);\n\n  React.useLayoutEffect(() => {\n    if (popoverActions.current) {\n      popoverActions.current.updatePosition();\n    }\n  }, [connectionState, connectionPopAnchor]);\n\n  const renderConnectionIcon = () => {\n    switch (connectionState) {\n      case ConnectionState.ACTIVE:\n        return <SignalCellular4BarIcon />;\n      case ConnectionState.CONNECTING:\n        return (\n          <LoadingBadge>\n            <SignalCellularNullIcon />\n          </LoadingBadge>\n        );\n      case ConnectionState.ERROR:\n        return <ErrorIcon color=\"error\" />;\n      case ConnectionState.ESTABLISHED:\n        return (\n          <LoadingBadge disableShrink>\n            <SignalCellularNullIcon />\n          </LoadingBadge>\n        );\n      case ConnectionState.INACTIVE:\n        return <SignalCellularConnectedNoInternet4BarIcon />;\n      case ConnectionState.NO_CONNECTION:\n        return <SignalCellularNullIcon />;\n      default:\n        return <SignalCellularNullIcon />;\n    }\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Box clone>\n            <IconButton\n              className={classes.menuButton}\n              edge=\"start\"\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </Box>\n\n          <Box flexGrow={1} clone>\n            <Typography variant=\"h6\">XC Live Viewer</Typography>\n          </Box>\n\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={event => setConnectionPopAnchor(event.currentTarget)}\n          >\n            {renderConnectionIcon()}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Popover\n        open={Boolean(connectionPopAnchor)}\n        anchorEl={connectionPopAnchor}\n        onClose={() => setConnectionPopAnchor(null)}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        action={popoverActions}\n      >\n        <Box className={classes.popover}>\n          <Typography>{connectionState}</Typography>\n        </Box>\n      </Popover>\n    </div>\n  );\n};\n\nexport default TitleBar;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\n\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport MapIcon from \"@material-ui/icons/Map\";\n\nimport \"./MainPage.css\";\n\n// TODO import LazyLoading from \"./util/LazyLoading\";\n\nimport LiveMap from \"./pages/LiveMap\";\nimport Pilots from \"./pages/Pilots\";\nimport TitleBar from \"./pages/TitleBar\";\n\nexport default function MainPage() {\n  const [tabId, setTabId] = React.useState(1);\n  const [windowHeight, setWindowHeight] = React.useState(0);\n\n  // Workaround for mobile screens reporting an incorrect window height\n  const updateWindowHeight = () => {\n    setWindowHeight(window.innerHeight);\n  };\n  React.useLayoutEffect(() => {\n    updateWindowHeight();\n    window.addEventListener(\"resize\", updateWindowHeight);\n    return () => window.removeEventListener(\"resize\", updateWindowHeight);\n  }, []);\n\n  // Callbacks for changing the current page\n  const handleNavigationButton = (_event, newValue) => setTabId(newValue);\n\n  return (\n    <Box height={windowHeight} display=\"flex\" flexDirection=\"column\">\n      <Box zIndex={100}>\n        <TitleBar></TitleBar>\n      </Box>\n      <Box flexGrow={1} clone>\n        <SwipeableViews disabled index={tabId}>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            <LiveMap></LiveMap>\n          </Box>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            <Pilots></Pilots>\n          </Box>\n          <Box width=\"100%\" height=\"100%\" position=\"relative\">\n            Item Three\n          </Box>\n        </SwipeableViews>\n      </Box>\n      <Box zIndex={100} boxShadow={3}>\n        <BottomNavigation\n          value={tabId}\n          onChange={handleNavigationButton}\n          showLabels\n        >\n          <BottomNavigationAction label=\"Map\" icon={<MapIcon />} />\n          <BottomNavigationAction label=\"Pilots\" icon={<PeopleIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport MainPage from \"./MainPage\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport \"flag-icon-css/css/flag-icon.min.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Read the .env file\nrequire(\"dotenv\").config();\n\n// Render the page\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}