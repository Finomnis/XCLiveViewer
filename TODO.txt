- Implement further processing of websocket messages
- Implement pilot selection list
- Implement selected friends (maybe cookies? website specific storage?)
- Create settings page
    - Add settings:
        - 15 minutes tracks vs full length
- Throttle fps

- Sort suggested pilots by distance to self
- Add distance+direction and live state to pilot selection (potentially second row)

Animation:
- One central animation class
    - Continuously computes the current posiitons/paths with requestAnimationFrame
    - Can be subscribed by useXContestAnimation()
    - Stops updating once no subscribers are left

- Make ?add=xxx url that automatically adds given pilots (without removing existing ones. Replacing can be done by first deleting your own ones and then calling the url)

Notes:
- The tracks on the map should have a different color for every pilot
- The markers should be a some kind of arrow / google maps marker with a state symbol insight (double arrow for live, ? for no symbol, some symbol for landed)
    - Normal flight: import NavigationIcon from '@material-ui/icons/Navigation';
                     or import PlayCircleFilledRoundedIcon from '@material-ui/icons/PlayCircleFilledRounded';
    - No response: import HelpIcon from '@material-ui/icons/Help';
    - Landed: import PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';
              or import ArrowDropDownCircleRoundedIcon from '@material-ui/icons/ArrowDropDownCircleRounded';
              or import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';

DONE:
- Implement title bar
- Add status popover to connectionstate button
