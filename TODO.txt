- Split google maps in 30 second chunks.
    - Do the splitting inside XContestAnimation
    - Provide user with {id: chunk} pairs, where id is a unique identifier for the chunk, monotously increasing

- Write position callback provider

- Map: click on pilot -> open details tab on the bottom, showing name,stats,histogram
    - Implement HUD in Map

- Add button that enables automatic map scale and position
    - should include all selected pilots + some space
- Add button that enables/disables GPS (own position)
- Add optional nosleep.js (and add setting)

- Implement Pilots List
    - Sort: online/offline, distance
    - Multiline or extendable, run some tests
    - UI elements:
        - icon
        - name
        - status
        - altitude/altitude gnd/vario
        - distance, direction
        - airtime
        - xc kilometer
        - (takeoff, country flag)
        - altitude histogram
        - (velocity)
    - Make animated

- Make ?add=xxx url that automatically adds given pilots (without removing existing ones. Replacing can be done by first deleting your own ones and then calling the url)

- Implement Navigation (for drivers)


DONE:
- Implement title bar
- Add status popover to connectionstate button
- Implement further processing of websocket messages
- Implement pilot selection list
- Implement selected friends (maybe cookies? website specific storage?)
Animation:
- One central animation class
    - Continuously computes the current posiitons/paths with requestAnimationFrame
    - Can be subscribed by useXContestAnimation()
    - Stops updating once no subscribers are left
- The explicit checking of PilotInfo+SubscribedPilots that we did in MapAnimator should get moved into XContestAnimation.
    It should already return only online+subscribed pilots, and should then also include fallback data from PilotInfos
- Add LiveFlightLanded message: {tag: "LiveFlightLanded", flightUuid: "9a9b770b-dfad-4ce5-b089-356e8529bbd9"}
- Finish settings page
- Throttle fps
- Implement path
- Implement low latency mode
- Changing the path length setting might still cause problems with the XContestSocket.
    - Problem: Socket stores oldest data timestamp, but doesnt take into account that tracks that were added later
      are still missing information
    - Solution: Write little helper class for each flight, that determines the data state per-track
- Implement hardware back button in popups
- Add nice icons to map


Old Notes:
- The markers should be a some kind of arrow / google maps marker with a state symbol inside (double arrow for live, ? for no symbol, some symbol for landed)
    - Normal flight: import NavigationIcon from '@material-ui/icons/Navigation';
                     or import PlayCircleFilledRoundedIcon from '@material-ui/icons/PlayCircleFilledRounded';
    - No response: import HelpIcon from '@material-ui/icons/Help';
    - Landed: import PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';
              or import ArrowDropDownCircleRoundedIcon from '@material-ui/icons/ArrowDropDownCircleRounded';
              or import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';

- PERFORMANCE IMPROVEMENTS
    - Switch Animated components to class-based, not functional
    - Remove Animation getX, replace with callback registration
    - Let classes themselves decide when they need a full update
    - Same for position
- PERFORMANCE IMPROVEMENTS
    - Add virtual tables
- Add color via string-to-color
- Colorize map paths + icons
- Add distance+direction to pilot selection
- The tracks on the map should have a different color for every pilot
- Sort suggested pilots by distance to self
